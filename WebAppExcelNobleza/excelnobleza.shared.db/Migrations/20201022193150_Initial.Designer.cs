// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using excelnobleza.shared;

namespace excelnobleza.shared.db.Migrations
{
    [DbContext(typeof(ApplicationDbContextCore))]
    [Migration("20201022193150_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Otros.AVTFolios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaImpresion")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("AVTFolios");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Otros.Etiqueta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Definition")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("ZPLCode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Nombre");

                    b.ToTable("Etiquetas");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.Desperdicios.Desperdicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DEFECTO")
                        .HasColumnType("int");

                    b.Property<string>("DESCRIPCION")
                        .HasColumnType("text");

                    b.Property<string>("ESTRUCTURA")
                        .HasColumnType("text");

                    b.Property<DateTime>("FECHA")
                        .HasColumnType("datetime");

                    b.Property<int>("MAQUINA")
                        .HasColumnType("int");

                    b.Property<int>("NUMERO")
                        .HasColumnType("int");

                    b.Property<string>("OPERADOR")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OT")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrdenTrabajoOT")
                        .HasColumnType("varchar(767)");

                    b.Property<double>("PESO")
                        .HasColumnType("double");

                    b.Property<int>("TURNO")
                        .HasColumnType("int");

                    b.Property<string>("USUARIO")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DEFECTO");

                    b.HasIndex("MAQUINA");

                    b.HasIndex("OrdenTrabajoOT");

                    b.ToTable("TDESPERDICIOS");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.Desperdicios.TDefecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreDefecto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TDefectos");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.Desperdicios.TFamiliaDefectos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreFamiliaDefecto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TFamiliasDefectos");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.Desperdicios.TFamiliaDefectosTDefecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ProcesoID")
                        .HasColumnType("int");

                    b.Property<int>("TDefectoID")
                        .HasColumnType("int");

                    b.Property<int>("TFamiliaDefectosID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcesoID");

                    b.HasIndex("TDefectoID");

                    b.HasIndex("TFamiliaDefectosID");

                    b.ToTable(" TFamiliaDefectosTDefectos");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.InfoExtra", b =>
                {
                    b.Property<string>("OT")
                        .HasColumnType("varchar(767)");

                    b.Property<double>("ADH1")
                        .HasColumnType("double");

                    b.Property<double>("ADH2")
                        .HasColumnType("double");

                    b.Property<int>("ADHPERM")
                        .HasColumnType("int");

                    b.Property<int>("ADHREM")
                        .HasColumnType("int");

                    b.Property<double>("AJUIMP")
                        .HasColumnType("double");

                    b.Property<double>("AJULAM")
                        .HasColumnType("double");

                    b.Property<double>("AJUTRI")
                        .HasColumnType("double");

                    b.Property<int>("CENTROS")
                        .HasColumnType("int");

                    b.Property<string>("DISENIOAUT")
                        .HasColumnType("text");

                    b.Property<int>("ENABLED")
                        .HasColumnType("int");

                    b.Property<int>("ESPECIAL")
                        .HasColumnType("int");

                    b.Property<int>("ESPECIALLAM")
                        .HasColumnType("int");

                    b.Property<int>("ESPECIALREF")
                        .HasColumnType("int");

                    b.Property<int>("EX1")
                        .HasColumnType("int");

                    b.Property<int>("EX2")
                        .HasColumnType("int");

                    b.Property<int>("EX3")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCaptura")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<double>("LAMIMP")
                        .HasColumnType("double");

                    b.Property<double>("LAMLAM")
                        .HasColumnType("double");

                    b.Property<double>("MERMAPROCESO")
                        .HasColumnType("double");

                    b.Property<int>("ML")
                        .HasColumnType("int");

                    b.Property<double>("PORCTOLERANCIA")
                        .HasColumnType("double");

                    b.Property<string>("ReferenciaFigura")
                        .HasColumnName("ref_fig")
                        .HasColumnType("text");

                    b.Property<double>("TINTA")
                        .HasColumnType("double");

                    b.Property<double>("TRIIMP")
                        .HasColumnType("double");

                    b.Property<double>("TRILAM")
                        .HasColumnType("double");

                    b.Property<double>("TRITRI")
                        .HasColumnType("double");

                    b.Property<int>("ZIPPER")
                        .HasColumnType("int");

                    b.Property<int>("ZIPPER_TYPE")
                        .HasColumnType("int");

                    b.HasKey("OT");

                    b.ToTable("TEMPCAPT");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.Linea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EmailResponsable")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("Responsable")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Lineas");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.Maquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Linea_Id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ModeloMaquina")
                        .HasColumnType("text");

                    b.Property<string>("NombreMaquina")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TipoMaquina_Id")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Linea_Id");

                    b.HasIndex("TipoMaquina_Id");

                    b.ToTable("Maquinas");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.NaveCuatro.NaveCuatro_Tarima", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Ancho")
                        .HasColumnType("double");

                    b.Property<double>("Calibre")
                        .HasColumnType("double");

                    b.Property<DateTime>("FechaCaptura")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaExtrusion")
                        .HasColumnType("datetime");

                    b.Property<string>("OT")
                        .IsRequired()
                        .HasColumnType("varchar(767)");

                    b.Property<string>("Usuario")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OT");

                    b.ToTable("ncuatro_tarimas");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.NaveCuatro.NaveCuatro_TarimaItem", b =>
                {
                    b.Property<int>("Item_Id")
                        .HasColumnType("int");

                    b.Property<int>("Tarima_Id")
                        .HasColumnType("int");

                    b.HasKey("Item_Id", "Tarima_Id");

                    b.HasIndex("Tarima_Id");

                    b.ToTable("ncuatro_tarimas_items");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.OrdenTrabajo", b =>
                {
                    b.Property<string>("OT")
                        .HasColumnType("varchar(767)");

                    b.Property<double>("ALTO")
                        .HasColumnType("double");

                    b.Property<double>("ANCHO")
                        .HasColumnType("double");

                    b.Property<double>("AREASELLOFONDO")
                        .HasColumnType("double");

                    b.Property<double>("AREASELLOREV")
                        .HasColumnType("double");

                    b.Property<double>("CANTIDAD")
                        .HasColumnType("double");

                    b.Property<string>("CLAVEINTELISIS")
                        .HasColumnType("text");

                    b.Property<string>("CLAVEPRODUCTO")
                        .HasColumnType("text");

                    b.Property<string>("CLIENTE")
                        .HasColumnType("text");

                    b.Property<double>("COPETE")
                        .HasColumnType("double");

                    b.Property<string>("EMPATES")
                        .HasColumnType("text");

                    b.Property<string>("ESIMPRESO")
                        .HasColumnType("text");

                    b.Property<string>("EXANCHO")
                        .HasColumnType("text");

                    b.Property<string>("EXANTIESTATICA")
                        .HasColumnType("text");

                    b.Property<string>("EXCOLOR")
                        .HasColumnType("text");

                    b.Property<string>("EXDESLIZ")
                        .HasColumnType("text");

                    b.Property<string>("EXDINAS")
                        .HasColumnType("text");

                    b.Property<string>("EXKG")
                        .HasColumnType("text");

                    b.Property<string>("EXTIPO")
                        .HasColumnType("text");

                    b.Property<string>("EXTRATADO")
                        .HasColumnType("text");

                    b.Property<DateTime>("FECHAENTREGASOL")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FECHARECIBIDO")
                        .HasColumnType("datetime");

                    b.Property<int>("FIGURASALIDAFINAL")
                        .HasColumnType("int");

                    b.Property<double>("FUELLEFONDO")
                        .HasColumnType("double");

                    b.Property<double>("FUELLELATERAL")
                        .HasColumnType("double");

                    b.Property<string>("IMPRESORA")
                        .HasColumnType("text");

                    b.Property<string>("INSTCORTE")
                        .HasColumnType("text");

                    b.Property<string>("INSTDOBLADO")
                        .HasColumnType("text");

                    b.Property<string>("INSTEMBOBINADO")
                        .HasColumnType("text");

                    b.Property<string>("INSTEXTRUSION")
                        .HasColumnType("text");

                    b.Property<string>("INSTIMPRESION")
                        .HasColumnType("text");

                    b.Property<string>("INSTLAMINACION")
                        .HasColumnType("text");

                    b.Property<string>("INSTMANGAS")
                        .HasColumnType("text");

                    b.Property<string>("INSTREFINADO")
                        .HasColumnType("text");

                    b.Property<string>("INSTSELLADO")
                        .HasColumnType("text");

                    b.Property<double>("KGXMILL")
                        .HasColumnType("double");

                    b.Property<string>("MATBASE")
                        .HasColumnType("text");

                    b.Property<double>("MATBASEAMU")
                        .HasColumnType("double");

                    b.Property<double>("MATBASECALIBRE")
                        .HasColumnType("double");

                    b.Property<double>("MATBASEKG")
                        .HasColumnType("double");

                    b.Property<string>("MATLAMINACION")
                        .HasColumnType("text");

                    b.Property<double>("MATLAMINACIONAMU")
                        .HasColumnType("double");

                    b.Property<double>("MATLAMINACIONCALIBRE")
                        .HasColumnType("double");

                    b.Property<double>("MATLAMINACIONKG")
                        .HasColumnType("double");

                    b.Property<string>("MATTRILAMINACION")
                        .HasColumnType("text");

                    b.Property<double>("MATTRILAMINACIONAMU")
                        .HasColumnType("double");

                    b.Property<double>("MATTRILAMINACIONCALIBRE")
                        .HasColumnType("double");

                    b.Property<double>("MATTRILAMINACIONKG")
                        .HasColumnType("double");

                    b.Property<string>("OBSERVACIONES")
                        .HasColumnType("text");

                    b.Property<string>("ORDENCOMPRA")
                        .HasColumnType("text");

                    b.Property<string>("PRODUCTO")
                        .HasColumnType("text");

                    b.Property<double>("REPDES")
                        .HasColumnType("double");

                    b.Property<double>("REPEJE")
                        .HasColumnType("double");

                    b.Property<double>("RODILLO")
                        .HasColumnType("double");

                    b.Property<double>("SOLAPA")
                        .HasColumnType("double");

                    b.Property<int>("TIPO")
                        .HasColumnType("int");

                    b.Property<int>("TIPOIMPRESION")
                        .HasColumnType("int");

                    b.Property<int>("TIPOTRABAJO")
                        .HasColumnType("int");

                    b.Property<string>("UNIDAD")
                        .HasColumnType("text");

                    b.HasKey("OT");

                    b.ToTable("TORDENTRABAJO");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.Proceso", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreProceso")
                        .HasColumnType("varchar(250)")
                        .HasMaxLength(250);

                    b.HasKey("ID");

                    b.ToTable("Procesos");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.Produccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BANDERAS")
                        .HasColumnType("int");

                    b.Property<string>("Comentarios")
                        .HasColumnType("text");

                    b.Property<double?>("DurezaCentro")
                        .HasColumnType("double");

                    b.Property<double?>("DurezaDerecha")
                        .HasColumnType("double");

                    b.Property<double?>("DurezaIzquierda")
                        .HasColumnType("double");

                    b.Property<short>("ENSANEO")
                        .HasColumnType("smallint");

                    b.Property<short>("ESRECHAZADA")
                        .HasColumnType("smallint");

                    b.Property<string>("EXTRUSION_ID")
                        .HasColumnType("text");

                    b.Property<bool>("EnSaneoArrugas")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FECHA")
                        .HasColumnType("datetime");

                    b.Property<short>("FUEEDITADA")
                        .HasColumnType("smallint");

                    b.Property<short>("FUESANEADA")
                        .HasColumnType("smallint");

                    b.Property<string>("INDICE")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Item")
                        .HasColumnType("text");

                    b.Property<int>("MAQUINA")
                        .HasColumnType("int");

                    b.Property<int>("NUMERO")
                        .HasColumnType("int");

                    b.Property<string>("OPERADOR")
                        .HasColumnType("text");

                    b.Property<string>("ORIGEN")
                        .HasColumnType("text");

                    b.Property<string>("OT")
                        .IsRequired()
                        .HasColumnType("varchar(767)");

                    b.Property<double>("PESOBRUTO")
                        .HasColumnType("double");

                    b.Property<double>("PESOCORE")
                        .HasColumnType("double");

                    b.Property<int>("PIEZAS")
                        .HasColumnType("int");

                    b.Property<int>("REPETICION")
                        .HasColumnType("int");

                    b.Property<int>("TIPOPROCESO")
                        .HasColumnType("int");

                    b.Property<int>("TURNO")
                        .HasColumnType("int");

                    b.Property<string>("USUARIO")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("INDICE")
                        .IsUnique();

                    b.HasIndex("MAQUINA");

                    b.HasIndex("NUMERO");

                    b.HasIndex("OT");

                    b.HasIndex("TIPOPROCESO");

                    b.ToTable("TPRODUCCION");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.TipoMaquina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Tipo_Maquina")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TiposMaquina");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.TipoProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NombreTipoProducto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TiposProducto");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.ResiduosPeligrosos.Manifiesto", b =>
                {
                    b.Property<string>("NoManifiesto")
                        .HasColumnType("varchar(767)");

                    b.Property<string>("CargoChofer")
                        .HasColumnType("text");

                    b.Property<string>("CargoReceptor")
                        .HasColumnType("text");

                    b.Property<int>("ClaveP")
                        .HasColumnType("int");

                    b.Property<int>("ClaveT")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<string>("NombreChofer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreReceptor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("NoManifiesto");

                    b.HasIndex("ClaveP");

                    b.HasIndex("ClaveT");

                    b.ToTable("res_Manif");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.ResiduosPeligrosos.ManifiestoDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClaveRP")
                        .HasColumnType("int");

                    b.Property<string>("NoManifiesto")
                        .HasColumnType("varchar(767)");

                    b.HasKey("Id");

                    b.HasIndex("ClaveRP");

                    b.HasIndex("NoManifiesto");

                    b.ToTable("res_dmanif");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.ResiduosPeligrosos.Proveedor", b =>
                {
                    b.Property<int>("ClaveP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AutSEMARNAT")
                        .HasColumnType("text");

                    b.Property<int>("CP")
                        .HasColumnType("int");

                    b.Property<string>("Denominacion")
                        .HasColumnType("text");

                    b.Property<string>("Domicilio")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<string>("Municipio")
                        .HasColumnType("text");

                    b.HasKey("ClaveP");

                    b.ToTable("res_Proved");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.ResiduosPeligrosos.SalidaRP", b =>
                {
                    b.Property<int>("FolioRP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Cantidad")
                        .HasColumnType("double");

                    b.Property<int>("ClaveL")
                        .HasColumnType("int");

                    b.Property<int>("ClaveRP")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEnvasado")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime");

                    b.Property<int?>("FolioDM")
                        .HasColumnType("int");

                    b.HasKey("FolioRP");

                    b.HasIndex("ClaveL");

                    b.HasIndex("ClaveRP");

                    b.HasIndex("FolioDM");

                    b.ToTable("res_SalidaRP");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.ResiduosPeligrosos.TipoRP", b =>
                {
                    b.Property<int>("ClaveRP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("Riesgo")
                        .HasColumnType("int");

                    b.Property<int>("Unidad")
                        .HasColumnType("int");

                    b.HasKey("ClaveRP");

                    b.ToTable("res_TiposRP");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.ResiduosPeligrosos.Transportista", b =>
                {
                    b.Property<int>("ClaveT")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AutSEMARNAT")
                        .HasColumnType("text");

                    b.Property<int>("CP")
                        .HasColumnType("int");

                    b.Property<string>("Denominacion")
                        .HasColumnType("text");

                    b.Property<string>("Domicilio")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<string>("Municipio")
                        .HasColumnType("text");

                    b.Property<string>("RegSCT")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("ClaveT");

                    b.ToTable("res_Transp");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.Desperdicios.Desperdicio", b =>
                {
                    b.HasOne("excelnobleza.shared.Models.Tablas.Produccion.Desperdicios.TFamiliaDefectosTDefecto", "FamiliaDefectosDefecto")
                        .WithMany()
                        .HasForeignKey("DEFECTO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("excelnobleza.shared.Models.Tablas.Produccion.Maquina", "Maquina_")
                        .WithMany()
                        .HasForeignKey("MAQUINA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("excelnobleza.shared.Models.Tablas.Produccion.OrdenTrabajo", null)
                        .WithMany("Desperdicios")
                        .HasForeignKey("OrdenTrabajoOT");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.Desperdicios.TFamiliaDefectosTDefecto", b =>
                {
                    b.HasOne("excelnobleza.shared.Models.Tablas.Produccion.Proceso", "Proceso")
                        .WithMany()
                        .HasForeignKey("ProcesoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("excelnobleza.shared.Models.Tablas.Produccion.Desperdicios.TDefecto", "Defecto")
                        .WithMany("TFamiliaDefectosTDefecto")
                        .HasForeignKey("TDefectoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("excelnobleza.shared.Models.Tablas.Produccion.Desperdicios.TFamiliaDefectos", "FamiliaDefectos")
                        .WithMany("TFamiliaDefectosTDefecto")
                        .HasForeignKey("TFamiliaDefectosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.InfoExtra", b =>
                {
                    b.HasOne("excelnobleza.shared.Models.Tablas.Produccion.OrdenTrabajo", "OrdenTrabajo")
                        .WithOne("TempCapt")
                        .HasForeignKey("excelnobleza.shared.Models.Tablas.Produccion.InfoExtra", "OT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.Maquina", b =>
                {
                    b.HasOne("excelnobleza.shared.Models.Tablas.Produccion.Linea", "Linea")
                        .WithMany("Maquinas")
                        .HasForeignKey("Linea_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("excelnobleza.shared.Models.Tablas.Produccion.TipoMaquina", "TipoMaquina")
                        .WithMany("Maquinas")
                        .HasForeignKey("TipoMaquina_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.NaveCuatro.NaveCuatro_Tarima", b =>
                {
                    b.HasOne("excelnobleza.shared.Models.Tablas.Produccion.OrdenTrabajo", "OrdenTrabajo")
                        .WithMany("TarimasNCuatro")
                        .HasForeignKey("OT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.NaveCuatro.NaveCuatro_TarimaItem", b =>
                {
                    b.HasOne("excelnobleza.shared.Models.Tablas.Produccion.Produccion", "Item")
                        .WithMany()
                        .HasForeignKey("Item_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("excelnobleza.shared.Models.Tablas.Produccion.NaveCuatro.NaveCuatro_Tarima", "Tarima")
                        .WithMany("Items")
                        .HasForeignKey("Tarima_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.Produccion.Produccion", b =>
                {
                    b.HasOne("excelnobleza.shared.Models.Tablas.Produccion.Maquina", "Maquina_")
                        .WithMany()
                        .HasForeignKey("MAQUINA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("excelnobleza.shared.Models.Tablas.Produccion.OrdenTrabajo", "OrdenTrabajo")
                        .WithMany("Produccion")
                        .HasForeignKey("OT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("excelnobleza.shared.Models.Tablas.Produccion.Proceso", "Proceso_")
                        .WithMany("Produccion")
                        .HasForeignKey("TIPOPROCESO")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.ResiduosPeligrosos.Manifiesto", b =>
                {
                    b.HasOne("excelnobleza.shared.Models.Tablas.ResiduosPeligrosos.Proveedor", "Proveedor")
                        .WithMany("Manifiestos")
                        .HasForeignKey("ClaveP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("excelnobleza.shared.Models.Tablas.ResiduosPeligrosos.Transportista", "Transportista")
                        .WithMany("Manifiestos")
                        .HasForeignKey("ClaveT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.ResiduosPeligrosos.ManifiestoDetalle", b =>
                {
                    b.HasOne("excelnobleza.shared.Models.Tablas.ResiduosPeligrosos.TipoRP", "TipoRP")
                        .WithMany()
                        .HasForeignKey("ClaveRP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("excelnobleza.shared.Models.Tablas.ResiduosPeligrosos.Manifiesto", "Manifiesto")
                        .WithMany("ManifiestoDetalle")
                        .HasForeignKey("NoManifiesto");
                });

            modelBuilder.Entity("excelnobleza.shared.Models.Tablas.ResiduosPeligrosos.SalidaRP", b =>
                {
                    b.HasOne("excelnobleza.shared.Models.Tablas.Produccion.Linea", "Linea")
                        .WithMany()
                        .HasForeignKey("ClaveL")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("excelnobleza.shared.Models.Tablas.ResiduosPeligrosos.TipoRP", "TipoRP")
                        .WithMany()
                        .HasForeignKey("ClaveRP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("excelnobleza.shared.Models.Tablas.ResiduosPeligrosos.ManifiestoDetalle", "ManifiestoDetalle")
                        .WithMany("SalidaResiduosPeligrosos")
                        .HasForeignKey("FolioDM");
                });
#pragma warning restore 612, 618
        }
    }
}
