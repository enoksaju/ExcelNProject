'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DataSet1"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DataSet1
    Inherits Global.System.Data.DataSet
    
    Private tableLINEAS As LINEASDataTable
    
    Private tableMAQUINAS As MAQUINASDataTable
    
    Private tableORDENTRABAJO As ORDENTRABAJODataTable
    
    Private tableSP_ORDENTRABAJO As SP_ORDENTRABAJODataTable
    
    Private relationFK_MAQUINAS_0 As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("LINEAS")) Is Nothing) Then
                MyBase.Tables.Add(New LINEASDataTable(ds.Tables("LINEAS")))
            End If
            If (Not (ds.Tables("MAQUINAS")) Is Nothing) Then
                MyBase.Tables.Add(New MAQUINASDataTable(ds.Tables("MAQUINAS")))
            End If
            If (Not (ds.Tables("ORDENTRABAJO")) Is Nothing) Then
                MyBase.Tables.Add(New ORDENTRABAJODataTable(ds.Tables("ORDENTRABAJO")))
            End If
            If (Not (ds.Tables("SP_ORDENTRABAJO")) Is Nothing) Then
                MyBase.Tables.Add(New SP_ORDENTRABAJODataTable(ds.Tables("SP_ORDENTRABAJO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property LINEAS() As LINEASDataTable
        Get
            Return Me.tableLINEAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MAQUINAS() As MAQUINASDataTable
        Get
            Return Me.tableMAQUINAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ORDENTRABAJO() As ORDENTRABAJODataTable
        Get
            Return Me.tableORDENTRABAJO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SP_ORDENTRABAJO() As SP_ORDENTRABAJODataTable
        Get
            Return Me.tableSP_ORDENTRABAJO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DataSet1 = CType(MyBase.Clone,DataSet1)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("LINEAS")) Is Nothing) Then
                MyBase.Tables.Add(New LINEASDataTable(ds.Tables("LINEAS")))
            End If
            If (Not (ds.Tables("MAQUINAS")) Is Nothing) Then
                MyBase.Tables.Add(New MAQUINASDataTable(ds.Tables("MAQUINAS")))
            End If
            If (Not (ds.Tables("ORDENTRABAJO")) Is Nothing) Then
                MyBase.Tables.Add(New ORDENTRABAJODataTable(ds.Tables("ORDENTRABAJO")))
            End If
            If (Not (ds.Tables("SP_ORDENTRABAJO")) Is Nothing) Then
                MyBase.Tables.Add(New SP_ORDENTRABAJODataTable(ds.Tables("SP_ORDENTRABAJO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableLINEAS = CType(MyBase.Tables("LINEAS"),LINEASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableLINEAS) Is Nothing) Then
                Me.tableLINEAS.InitVars
            End If
        End If
        Me.tableMAQUINAS = CType(MyBase.Tables("MAQUINAS"),MAQUINASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMAQUINAS) Is Nothing) Then
                Me.tableMAQUINAS.InitVars
            End If
        End If
        Me.tableORDENTRABAJO = CType(MyBase.Tables("ORDENTRABAJO"),ORDENTRABAJODataTable)
        If (initTable = true) Then
            If (Not (Me.tableORDENTRABAJO) Is Nothing) Then
                Me.tableORDENTRABAJO.InitVars
            End If
        End If
        Me.tableSP_ORDENTRABAJO = CType(MyBase.Tables("SP_ORDENTRABAJO"),SP_ORDENTRABAJODataTable)
        If (initTable = true) Then
            If (Not (Me.tableSP_ORDENTRABAJO) Is Nothing) Then
                Me.tableSP_ORDENTRABAJO.InitVars
            End If
        End If
        Me.relationFK_MAQUINAS_0 = Me.Relations("FK_MAQUINAS_0")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DataSet1"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DataSet1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableLINEAS = New LINEASDataTable()
        MyBase.Tables.Add(Me.tableLINEAS)
        Me.tableMAQUINAS = New MAQUINASDataTable()
        MyBase.Tables.Add(Me.tableMAQUINAS)
        Me.tableORDENTRABAJO = New ORDENTRABAJODataTable()
        MyBase.Tables.Add(Me.tableORDENTRABAJO)
        Me.tableSP_ORDENTRABAJO = New SP_ORDENTRABAJODataTable()
        MyBase.Tables.Add(Me.tableSP_ORDENTRABAJO)
        Me.relationFK_MAQUINAS_0 = New Global.System.Data.DataRelation("FK_MAQUINAS_0", New Global.System.Data.DataColumn() {Me.tableLINEAS.IDColumn}, New Global.System.Data.DataColumn() {Me.tableMAQUINAS.ID_LINEAColumn}, false)
        Me.Relations.Add(Me.relationFK_MAQUINAS_0)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeLINEAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMAQUINAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeORDENTRABAJO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSP_ORDENTRABAJO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DataSet1 = New DataSet1()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub LINEASRowChangeEventHandler(ByVal sender As Object, ByVal e As LINEASRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MAQUINASRowChangeEventHandler(ByVal sender As Object, ByVal e As MAQUINASRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ORDENTRABAJORowChangeEventHandler(ByVal sender As Object, ByVal e As ORDENTRABAJORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SP_ORDENTRABAJORowChangeEventHandler(ByVal sender As Object, ByVal e As SP_ORDENTRABAJORowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LINEASDataTable
        Inherits Global.System.Data.TypedTableBase(Of LINEASRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "LINEAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LINEASRow
            Get
                Return CType(Me.Rows(index),LINEASRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LINEASRowChanging As LINEASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LINEASRowChanged As LINEASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LINEASRowDeleting As LINEASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LINEASRowDeleted As LINEASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddLINEASRow(ByVal row As LINEASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddLINEASRow(ByVal ID As Integer, ByVal NOMBRE As String) As LINEASRow
            Dim rowLINEASRow As LINEASRow = CType(Me.NewRow,LINEASRow)
            Dim columnValuesArray() As Object = New Object() {ID, NOMBRE}
            rowLINEASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLINEASRow)
            Return rowLINEASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As LINEASRow
            Return CType(Me.Rows.Find(New Object() {ID}),LINEASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LINEASDataTable = CType(MyBase.Clone,LINEASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LINEASDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnNOMBRE.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewLINEASRow() As LINEASRow
            Return CType(Me.NewRow,LINEASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LINEASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LINEASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LINEASRowChangedEvent) Is Nothing) Then
                RaiseEvent LINEASRowChanged(Me, New LINEASRowChangeEvent(CType(e.Row,LINEASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LINEASRowChangingEvent) Is Nothing) Then
                RaiseEvent LINEASRowChanging(Me, New LINEASRowChangeEvent(CType(e.Row,LINEASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LINEASRowDeletedEvent) Is Nothing) Then
                RaiseEvent LINEASRowDeleted(Me, New LINEASRowChangeEvent(CType(e.Row,LINEASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LINEASRowDeletingEvent) Is Nothing) Then
                RaiseEvent LINEASRowDeleting(Me, New LINEASRowChangeEvent(CType(e.Row,LINEASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveLINEASRow(ByVal row As LINEASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LINEASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MAQUINASDataTable
        Inherits Global.System.Data.TypedTableBase(Of MAQUINASRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnID_LINEA As Global.System.Data.DataColumn
        
        Private columnPROCESO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MAQUINAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_LINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_LINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROCESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROCESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MAQUINASRow
            Get
                Return CType(Me.Rows(index),MAQUINASRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MAQUINASRowChanging As MAQUINASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MAQUINASRowChanged As MAQUINASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MAQUINASRowDeleting As MAQUINASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MAQUINASRowDeleted As MAQUINASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMAQUINASRow(ByVal row As MAQUINASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMAQUINASRow(ByVal ID As Integer, ByVal NOMBRE As String, ByVal parentLINEASRowByFK_MAQUINAS_0 As LINEASRow, ByVal PROCESO As Short) As MAQUINASRow
            Dim rowMAQUINASRow As MAQUINASRow = CType(Me.NewRow,MAQUINASRow)
            Dim columnValuesArray() As Object = New Object() {ID, NOMBRE, Nothing, PROCESO}
            If (Not (parentLINEASRowByFK_MAQUINAS_0) Is Nothing) Then
                columnValuesArray(2) = parentLINEASRowByFK_MAQUINAS_0(0)
            End If
            rowMAQUINASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMAQUINASRow)
            Return rowMAQUINASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As MAQUINASRow
            Return CType(Me.Rows.Find(New Object() {ID}),MAQUINASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MAQUINASDataTable = CType(MyBase.Clone,MAQUINASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MAQUINASDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnID_LINEA = MyBase.Columns("ID_LINEA")
            Me.columnPROCESO = MyBase.Columns("PROCESO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnID_LINEA = New Global.System.Data.DataColumn("ID_LINEA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_LINEA)
            Me.columnPROCESO = New Global.System.Data.DataColumn("PROCESO", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROCESO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnNOMBRE.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMAQUINASRow() As MAQUINASRow
            Return CType(Me.NewRow,MAQUINASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MAQUINASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MAQUINASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MAQUINASRowChangedEvent) Is Nothing) Then
                RaiseEvent MAQUINASRowChanged(Me, New MAQUINASRowChangeEvent(CType(e.Row,MAQUINASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MAQUINASRowChangingEvent) Is Nothing) Then
                RaiseEvent MAQUINASRowChanging(Me, New MAQUINASRowChangeEvent(CType(e.Row,MAQUINASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MAQUINASRowDeletedEvent) Is Nothing) Then
                RaiseEvent MAQUINASRowDeleted(Me, New MAQUINASRowChangeEvent(CType(e.Row,MAQUINASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MAQUINASRowDeletingEvent) Is Nothing) Then
                RaiseEvent MAQUINASRowDeleting(Me, New MAQUINASRowChangeEvent(CType(e.Row,MAQUINASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMAQUINASRow(ByVal row As MAQUINASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MAQUINASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ORDENTRABAJODataTable
        Inherits Global.System.Data.TypedTableBase(Of ORDENTRABAJORow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnTIPO As Global.System.Data.DataColumn
        
        Private columnFECHARECIBIDO As Global.System.Data.DataColumn
        
        Private columnOT As Global.System.Data.DataColumn
        
        Private columnFECHAENTREGASOL As Global.System.Data.DataColumn
        
        Private columnCLIENTE As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCANTIDAD As Global.System.Data.DataColumn
        
        Private columnUNIDAD As Global.System.Data.DataColumn
        
        Private columnANCHO As Global.System.Data.DataColumn
        
        Private columnALTO As Global.System.Data.DataColumn
        
        Private columnSOLAPA As Global.System.Data.DataColumn
        
        Private columnFUELLELATERAL As Global.System.Data.DataColumn
        
        Private columnFUELLEFONDO As Global.System.Data.DataColumn
        
        Private columnCOPETE As Global.System.Data.DataColumn
        
        Private columnAREASELLOREV As Global.System.Data.DataColumn
        
        Private columnAREASELLOFONDO As Global.System.Data.DataColumn
        
        Private columnTIPOIMPRESION As Global.System.Data.DataColumn
        
        Private columnTIPOTRABAJO As Global.System.Data.DataColumn
        
        Private columnREPEJE As Global.System.Data.DataColumn
        
        Private columnREPDES As Global.System.Data.DataColumn
        
        Private columnMATBASE As Global.System.Data.DataColumn
        
        Private columnMATBASECALIBRE As Global.System.Data.DataColumn
        
        Private columnMATBASEKG As Global.System.Data.DataColumn
        
        Private columnMATLAMINACION As Global.System.Data.DataColumn
        
        Private columnMATLAMINACIONCALIBRE As Global.System.Data.DataColumn
        
        Private columnMATLAMINACIONKG As Global.System.Data.DataColumn
        
        Private columnMATTRILAMINACION As Global.System.Data.DataColumn
        
        Private columnMATTRILAMINACIONCALIBRE As Global.System.Data.DataColumn
        
        Private columnMATTRILAMINACIONKG As Global.System.Data.DataColumn
        
        Private columnCLAVEINTELISIS As Global.System.Data.DataColumn
        
        Private columnORDENCOMPRA As Global.System.Data.DataColumn
        
        Private columnCLAVEPRODUCTO As Global.System.Data.DataColumn
        
        Private columnIMPRESORA As Global.System.Data.DataColumn
        
        Private columnRODILLO As Global.System.Data.DataColumn
        
        Private columnFIGURASALIDAFINAL As Global.System.Data.DataColumn
        
        Private columnEMPATES As Global.System.Data.DataColumn
        
        Private columnINSTCORTE As Global.System.Data.DataColumn
        
        Private columnINSTDOBLADO As Global.System.Data.DataColumn
        
        Private columnINSTEMBOBINADO As Global.System.Data.DataColumn
        
        Private columnINSTEXTRUSION As Global.System.Data.DataColumn
        
        Private columnINSTIMPRESION As Global.System.Data.DataColumn
        
        Private columnINSTLAMINACION As Global.System.Data.DataColumn
        
        Private columnINSTMANGAS As Global.System.Data.DataColumn
        
        Private columnINSTREFINADO As Global.System.Data.DataColumn
        
        Private columnINSTSELLADO As Global.System.Data.DataColumn
        
        Private columnOBSERVACIONES As Global.System.Data.DataColumn
        
        Private columnESIMPRESO As Global.System.Data.DataColumn
        
        Private columnKGXMILL As Global.System.Data.DataColumn
        
        Private columnMATBASEAMU As Global.System.Data.DataColumn
        
        Private columnEXTIPO As Global.System.Data.DataColumn
        
        Private columnEXCOLOR As Global.System.Data.DataColumn
        
        Private columnEXTRATADO As Global.System.Data.DataColumn
        
        Private columnEXDINAS As Global.System.Data.DataColumn
        
        Private columnEXDESLIZ As Global.System.Data.DataColumn
        
        Private columnEXANTIESTATICA As Global.System.Data.DataColumn
        
        Private columnMATLAMINACIONAMU As Global.System.Data.DataColumn
        
        Private columnMATTRILAMINACIONAMU As Global.System.Data.DataColumn
        
        Private columnEXKG As Global.System.Data.DataColumn
        
        Private columnEXANCHO As Global.System.Data.DataColumn
        
        Private columnTIPOINSTRING As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ORDENTRABAJO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHARECIBIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHARECIBIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAENTREGASOLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAENTREGASOL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANCHOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANCHO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ALTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOLAPAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOLAPA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FUELLELATERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFUELLELATERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FUELLEFONDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFUELLEFONDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COPETEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOPETE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AREASELLOREVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAREASELLOREV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AREASELLOFONDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAREASELLOFONDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOIMPRESIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOIMPRESION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOTRABAJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOTRABAJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REPEJEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPEJE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REPDESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPDES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATBASEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATBASE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATBASECALIBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATBASECALIBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATBASEKGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATBASEKG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATLAMINACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATLAMINACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATLAMINACIONCALIBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATLAMINACIONCALIBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATLAMINACIONKGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATLAMINACIONKG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATTRILAMINACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATTRILAMINACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATTRILAMINACIONCALIBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATTRILAMINACIONCALIBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATTRILAMINACIONKGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATTRILAMINACIONKG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLAVEINTELISISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLAVEINTELISIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDENCOMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDENCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLAVEPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLAVEPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPRESORAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPRESORA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RODILLOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRODILLO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIGURASALIDAFINALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIGURASALIDAFINAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMPATESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPATES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTCORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTCORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTDOBLADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTDOBLADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTEMBOBINADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTEMBOBINADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTEXTRUSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTEXTRUSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTIMPRESIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTIMPRESION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTLAMINACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTLAMINACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTMANGASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTMANGAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTREFINADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTREFINADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTSELLADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTSELLADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACIONES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ESIMPRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESIMPRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KGXMILLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKGXMILL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATBASEAMUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATBASEAMU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXCOLORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXCOLOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTRATADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTRATADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXDINASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXDINAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXDESLIZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXDESLIZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXANTIESTATICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXANTIESTATICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATLAMINACIONAMUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATLAMINACIONAMU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATTRILAMINACIONAMUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATTRILAMINACIONAMU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXKGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXKG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXANCHOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXANCHO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOINSTRINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOINSTRING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ORDENTRABAJORow
            Get
                Return CType(Me.Rows(index),ORDENTRABAJORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ORDENTRABAJORowChanging As ORDENTRABAJORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ORDENTRABAJORowChanged As ORDENTRABAJORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ORDENTRABAJORowDeleting As ORDENTRABAJORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ORDENTRABAJORowDeleted As ORDENTRABAJORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddORDENTRABAJORow(ByVal row As ORDENTRABAJORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddORDENTRABAJORow( _
                    ByVal ID As Integer,  _
                    ByVal TIPO As Short,  _
                    ByVal FECHARECIBIDO As Date,  _
                    ByVal OT As String,  _
                    ByVal FECHAENTREGASOL As Date,  _
                    ByVal CLIENTE As String,  _
                    ByVal PRODUCTO As String,  _
                    ByVal CANTIDAD As Single,  _
                    ByVal UNIDAD As String,  _
                    ByVal ANCHO As Single,  _
                    ByVal ALTO As Single,  _
                    ByVal SOLAPA As Single,  _
                    ByVal FUELLELATERAL As Single,  _
                    ByVal FUELLEFONDO As Single,  _
                    ByVal COPETE As Single,  _
                    ByVal AREASELLOREV As Single,  _
                    ByVal AREASELLOFONDO As Single,  _
                    ByVal TIPOIMPRESION As Short,  _
                    ByVal TIPOTRABAJO As Short,  _
                    ByVal REPEJE As Single,  _
                    ByVal REPDES As Single,  _
                    ByVal MATBASE As String,  _
                    ByVal MATBASECALIBRE As Single,  _
                    ByVal MATBASEKG As Single,  _
                    ByVal MATLAMINACION As String,  _
                    ByVal MATLAMINACIONCALIBRE As Single,  _
                    ByVal MATLAMINACIONKG As Single,  _
                    ByVal MATTRILAMINACION As String,  _
                    ByVal MATTRILAMINACIONCALIBRE As Single,  _
                    ByVal MATTRILAMINACIONKG As Single,  _
                    ByVal CLAVEINTELISIS As String,  _
                    ByVal ORDENCOMPRA As String,  _
                    ByVal CLAVEPRODUCTO As String,  _
                    ByVal IMPRESORA As String,  _
                    ByVal RODILLO As Single,  _
                    ByVal FIGURASALIDAFINAL As Short,  _
                    ByVal EMPATES As String,  _
                    ByVal INSTCORTE As String,  _
                    ByVal INSTDOBLADO As String,  _
                    ByVal INSTEMBOBINADO As String,  _
                    ByVal INSTEXTRUSION As String,  _
                    ByVal INSTIMPRESION As String,  _
                    ByVal INSTLAMINACION As String,  _
                    ByVal INSTMANGAS As String,  _
                    ByVal INSTREFINADO As String,  _
                    ByVal INSTSELLADO As String,  _
                    ByVal OBSERVACIONES As String,  _
                    ByVal ESIMPRESO As String,  _
                    ByVal KGXMILL As Single,  _
                    ByVal MATBASEAMU As Single,  _
                    ByVal EXTIPO As String,  _
                    ByVal EXCOLOR As String,  _
                    ByVal EXTRATADO As String,  _
                    ByVal EXDINAS As String,  _
                    ByVal EXDESLIZ As String,  _
                    ByVal EXANTIESTATICA As String,  _
                    ByVal MATLAMINACIONAMU As Single,  _
                    ByVal MATTRILAMINACIONAMU As Single,  _
                    ByVal EXKG As String,  _
                    ByVal EXANCHO As String,  _
                    ByVal TIPOINSTRING As String) As ORDENTRABAJORow
            Dim rowORDENTRABAJORow As ORDENTRABAJORow = CType(Me.NewRow,ORDENTRABAJORow)
            Dim columnValuesArray() As Object = New Object() {ID, TIPO, FECHARECIBIDO, OT, FECHAENTREGASOL, CLIENTE, PRODUCTO, CANTIDAD, UNIDAD, ANCHO, ALTO, SOLAPA, FUELLELATERAL, FUELLEFONDO, COPETE, AREASELLOREV, AREASELLOFONDO, TIPOIMPRESION, TIPOTRABAJO, REPEJE, REPDES, MATBASE, MATBASECALIBRE, MATBASEKG, MATLAMINACION, MATLAMINACIONCALIBRE, MATLAMINACIONKG, MATTRILAMINACION, MATTRILAMINACIONCALIBRE, MATTRILAMINACIONKG, CLAVEINTELISIS, ORDENCOMPRA, CLAVEPRODUCTO, IMPRESORA, RODILLO, FIGURASALIDAFINAL, EMPATES, INSTCORTE, INSTDOBLADO, INSTEMBOBINADO, INSTEXTRUSION, INSTIMPRESION, INSTLAMINACION, INSTMANGAS, INSTREFINADO, INSTSELLADO, OBSERVACIONES, ESIMPRESO, KGXMILL, MATBASEAMU, EXTIPO, EXCOLOR, EXTRATADO, EXDINAS, EXDESLIZ, EXANTIESTATICA, MATLAMINACIONAMU, MATTRILAMINACIONAMU, EXKG, EXANCHO, TIPOINSTRING}
            rowORDENTRABAJORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowORDENTRABAJORow)
            Return rowORDENTRABAJORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As ORDENTRABAJORow
            Return CType(Me.Rows.Find(New Object() {ID}),ORDENTRABAJORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ORDENTRABAJODataTable = CType(MyBase.Clone,ORDENTRABAJODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ORDENTRABAJODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnTIPO = MyBase.Columns("TIPO")
            Me.columnFECHARECIBIDO = MyBase.Columns("FECHARECIBIDO")
            Me.columnOT = MyBase.Columns("OT")
            Me.columnFECHAENTREGASOL = MyBase.Columns("FECHAENTREGASOL")
            Me.columnCLIENTE = MyBase.Columns("CLIENTE")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnCANTIDAD = MyBase.Columns("CANTIDAD")
            Me.columnUNIDAD = MyBase.Columns("UNIDAD")
            Me.columnANCHO = MyBase.Columns("ANCHO")
            Me.columnALTO = MyBase.Columns("ALTO")
            Me.columnSOLAPA = MyBase.Columns("SOLAPA")
            Me.columnFUELLELATERAL = MyBase.Columns("FUELLELATERAL")
            Me.columnFUELLEFONDO = MyBase.Columns("FUELLEFONDO")
            Me.columnCOPETE = MyBase.Columns("COPETE")
            Me.columnAREASELLOREV = MyBase.Columns("AREASELLOREV")
            Me.columnAREASELLOFONDO = MyBase.Columns("AREASELLOFONDO")
            Me.columnTIPOIMPRESION = MyBase.Columns("TIPOIMPRESION")
            Me.columnTIPOTRABAJO = MyBase.Columns("TIPOTRABAJO")
            Me.columnREPEJE = MyBase.Columns("REPEJE")
            Me.columnREPDES = MyBase.Columns("REPDES")
            Me.columnMATBASE = MyBase.Columns("MATBASE")
            Me.columnMATBASECALIBRE = MyBase.Columns("MATBASECALIBRE")
            Me.columnMATBASEKG = MyBase.Columns("MATBASEKG")
            Me.columnMATLAMINACION = MyBase.Columns("MATLAMINACION")
            Me.columnMATLAMINACIONCALIBRE = MyBase.Columns("MATLAMINACIONCALIBRE")
            Me.columnMATLAMINACIONKG = MyBase.Columns("MATLAMINACIONKG")
            Me.columnMATTRILAMINACION = MyBase.Columns("MATTRILAMINACION")
            Me.columnMATTRILAMINACIONCALIBRE = MyBase.Columns("MATTRILAMINACIONCALIBRE")
            Me.columnMATTRILAMINACIONKG = MyBase.Columns("MATTRILAMINACIONKG")
            Me.columnCLAVEINTELISIS = MyBase.Columns("CLAVEINTELISIS")
            Me.columnORDENCOMPRA = MyBase.Columns("ORDENCOMPRA")
            Me.columnCLAVEPRODUCTO = MyBase.Columns("CLAVEPRODUCTO")
            Me.columnIMPRESORA = MyBase.Columns("IMPRESORA")
            Me.columnRODILLO = MyBase.Columns("RODILLO")
            Me.columnFIGURASALIDAFINAL = MyBase.Columns("FIGURASALIDAFINAL")
            Me.columnEMPATES = MyBase.Columns("EMPATES")
            Me.columnINSTCORTE = MyBase.Columns("INSTCORTE")
            Me.columnINSTDOBLADO = MyBase.Columns("INSTDOBLADO")
            Me.columnINSTEMBOBINADO = MyBase.Columns("INSTEMBOBINADO")
            Me.columnINSTEXTRUSION = MyBase.Columns("INSTEXTRUSION")
            Me.columnINSTIMPRESION = MyBase.Columns("INSTIMPRESION")
            Me.columnINSTLAMINACION = MyBase.Columns("INSTLAMINACION")
            Me.columnINSTMANGAS = MyBase.Columns("INSTMANGAS")
            Me.columnINSTREFINADO = MyBase.Columns("INSTREFINADO")
            Me.columnINSTSELLADO = MyBase.Columns("INSTSELLADO")
            Me.columnOBSERVACIONES = MyBase.Columns("OBSERVACIONES")
            Me.columnESIMPRESO = MyBase.Columns("ESIMPRESO")
            Me.columnKGXMILL = MyBase.Columns("KGXMILL")
            Me.columnMATBASEAMU = MyBase.Columns("MATBASEAMU")
            Me.columnEXTIPO = MyBase.Columns("EXTIPO")
            Me.columnEXCOLOR = MyBase.Columns("EXCOLOR")
            Me.columnEXTRATADO = MyBase.Columns("EXTRATADO")
            Me.columnEXDINAS = MyBase.Columns("EXDINAS")
            Me.columnEXDESLIZ = MyBase.Columns("EXDESLIZ")
            Me.columnEXANTIESTATICA = MyBase.Columns("EXANTIESTATICA")
            Me.columnMATLAMINACIONAMU = MyBase.Columns("MATLAMINACIONAMU")
            Me.columnMATTRILAMINACIONAMU = MyBase.Columns("MATTRILAMINACIONAMU")
            Me.columnEXKG = MyBase.Columns("EXKG")
            Me.columnEXANCHO = MyBase.Columns("EXANCHO")
            Me.columnTIPOINSTRING = MyBase.Columns("TIPOINSTRING")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnTIPO = New Global.System.Data.DataColumn("TIPO", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO)
            Me.columnFECHARECIBIDO = New Global.System.Data.DataColumn("FECHARECIBIDO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHARECIBIDO)
            Me.columnOT = New Global.System.Data.DataColumn("OT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOT)
            Me.columnFECHAENTREGASOL = New Global.System.Data.DataColumn("FECHAENTREGASOL", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAENTREGASOL)
            Me.columnCLIENTE = New Global.System.Data.DataColumn("CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENTE)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnCANTIDAD = New Global.System.Data.DataColumn("CANTIDAD", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD)
            Me.columnUNIDAD = New Global.System.Data.DataColumn("UNIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIDAD)
            Me.columnANCHO = New Global.System.Data.DataColumn("ANCHO", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANCHO)
            Me.columnALTO = New Global.System.Data.DataColumn("ALTO", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALTO)
            Me.columnSOLAPA = New Global.System.Data.DataColumn("SOLAPA", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOLAPA)
            Me.columnFUELLELATERAL = New Global.System.Data.DataColumn("FUELLELATERAL", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFUELLELATERAL)
            Me.columnFUELLEFONDO = New Global.System.Data.DataColumn("FUELLEFONDO", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFUELLEFONDO)
            Me.columnCOPETE = New Global.System.Data.DataColumn("COPETE", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOPETE)
            Me.columnAREASELLOREV = New Global.System.Data.DataColumn("AREASELLOREV", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAREASELLOREV)
            Me.columnAREASELLOFONDO = New Global.System.Data.DataColumn("AREASELLOFONDO", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAREASELLOFONDO)
            Me.columnTIPOIMPRESION = New Global.System.Data.DataColumn("TIPOIMPRESION", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOIMPRESION)
            Me.columnTIPOTRABAJO = New Global.System.Data.DataColumn("TIPOTRABAJO", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOTRABAJO)
            Me.columnREPEJE = New Global.System.Data.DataColumn("REPEJE", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPEJE)
            Me.columnREPDES = New Global.System.Data.DataColumn("REPDES", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPDES)
            Me.columnMATBASE = New Global.System.Data.DataColumn("MATBASE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATBASE)
            Me.columnMATBASECALIBRE = New Global.System.Data.DataColumn("MATBASECALIBRE", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATBASECALIBRE)
            Me.columnMATBASEKG = New Global.System.Data.DataColumn("MATBASEKG", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATBASEKG)
            Me.columnMATLAMINACION = New Global.System.Data.DataColumn("MATLAMINACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATLAMINACION)
            Me.columnMATLAMINACIONCALIBRE = New Global.System.Data.DataColumn("MATLAMINACIONCALIBRE", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATLAMINACIONCALIBRE)
            Me.columnMATLAMINACIONKG = New Global.System.Data.DataColumn("MATLAMINACIONKG", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATLAMINACIONKG)
            Me.columnMATTRILAMINACION = New Global.System.Data.DataColumn("MATTRILAMINACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATTRILAMINACION)
            Me.columnMATTRILAMINACIONCALIBRE = New Global.System.Data.DataColumn("MATTRILAMINACIONCALIBRE", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATTRILAMINACIONCALIBRE)
            Me.columnMATTRILAMINACIONKG = New Global.System.Data.DataColumn("MATTRILAMINACIONKG", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATTRILAMINACIONKG)
            Me.columnCLAVEINTELISIS = New Global.System.Data.DataColumn("CLAVEINTELISIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLAVEINTELISIS)
            Me.columnORDENCOMPRA = New Global.System.Data.DataColumn("ORDENCOMPRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDENCOMPRA)
            Me.columnCLAVEPRODUCTO = New Global.System.Data.DataColumn("CLAVEPRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLAVEPRODUCTO)
            Me.columnIMPRESORA = New Global.System.Data.DataColumn("IMPRESORA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPRESORA)
            Me.columnRODILLO = New Global.System.Data.DataColumn("RODILLO", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRODILLO)
            Me.columnFIGURASALIDAFINAL = New Global.System.Data.DataColumn("FIGURASALIDAFINAL", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIGURASALIDAFINAL)
            Me.columnEMPATES = New Global.System.Data.DataColumn("EMPATES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPATES)
            Me.columnINSTCORTE = New Global.System.Data.DataColumn("INSTCORTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTCORTE)
            Me.columnINSTDOBLADO = New Global.System.Data.DataColumn("INSTDOBLADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTDOBLADO)
            Me.columnINSTEMBOBINADO = New Global.System.Data.DataColumn("INSTEMBOBINADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTEMBOBINADO)
            Me.columnINSTEXTRUSION = New Global.System.Data.DataColumn("INSTEXTRUSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTEXTRUSION)
            Me.columnINSTIMPRESION = New Global.System.Data.DataColumn("INSTIMPRESION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTIMPRESION)
            Me.columnINSTLAMINACION = New Global.System.Data.DataColumn("INSTLAMINACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTLAMINACION)
            Me.columnINSTMANGAS = New Global.System.Data.DataColumn("INSTMANGAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTMANGAS)
            Me.columnINSTREFINADO = New Global.System.Data.DataColumn("INSTREFINADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTREFINADO)
            Me.columnINSTSELLADO = New Global.System.Data.DataColumn("INSTSELLADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTSELLADO)
            Me.columnOBSERVACIONES = New Global.System.Data.DataColumn("OBSERVACIONES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACIONES)
            Me.columnESIMPRESO = New Global.System.Data.DataColumn("ESIMPRESO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESIMPRESO)
            Me.columnKGXMILL = New Global.System.Data.DataColumn("KGXMILL", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKGXMILL)
            Me.columnMATBASEAMU = New Global.System.Data.DataColumn("MATBASEAMU", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATBASEAMU)
            Me.columnEXTIPO = New Global.System.Data.DataColumn("EXTIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTIPO)
            Me.columnEXCOLOR = New Global.System.Data.DataColumn("EXCOLOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXCOLOR)
            Me.columnEXTRATADO = New Global.System.Data.DataColumn("EXTRATADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTRATADO)
            Me.columnEXDINAS = New Global.System.Data.DataColumn("EXDINAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXDINAS)
            Me.columnEXDESLIZ = New Global.System.Data.DataColumn("EXDESLIZ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXDESLIZ)
            Me.columnEXANTIESTATICA = New Global.System.Data.DataColumn("EXANTIESTATICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXANTIESTATICA)
            Me.columnMATLAMINACIONAMU = New Global.System.Data.DataColumn("MATLAMINACIONAMU", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATLAMINACIONAMU)
            Me.columnMATTRILAMINACIONAMU = New Global.System.Data.DataColumn("MATTRILAMINACIONAMU", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATTRILAMINACIONAMU)
            Me.columnEXKG = New Global.System.Data.DataColumn("EXKG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXKG)
            Me.columnEXANCHO = New Global.System.Data.DataColumn("EXANCHO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXANCHO)
            Me.columnTIPOINSTRING = New Global.System.Data.DataColumn("TIPOINSTRING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOINSTRING)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnOT}, false))
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint2", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnOT.Unique = true
            Me.columnOT.MaxLength = 10
            Me.columnCLIENTE.MaxLength = 1000
            Me.columnPRODUCTO.MaxLength = 1000
            Me.columnUNIDAD.MaxLength = 100
            Me.columnMATBASE.MaxLength = 250
            Me.columnMATLAMINACION.MaxLength = 250
            Me.columnMATTRILAMINACION.MaxLength = 250
            Me.columnCLAVEINTELISIS.MaxLength = 100
            Me.columnORDENCOMPRA.MaxLength = 100
            Me.columnCLAVEPRODUCTO.MaxLength = 100
            Me.columnIMPRESORA.MaxLength = 500
            Me.columnEMPATES.MaxLength = 1500
            Me.columnINSTCORTE.MaxLength = 2500
            Me.columnINSTDOBLADO.MaxLength = 2500
            Me.columnINSTEMBOBINADO.MaxLength = 2500
            Me.columnINSTEXTRUSION.MaxLength = 2500
            Me.columnINSTIMPRESION.MaxLength = 2500
            Me.columnINSTLAMINACION.MaxLength = 2500
            Me.columnINSTMANGAS.MaxLength = 2500
            Me.columnINSTREFINADO.MaxLength = 2500
            Me.columnINSTSELLADO.MaxLength = 2500
            Me.columnOBSERVACIONES.MaxLength = 2500
            Me.columnESIMPRESO.MaxLength = 10
            Me.columnEXTIPO.MaxLength = 1000
            Me.columnEXCOLOR.MaxLength = 1000
            Me.columnEXTRATADO.MaxLength = 1000
            Me.columnEXDINAS.MaxLength = 1000
            Me.columnEXDESLIZ.MaxLength = 1000
            Me.columnEXANTIESTATICA.MaxLength = 1000
            Me.columnEXKG.MaxLength = 100
            Me.columnEXANCHO.MaxLength = 100
            Me.columnTIPOINSTRING.ReadOnly = true
            Me.columnTIPOINSTRING.MaxLength = 36
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewORDENTRABAJORow() As ORDENTRABAJORow
            Return CType(Me.NewRow,ORDENTRABAJORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ORDENTRABAJORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ORDENTRABAJORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ORDENTRABAJORowChangedEvent) Is Nothing) Then
                RaiseEvent ORDENTRABAJORowChanged(Me, New ORDENTRABAJORowChangeEvent(CType(e.Row,ORDENTRABAJORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ORDENTRABAJORowChangingEvent) Is Nothing) Then
                RaiseEvent ORDENTRABAJORowChanging(Me, New ORDENTRABAJORowChangeEvent(CType(e.Row,ORDENTRABAJORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ORDENTRABAJORowDeletedEvent) Is Nothing) Then
                RaiseEvent ORDENTRABAJORowDeleted(Me, New ORDENTRABAJORowChangeEvent(CType(e.Row,ORDENTRABAJORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ORDENTRABAJORowDeletingEvent) Is Nothing) Then
                RaiseEvent ORDENTRABAJORowDeleting(Me, New ORDENTRABAJORowChangeEvent(CType(e.Row,ORDENTRABAJORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveORDENTRABAJORow(ByVal row As ORDENTRABAJORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ORDENTRABAJODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SP_ORDENTRABAJODataTable
        Inherits Global.System.Data.TypedTableBase(Of SP_ORDENTRABAJORow)
        
        Private columnTIPO As Global.System.Data.DataColumn
        
        Private columnFECHARECIBIDO As Global.System.Data.DataColumn
        
        Private columnFECHAENTREGASOL As Global.System.Data.DataColumn
        
        Private columnCLIENTE As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCANTIDAD As Global.System.Data.DataColumn
        
        Private columnUNIDAD As Global.System.Data.DataColumn
        
        Private columnANCHO As Global.System.Data.DataColumn
        
        Private columnALTO As Global.System.Data.DataColumn
        
        Private columnSOLAPA As Global.System.Data.DataColumn
        
        Private columnFUELLELATERAL As Global.System.Data.DataColumn
        
        Private columnFUELLEFONDO As Global.System.Data.DataColumn
        
        Private columnCOPETE As Global.System.Data.DataColumn
        
        Private columnAREASELLOREV As Global.System.Data.DataColumn
        
        Private columnAREASELLOFONDO As Global.System.Data.DataColumn
        
        Private columnTIPOIMPRESION As Global.System.Data.DataColumn
        
        Private columnTIPOTRABAJO As Global.System.Data.DataColumn
        
        Private columnREPEJE As Global.System.Data.DataColumn
        
        Private columnREPDES As Global.System.Data.DataColumn
        
        Private columnMATBASE As Global.System.Data.DataColumn
        
        Private columnMATBASECALIBRE As Global.System.Data.DataColumn
        
        Private columnMATBASEKG As Global.System.Data.DataColumn
        
        Private columnMATLAMINACION As Global.System.Data.DataColumn
        
        Private columnMATLAMINACIONCALIBRE As Global.System.Data.DataColumn
        
        Private columnMATLAMINACIONKG As Global.System.Data.DataColumn
        
        Private columnMATTRILAMINACION As Global.System.Data.DataColumn
        
        Private columnMATTRILAMINACIONCALIBRE As Global.System.Data.DataColumn
        
        Private columnMATTRILAMINACIONKG As Global.System.Data.DataColumn
        
        Private columnCLAVEINTELISIS As Global.System.Data.DataColumn
        
        Private columnORDENCOMPRA As Global.System.Data.DataColumn
        
        Private columnCLAVEPRODUCTO As Global.System.Data.DataColumn
        
        Private columnIMPRESORA As Global.System.Data.DataColumn
        
        Private columnRODILLO As Global.System.Data.DataColumn
        
        Private columnFIGURASALIDAFINAL As Global.System.Data.DataColumn
        
        Private columnEMPATES As Global.System.Data.DataColumn
        
        Private columnINSTCORTE As Global.System.Data.DataColumn
        
        Private columnINSTDOBLADO As Global.System.Data.DataColumn
        
        Private columnINSTEMBOBINADO As Global.System.Data.DataColumn
        
        Private columnINSTEXTRUSION As Global.System.Data.DataColumn
        
        Private columnINSTIMPRESION As Global.System.Data.DataColumn
        
        Private columnINSTLAMINACION As Global.System.Data.DataColumn
        
        Private columnINSTMANGAS As Global.System.Data.DataColumn
        
        Private columnINSTREFINADO As Global.System.Data.DataColumn
        
        Private columnINSTSELLADO As Global.System.Data.DataColumn
        
        Private columnOBSERVACIONES As Global.System.Data.DataColumn
        
        Private columnESIMPRESO As Global.System.Data.DataColumn
        
        Private columnKGXMILL As Global.System.Data.DataColumn
        
        Private columnMATBASEAMU As Global.System.Data.DataColumn
        
        Private columnEXTIPO As Global.System.Data.DataColumn
        
        Private columnEXCOLOR As Global.System.Data.DataColumn
        
        Private columnEXTRATADO As Global.System.Data.DataColumn
        
        Private columnEXDINAS As Global.System.Data.DataColumn
        
        Private columnEXDESLIZ As Global.System.Data.DataColumn
        
        Private columnEXANTIESTATICA As Global.System.Data.DataColumn
        
        Private columnMATLAMINACIONAMU As Global.System.Data.DataColumn
        
        Private columnMATTRILAMINACIONAMU As Global.System.Data.DataColumn
        
        Private columnEXKG As Global.System.Data.DataColumn
        
        Private columnEXANCHO As Global.System.Data.DataColumn
        
        Private columnENABLED As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SP_ORDENTRABAJO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHARECIBIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHARECIBIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAENTREGASOLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAENTREGASOL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UNIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUNIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANCHOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANCHO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ALTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SOLAPAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOLAPA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FUELLELATERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFUELLELATERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FUELLEFONDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFUELLEFONDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COPETEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOPETE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AREASELLOREVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAREASELLOREV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AREASELLOFONDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAREASELLOFONDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOIMPRESIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOIMPRESION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOTRABAJOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOTRABAJO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REPEJEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPEJE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property REPDESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnREPDES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATBASEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATBASE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATBASECALIBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATBASECALIBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATBASEKGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATBASEKG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATLAMINACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATLAMINACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATLAMINACIONCALIBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATLAMINACIONCALIBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATLAMINACIONKGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATLAMINACIONKG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATTRILAMINACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATTRILAMINACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATTRILAMINACIONCALIBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATTRILAMINACIONCALIBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATTRILAMINACIONKGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATTRILAMINACIONKG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLAVEINTELISISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLAVEINTELISIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDENCOMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDENCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLAVEPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLAVEPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPRESORAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPRESORA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RODILLOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRODILLO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIGURASALIDAFINALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIGURASALIDAFINAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMPATESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPATES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTCORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTCORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTDOBLADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTDOBLADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTEMBOBINADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTEMBOBINADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTEXTRUSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTEXTRUSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTIMPRESIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTIMPRESION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTLAMINACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTLAMINACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTMANGASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTMANGAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTREFINADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTREFINADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INSTSELLADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINSTSELLADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACIONES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ESIMPRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESIMPRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KGXMILLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKGXMILL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATBASEAMUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATBASEAMU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXCOLORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXCOLOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXTRATADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTRATADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXDINASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXDINAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXDESLIZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXDESLIZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXANTIESTATICAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXANTIESTATICA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATLAMINACIONAMUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATLAMINACIONAMU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MATTRILAMINACIONAMUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMATTRILAMINACIONAMU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXKGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXKG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EXANCHOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXANCHO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENABLEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENABLED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SP_ORDENTRABAJORow
            Get
                Return CType(Me.Rows(index),SP_ORDENTRABAJORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_ORDENTRABAJORowChanging As SP_ORDENTRABAJORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_ORDENTRABAJORowChanged As SP_ORDENTRABAJORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_ORDENTRABAJORowDeleting As SP_ORDENTRABAJORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SP_ORDENTRABAJORowDeleted As SP_ORDENTRABAJORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSP_ORDENTRABAJORow(ByVal row As SP_ORDENTRABAJORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSP_ORDENTRABAJORow( _
                    ByVal TIPO As Short,  _
                    ByVal FECHARECIBIDO As Date,  _
                    ByVal FECHAENTREGASOL As Date,  _
                    ByVal CLIENTE As String,  _
                    ByVal PRODUCTO As String,  _
                    ByVal CANTIDAD As Single,  _
                    ByVal UNIDAD As String,  _
                    ByVal ANCHO As Single,  _
                    ByVal ALTO As Single,  _
                    ByVal SOLAPA As Single,  _
                    ByVal FUELLELATERAL As Single,  _
                    ByVal FUELLEFONDO As Single,  _
                    ByVal COPETE As Single,  _
                    ByVal AREASELLOREV As Single,  _
                    ByVal AREASELLOFONDO As Single,  _
                    ByVal TIPOIMPRESION As Short,  _
                    ByVal TIPOTRABAJO As Short,  _
                    ByVal REPEJE As Single,  _
                    ByVal REPDES As Single,  _
                    ByVal MATBASE As String,  _
                    ByVal MATBASECALIBRE As Single,  _
                    ByVal MATBASEKG As Single,  _
                    ByVal MATLAMINACION As String,  _
                    ByVal MATLAMINACIONCALIBRE As Single,  _
                    ByVal MATLAMINACIONKG As Single,  _
                    ByVal MATTRILAMINACION As String,  _
                    ByVal MATTRILAMINACIONCALIBRE As Single,  _
                    ByVal MATTRILAMINACIONKG As Single,  _
                    ByVal CLAVEINTELISIS As String,  _
                    ByVal ORDENCOMPRA As String,  _
                    ByVal CLAVEPRODUCTO As String,  _
                    ByVal IMPRESORA As String,  _
                    ByVal RODILLO As Single,  _
                    ByVal FIGURASALIDAFINAL As Short,  _
                    ByVal EMPATES As String,  _
                    ByVal INSTCORTE As String,  _
                    ByVal INSTDOBLADO As String,  _
                    ByVal INSTEMBOBINADO As String,  _
                    ByVal INSTEXTRUSION As String,  _
                    ByVal INSTIMPRESION As String,  _
                    ByVal INSTLAMINACION As String,  _
                    ByVal INSTMANGAS As String,  _
                    ByVal INSTREFINADO As String,  _
                    ByVal INSTSELLADO As String,  _
                    ByVal OBSERVACIONES As String,  _
                    ByVal ESIMPRESO As String,  _
                    ByVal KGXMILL As Single,  _
                    ByVal MATBASEAMU As Single,  _
                    ByVal EXTIPO As String,  _
                    ByVal EXCOLOR As String,  _
                    ByVal EXTRATADO As String,  _
                    ByVal EXDINAS As String,  _
                    ByVal EXDESLIZ As String,  _
                    ByVal EXANTIESTATICA As String,  _
                    ByVal MATLAMINACIONAMU As Single,  _
                    ByVal MATTRILAMINACIONAMU As Single,  _
                    ByVal EXKG As String,  _
                    ByVal EXANCHO As String,  _
                    ByVal ENABLED As Boolean) As SP_ORDENTRABAJORow
            Dim rowSP_ORDENTRABAJORow As SP_ORDENTRABAJORow = CType(Me.NewRow,SP_ORDENTRABAJORow)
            Dim columnValuesArray() As Object = New Object() {TIPO, FECHARECIBIDO, FECHAENTREGASOL, CLIENTE, PRODUCTO, CANTIDAD, UNIDAD, ANCHO, ALTO, SOLAPA, FUELLELATERAL, FUELLEFONDO, COPETE, AREASELLOREV, AREASELLOFONDO, TIPOIMPRESION, TIPOTRABAJO, REPEJE, REPDES, MATBASE, MATBASECALIBRE, MATBASEKG, MATLAMINACION, MATLAMINACIONCALIBRE, MATLAMINACIONKG, MATTRILAMINACION, MATTRILAMINACIONCALIBRE, MATTRILAMINACIONKG, CLAVEINTELISIS, ORDENCOMPRA, CLAVEPRODUCTO, IMPRESORA, RODILLO, FIGURASALIDAFINAL, EMPATES, INSTCORTE, INSTDOBLADO, INSTEMBOBINADO, INSTEXTRUSION, INSTIMPRESION, INSTLAMINACION, INSTMANGAS, INSTREFINADO, INSTSELLADO, OBSERVACIONES, ESIMPRESO, KGXMILL, MATBASEAMU, EXTIPO, EXCOLOR, EXTRATADO, EXDINAS, EXDESLIZ, EXANTIESTATICA, MATLAMINACIONAMU, MATTRILAMINACIONAMU, EXKG, EXANCHO, ENABLED}
            rowSP_ORDENTRABAJORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSP_ORDENTRABAJORow)
            Return rowSP_ORDENTRABAJORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SP_ORDENTRABAJODataTable = CType(MyBase.Clone,SP_ORDENTRABAJODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SP_ORDENTRABAJODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTIPO = MyBase.Columns("TIPO")
            Me.columnFECHARECIBIDO = MyBase.Columns("FECHARECIBIDO")
            Me.columnFECHAENTREGASOL = MyBase.Columns("FECHAENTREGASOL")
            Me.columnCLIENTE = MyBase.Columns("CLIENTE")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnCANTIDAD = MyBase.Columns("CANTIDAD")
            Me.columnUNIDAD = MyBase.Columns("UNIDAD")
            Me.columnANCHO = MyBase.Columns("ANCHO")
            Me.columnALTO = MyBase.Columns("ALTO")
            Me.columnSOLAPA = MyBase.Columns("SOLAPA")
            Me.columnFUELLELATERAL = MyBase.Columns("FUELLELATERAL")
            Me.columnFUELLEFONDO = MyBase.Columns("FUELLEFONDO")
            Me.columnCOPETE = MyBase.Columns("COPETE")
            Me.columnAREASELLOREV = MyBase.Columns("AREASELLOREV")
            Me.columnAREASELLOFONDO = MyBase.Columns("AREASELLOFONDO")
            Me.columnTIPOIMPRESION = MyBase.Columns("TIPOIMPRESION")
            Me.columnTIPOTRABAJO = MyBase.Columns("TIPOTRABAJO")
            Me.columnREPEJE = MyBase.Columns("REPEJE")
            Me.columnREPDES = MyBase.Columns("REPDES")
            Me.columnMATBASE = MyBase.Columns("MATBASE")
            Me.columnMATBASECALIBRE = MyBase.Columns("MATBASECALIBRE")
            Me.columnMATBASEKG = MyBase.Columns("MATBASEKG")
            Me.columnMATLAMINACION = MyBase.Columns("MATLAMINACION")
            Me.columnMATLAMINACIONCALIBRE = MyBase.Columns("MATLAMINACIONCALIBRE")
            Me.columnMATLAMINACIONKG = MyBase.Columns("MATLAMINACIONKG")
            Me.columnMATTRILAMINACION = MyBase.Columns("MATTRILAMINACION")
            Me.columnMATTRILAMINACIONCALIBRE = MyBase.Columns("MATTRILAMINACIONCALIBRE")
            Me.columnMATTRILAMINACIONKG = MyBase.Columns("MATTRILAMINACIONKG")
            Me.columnCLAVEINTELISIS = MyBase.Columns("CLAVEINTELISIS")
            Me.columnORDENCOMPRA = MyBase.Columns("ORDENCOMPRA")
            Me.columnCLAVEPRODUCTO = MyBase.Columns("CLAVEPRODUCTO")
            Me.columnIMPRESORA = MyBase.Columns("IMPRESORA")
            Me.columnRODILLO = MyBase.Columns("RODILLO")
            Me.columnFIGURASALIDAFINAL = MyBase.Columns("FIGURASALIDAFINAL")
            Me.columnEMPATES = MyBase.Columns("EMPATES")
            Me.columnINSTCORTE = MyBase.Columns("INSTCORTE")
            Me.columnINSTDOBLADO = MyBase.Columns("INSTDOBLADO")
            Me.columnINSTEMBOBINADO = MyBase.Columns("INSTEMBOBINADO")
            Me.columnINSTEXTRUSION = MyBase.Columns("INSTEXTRUSION")
            Me.columnINSTIMPRESION = MyBase.Columns("INSTIMPRESION")
            Me.columnINSTLAMINACION = MyBase.Columns("INSTLAMINACION")
            Me.columnINSTMANGAS = MyBase.Columns("INSTMANGAS")
            Me.columnINSTREFINADO = MyBase.Columns("INSTREFINADO")
            Me.columnINSTSELLADO = MyBase.Columns("INSTSELLADO")
            Me.columnOBSERVACIONES = MyBase.Columns("OBSERVACIONES")
            Me.columnESIMPRESO = MyBase.Columns("ESIMPRESO")
            Me.columnKGXMILL = MyBase.Columns("KGXMILL")
            Me.columnMATBASEAMU = MyBase.Columns("MATBASEAMU")
            Me.columnEXTIPO = MyBase.Columns("EXTIPO")
            Me.columnEXCOLOR = MyBase.Columns("EXCOLOR")
            Me.columnEXTRATADO = MyBase.Columns("EXTRATADO")
            Me.columnEXDINAS = MyBase.Columns("EXDINAS")
            Me.columnEXDESLIZ = MyBase.Columns("EXDESLIZ")
            Me.columnEXANTIESTATICA = MyBase.Columns("EXANTIESTATICA")
            Me.columnMATLAMINACIONAMU = MyBase.Columns("MATLAMINACIONAMU")
            Me.columnMATTRILAMINACIONAMU = MyBase.Columns("MATTRILAMINACIONAMU")
            Me.columnEXKG = MyBase.Columns("EXKG")
            Me.columnEXANCHO = MyBase.Columns("EXANCHO")
            Me.columnENABLED = MyBase.Columns("ENABLED")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTIPO = New Global.System.Data.DataColumn("TIPO", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO)
            Me.columnFECHARECIBIDO = New Global.System.Data.DataColumn("FECHARECIBIDO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHARECIBIDO)
            Me.columnFECHAENTREGASOL = New Global.System.Data.DataColumn("FECHAENTREGASOL", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAENTREGASOL)
            Me.columnCLIENTE = New Global.System.Data.DataColumn("CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENTE)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnCANTIDAD = New Global.System.Data.DataColumn("CANTIDAD", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD)
            Me.columnUNIDAD = New Global.System.Data.DataColumn("UNIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUNIDAD)
            Me.columnANCHO = New Global.System.Data.DataColumn("ANCHO", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANCHO)
            Me.columnALTO = New Global.System.Data.DataColumn("ALTO", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALTO)
            Me.columnSOLAPA = New Global.System.Data.DataColumn("SOLAPA", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOLAPA)
            Me.columnFUELLELATERAL = New Global.System.Data.DataColumn("FUELLELATERAL", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFUELLELATERAL)
            Me.columnFUELLEFONDO = New Global.System.Data.DataColumn("FUELLEFONDO", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFUELLEFONDO)
            Me.columnCOPETE = New Global.System.Data.DataColumn("COPETE", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOPETE)
            Me.columnAREASELLOREV = New Global.System.Data.DataColumn("AREASELLOREV", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAREASELLOREV)
            Me.columnAREASELLOFONDO = New Global.System.Data.DataColumn("AREASELLOFONDO", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAREASELLOFONDO)
            Me.columnTIPOIMPRESION = New Global.System.Data.DataColumn("TIPOIMPRESION", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOIMPRESION)
            Me.columnTIPOTRABAJO = New Global.System.Data.DataColumn("TIPOTRABAJO", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOTRABAJO)
            Me.columnREPEJE = New Global.System.Data.DataColumn("REPEJE", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPEJE)
            Me.columnREPDES = New Global.System.Data.DataColumn("REPDES", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnREPDES)
            Me.columnMATBASE = New Global.System.Data.DataColumn("MATBASE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATBASE)
            Me.columnMATBASECALIBRE = New Global.System.Data.DataColumn("MATBASECALIBRE", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATBASECALIBRE)
            Me.columnMATBASEKG = New Global.System.Data.DataColumn("MATBASEKG", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATBASEKG)
            Me.columnMATLAMINACION = New Global.System.Data.DataColumn("MATLAMINACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATLAMINACION)
            Me.columnMATLAMINACIONCALIBRE = New Global.System.Data.DataColumn("MATLAMINACIONCALIBRE", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATLAMINACIONCALIBRE)
            Me.columnMATLAMINACIONKG = New Global.System.Data.DataColumn("MATLAMINACIONKG", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATLAMINACIONKG)
            Me.columnMATTRILAMINACION = New Global.System.Data.DataColumn("MATTRILAMINACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATTRILAMINACION)
            Me.columnMATTRILAMINACIONCALIBRE = New Global.System.Data.DataColumn("MATTRILAMINACIONCALIBRE", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATTRILAMINACIONCALIBRE)
            Me.columnMATTRILAMINACIONKG = New Global.System.Data.DataColumn("MATTRILAMINACIONKG", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATTRILAMINACIONKG)
            Me.columnCLAVEINTELISIS = New Global.System.Data.DataColumn("CLAVEINTELISIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLAVEINTELISIS)
            Me.columnORDENCOMPRA = New Global.System.Data.DataColumn("ORDENCOMPRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDENCOMPRA)
            Me.columnCLAVEPRODUCTO = New Global.System.Data.DataColumn("CLAVEPRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLAVEPRODUCTO)
            Me.columnIMPRESORA = New Global.System.Data.DataColumn("IMPRESORA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPRESORA)
            Me.columnRODILLO = New Global.System.Data.DataColumn("RODILLO", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRODILLO)
            Me.columnFIGURASALIDAFINAL = New Global.System.Data.DataColumn("FIGURASALIDAFINAL", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIGURASALIDAFINAL)
            Me.columnEMPATES = New Global.System.Data.DataColumn("EMPATES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPATES)
            Me.columnINSTCORTE = New Global.System.Data.DataColumn("INSTCORTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTCORTE)
            Me.columnINSTDOBLADO = New Global.System.Data.DataColumn("INSTDOBLADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTDOBLADO)
            Me.columnINSTEMBOBINADO = New Global.System.Data.DataColumn("INSTEMBOBINADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTEMBOBINADO)
            Me.columnINSTEXTRUSION = New Global.System.Data.DataColumn("INSTEXTRUSION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTEXTRUSION)
            Me.columnINSTIMPRESION = New Global.System.Data.DataColumn("INSTIMPRESION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTIMPRESION)
            Me.columnINSTLAMINACION = New Global.System.Data.DataColumn("INSTLAMINACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTLAMINACION)
            Me.columnINSTMANGAS = New Global.System.Data.DataColumn("INSTMANGAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTMANGAS)
            Me.columnINSTREFINADO = New Global.System.Data.DataColumn("INSTREFINADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTREFINADO)
            Me.columnINSTSELLADO = New Global.System.Data.DataColumn("INSTSELLADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINSTSELLADO)
            Me.columnOBSERVACIONES = New Global.System.Data.DataColumn("OBSERVACIONES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACIONES)
            Me.columnESIMPRESO = New Global.System.Data.DataColumn("ESIMPRESO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESIMPRESO)
            Me.columnKGXMILL = New Global.System.Data.DataColumn("KGXMILL", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKGXMILL)
            Me.columnMATBASEAMU = New Global.System.Data.DataColumn("MATBASEAMU", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATBASEAMU)
            Me.columnEXTIPO = New Global.System.Data.DataColumn("EXTIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTIPO)
            Me.columnEXCOLOR = New Global.System.Data.DataColumn("EXCOLOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXCOLOR)
            Me.columnEXTRATADO = New Global.System.Data.DataColumn("EXTRATADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTRATADO)
            Me.columnEXDINAS = New Global.System.Data.DataColumn("EXDINAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXDINAS)
            Me.columnEXDESLIZ = New Global.System.Data.DataColumn("EXDESLIZ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXDESLIZ)
            Me.columnEXANTIESTATICA = New Global.System.Data.DataColumn("EXANTIESTATICA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXANTIESTATICA)
            Me.columnMATLAMINACIONAMU = New Global.System.Data.DataColumn("MATLAMINACIONAMU", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATLAMINACIONAMU)
            Me.columnMATTRILAMINACIONAMU = New Global.System.Data.DataColumn("MATTRILAMINACIONAMU", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMATTRILAMINACIONAMU)
            Me.columnEXKG = New Global.System.Data.DataColumn("EXKG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXKG)
            Me.columnEXANCHO = New Global.System.Data.DataColumn("EXANCHO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXANCHO)
            Me.columnENABLED = New Global.System.Data.DataColumn("ENABLED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENABLED)
            Me.columnCLIENTE.MaxLength = 1000
            Me.columnPRODUCTO.MaxLength = 1000
            Me.columnUNIDAD.MaxLength = 100
            Me.columnMATBASE.MaxLength = 250
            Me.columnMATLAMINACION.MaxLength = 250
            Me.columnMATTRILAMINACION.MaxLength = 250
            Me.columnCLAVEINTELISIS.MaxLength = 100
            Me.columnORDENCOMPRA.MaxLength = 100
            Me.columnCLAVEPRODUCTO.MaxLength = 100
            Me.columnIMPRESORA.MaxLength = 500
            Me.columnEMPATES.MaxLength = 1500
            Me.columnINSTCORTE.MaxLength = 2500
            Me.columnINSTDOBLADO.MaxLength = 2500
            Me.columnINSTEMBOBINADO.MaxLength = 2500
            Me.columnINSTEXTRUSION.MaxLength = 2500
            Me.columnINSTIMPRESION.MaxLength = 2500
            Me.columnINSTLAMINACION.MaxLength = 2500
            Me.columnINSTMANGAS.MaxLength = 2500
            Me.columnINSTREFINADO.MaxLength = 2500
            Me.columnINSTSELLADO.MaxLength = 2500
            Me.columnOBSERVACIONES.MaxLength = 2500
            Me.columnESIMPRESO.MaxLength = 10
            Me.columnEXTIPO.MaxLength = 1000
            Me.columnEXCOLOR.MaxLength = 1000
            Me.columnEXTRATADO.MaxLength = 1000
            Me.columnEXDINAS.MaxLength = 1000
            Me.columnEXDESLIZ.MaxLength = 1000
            Me.columnEXANTIESTATICA.MaxLength = 1000
            Me.columnEXKG.MaxLength = 100
            Me.columnEXANCHO.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSP_ORDENTRABAJORow() As SP_ORDENTRABAJORow
            Return CType(Me.NewRow,SP_ORDENTRABAJORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SP_ORDENTRABAJORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SP_ORDENTRABAJORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SP_ORDENTRABAJORowChangedEvent) Is Nothing) Then
                RaiseEvent SP_ORDENTRABAJORowChanged(Me, New SP_ORDENTRABAJORowChangeEvent(CType(e.Row,SP_ORDENTRABAJORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SP_ORDENTRABAJORowChangingEvent) Is Nothing) Then
                RaiseEvent SP_ORDENTRABAJORowChanging(Me, New SP_ORDENTRABAJORowChangeEvent(CType(e.Row,SP_ORDENTRABAJORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SP_ORDENTRABAJORowDeletedEvent) Is Nothing) Then
                RaiseEvent SP_ORDENTRABAJORowDeleted(Me, New SP_ORDENTRABAJORowChangeEvent(CType(e.Row,SP_ORDENTRABAJORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SP_ORDENTRABAJORowDeletingEvent) Is Nothing) Then
                RaiseEvent SP_ORDENTRABAJORowDeleting(Me, New SP_ORDENTRABAJORowChangeEvent(CType(e.Row,SP_ORDENTRABAJORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSP_ORDENTRABAJORow(ByVal row As SP_ORDENTRABAJORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DataSet1 = New DataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SP_ORDENTRABAJODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LINEASRow
        Inherits Global.System.Data.DataRow
        
        Private tableLINEAS As LINEASDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLINEAS = CType(Me.Table,LINEASDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableLINEAS.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableLINEAS.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableLINEAS.NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMBRE' de la tabla 'LINEAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLINEAS.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableLINEAS.NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRENull()
            Me(Me.tableLINEAS.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetMAQUINASRows() As MAQUINASRow()
            If (Me.Table.ChildRelations("FK_MAQUINAS_0") Is Nothing) Then
                Return New MAQUINASRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_MAQUINAS_0")),MAQUINASRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MAQUINASRow
        Inherits Global.System.Data.DataRow
        
        Private tableMAQUINAS As MAQUINASDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMAQUINAS = CType(Me.Table,MAQUINASDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableMAQUINAS.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableMAQUINAS.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableMAQUINAS.NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NOMBRE' de la tabla 'MAQUINAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMAQUINAS.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_LINEA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMAQUINAS.ID_LINEAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ID_LINEA' de la tabla 'MAQUINAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMAQUINAS.ID_LINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROCESO() As Short
            Get
                Try 
                    Return CType(Me(Me.tableMAQUINAS.PROCESOColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PROCESO' de la tabla 'MAQUINAS' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMAQUINAS.PROCESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINEASRow() As LINEASRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_MAQUINAS_0")),LINEASRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_MAQUINAS_0"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableMAQUINAS.NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRENull()
            Me(Me.tableMAQUINAS.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_LINEANull() As Boolean
            Return Me.IsNull(Me.tableMAQUINAS.ID_LINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_LINEANull()
            Me(Me.tableMAQUINAS.ID_LINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPROCESONull() As Boolean
            Return Me.IsNull(Me.tableMAQUINAS.PROCESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPROCESONull()
            Me(Me.tableMAQUINAS.PROCESOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ORDENTRABAJORow
        Inherits Global.System.Data.DataRow
        
        Private tableORDENTRABAJO As ORDENTRABAJODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableORDENTRABAJO = CType(Me.Table,ORDENTRABAJODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableORDENTRABAJO.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableORDENTRABAJO.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPO() As Short
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.TIPOColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHARECIBIDO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.FECHARECIBIDOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHARECIBIDO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.FECHARECIBIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OT() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.OTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OT' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.OTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAENTREGASOL() As Date
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.FECHAENTREGASOLColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHAENTREGASOL' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.FECHAENTREGASOLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CLIENTE' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRODUCTO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CANTIDAD() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.CANTIDADColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTIDAD' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.CANTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNIDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.UNIDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UNIDAD' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.UNIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANCHO() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.ANCHOColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ANCHO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.ANCHOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ALTO() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.ALTOColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALTO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.ALTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SOLAPA() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.SOLAPAColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SOLAPA' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.SOLAPAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FUELLELATERAL() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.FUELLELATERALColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FUELLELATERAL' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.FUELLELATERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FUELLEFONDO() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.FUELLEFONDOColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FUELLEFONDO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.FUELLEFONDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COPETE() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.COPETEColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COPETE' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.COPETEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AREASELLOREV() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.AREASELLOREVColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AREASELLOREV' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.AREASELLOREVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AREASELLOFONDO() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.AREASELLOFONDOColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AREASELLOFONDO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.AREASELLOFONDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOIMPRESION() As Short
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.TIPOIMPRESIONColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOIMPRESION' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.TIPOIMPRESIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOTRABAJO() As Short
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.TIPOTRABAJOColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOTRABAJO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.TIPOTRABAJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REPEJE() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.REPEJEColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'REPEJE' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.REPEJEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REPDES() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.REPDESColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'REPDES' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.REPDESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATBASE() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.MATBASEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATBASE' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.MATBASEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATBASECALIBRE() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.MATBASECALIBREColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATBASECALIBRE' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.MATBASECALIBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATBASEKG() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.MATBASEKGColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATBASEKG' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.MATBASEKGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATLAMINACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.MATLAMINACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATLAMINACION' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.MATLAMINACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATLAMINACIONCALIBRE() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.MATLAMINACIONCALIBREColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATLAMINACIONCALIBRE' de la tabla 'ORDENTRABAJO' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.MATLAMINACIONCALIBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATLAMINACIONKG() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.MATLAMINACIONKGColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATLAMINACIONKG' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.MATLAMINACIONKGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATTRILAMINACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.MATTRILAMINACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATTRILAMINACION' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.MATTRILAMINACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATTRILAMINACIONCALIBRE() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.MATTRILAMINACIONCALIBREColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATTRILAMINACIONCALIBRE' de la tabla 'ORDENTRABAJO' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.MATTRILAMINACIONCALIBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATTRILAMINACIONKG() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.MATTRILAMINACIONKGColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATTRILAMINACIONKG' de la tabla 'ORDENTRABAJO' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.MATTRILAMINACIONKGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLAVEINTELISIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.CLAVEINTELISISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CLAVEINTELISIS' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.CLAVEINTELISISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDENCOMPRA() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.ORDENCOMPRAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ORDENCOMPRA' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.ORDENCOMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLAVEPRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.CLAVEPRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CLAVEPRODUCTO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.CLAVEPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPRESORA() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.IMPRESORAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMPRESORA' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.IMPRESORAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RODILLO() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.RODILLOColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RODILLO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.RODILLOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FIGURASALIDAFINAL() As Short
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.FIGURASALIDAFINALColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FIGURASALIDAFINAL' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.FIGURASALIDAFINALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMPATES() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.EMPATESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EMPATES' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.EMPATESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTCORTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.INSTCORTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTCORTE' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.INSTCORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTDOBLADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.INSTDOBLADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTDOBLADO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.INSTDOBLADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTEMBOBINADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.INSTEMBOBINADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTEMBOBINADO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.INSTEMBOBINADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTEXTRUSION() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.INSTEXTRUSIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTEXTRUSION' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.INSTEXTRUSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTIMPRESION() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.INSTIMPRESIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTIMPRESION' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.INSTIMPRESIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTLAMINACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.INSTLAMINACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTLAMINACION' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.INSTLAMINACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTMANGAS() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.INSTMANGASColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTMANGAS' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.INSTMANGASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTREFINADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.INSTREFINADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTREFINADO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.INSTREFINADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTSELLADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.INSTSELLADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTSELLADO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.INSTSELLADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OBSERVACIONES() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.OBSERVACIONESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OBSERVACIONES' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.OBSERVACIONESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ESIMPRESO() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.ESIMPRESOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESIMPRESO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.ESIMPRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KGXMILL() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.KGXMILLColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'KGXMILL' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.KGXMILLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATBASEAMU() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.MATBASEAMUColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATBASEAMU' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.MATBASEAMUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTIPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.EXTIPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXTIPO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.EXTIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXCOLOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.EXCOLORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXCOLOR' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.EXCOLORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTRATADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.EXTRATADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXTRATADO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.EXTRATADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXDINAS() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.EXDINASColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXDINAS' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.EXDINASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXDESLIZ() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.EXDESLIZColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXDESLIZ' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.EXDESLIZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXANTIESTATICA() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.EXANTIESTATICAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXANTIESTATICA' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.EXANTIESTATICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATLAMINACIONAMU() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.MATLAMINACIONAMUColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATLAMINACIONAMU' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.MATLAMINACIONAMUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATTRILAMINACIONAMU() As Single
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.MATTRILAMINACIONAMUColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATTRILAMINACIONAMU' de la tabla 'ORDENTRABAJO' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.MATTRILAMINACIONAMUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXKG() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.EXKGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXKG' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.EXKGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXANCHO() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.EXANCHOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXANCHO' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.EXANCHOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOINSTRING() As String
            Get
                Try 
                    Return CType(Me(Me.tableORDENTRABAJO.TIPOINSTRINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOINSTRING' de la tabla 'ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableORDENTRABAJO.TIPOINSTRINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.TIPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPONull()
            Me(Me.tableORDENTRABAJO.TIPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHARECIBIDONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.FECHARECIBIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHARECIBIDONull()
            Me(Me.tableORDENTRABAJO.FECHARECIBIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOTNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.OTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOTNull()
            Me(Me.tableORDENTRABAJO.OTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAENTREGASOLNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.FECHAENTREGASOLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAENTREGASOLNull()
            Me(Me.tableORDENTRABAJO.FECHAENTREGASOLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENTENull()
            Me(Me.tableORDENTRABAJO.CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableORDENTRABAJO.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCANTIDADNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.CANTIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCANTIDADNull()
            Me(Me.tableORDENTRABAJO.CANTIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUNIDADNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.UNIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUNIDADNull()
            Me(Me.tableORDENTRABAJO.UNIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANCHONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.ANCHOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANCHONull()
            Me(Me.tableORDENTRABAJO.ANCHOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsALTONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.ALTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetALTONull()
            Me(Me.tableORDENTRABAJO.ALTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSOLAPANull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.SOLAPAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSOLAPANull()
            Me(Me.tableORDENTRABAJO.SOLAPAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFUELLELATERALNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.FUELLELATERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFUELLELATERALNull()
            Me(Me.tableORDENTRABAJO.FUELLELATERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFUELLEFONDONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.FUELLEFONDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFUELLEFONDONull()
            Me(Me.tableORDENTRABAJO.FUELLEFONDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOPETENull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.COPETEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOPETENull()
            Me(Me.tableORDENTRABAJO.COPETEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAREASELLOREVNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.AREASELLOREVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAREASELLOREVNull()
            Me(Me.tableORDENTRABAJO.AREASELLOREVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAREASELLOFONDONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.AREASELLOFONDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAREASELLOFONDONull()
            Me(Me.tableORDENTRABAJO.AREASELLOFONDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPOIMPRESIONNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.TIPOIMPRESIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPOIMPRESIONNull()
            Me(Me.tableORDENTRABAJO.TIPOIMPRESIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPOTRABAJONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.TIPOTRABAJOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPOTRABAJONull()
            Me(Me.tableORDENTRABAJO.TIPOTRABAJOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREPEJENull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.REPEJEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREPEJENull()
            Me(Me.tableORDENTRABAJO.REPEJEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREPDESNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.REPDESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREPDESNull()
            Me(Me.tableORDENTRABAJO.REPDESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATBASENull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.MATBASEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATBASENull()
            Me(Me.tableORDENTRABAJO.MATBASEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATBASECALIBRENull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.MATBASECALIBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATBASECALIBRENull()
            Me(Me.tableORDENTRABAJO.MATBASECALIBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATBASEKGNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.MATBASEKGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATBASEKGNull()
            Me(Me.tableORDENTRABAJO.MATBASEKGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATLAMINACIONNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.MATLAMINACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATLAMINACIONNull()
            Me(Me.tableORDENTRABAJO.MATLAMINACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATLAMINACIONCALIBRENull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.MATLAMINACIONCALIBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATLAMINACIONCALIBRENull()
            Me(Me.tableORDENTRABAJO.MATLAMINACIONCALIBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATLAMINACIONKGNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.MATLAMINACIONKGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATLAMINACIONKGNull()
            Me(Me.tableORDENTRABAJO.MATLAMINACIONKGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATTRILAMINACIONNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.MATTRILAMINACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATTRILAMINACIONNull()
            Me(Me.tableORDENTRABAJO.MATTRILAMINACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATTRILAMINACIONCALIBRENull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.MATTRILAMINACIONCALIBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATTRILAMINACIONCALIBRENull()
            Me(Me.tableORDENTRABAJO.MATTRILAMINACIONCALIBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATTRILAMINACIONKGNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.MATTRILAMINACIONKGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATTRILAMINACIONKGNull()
            Me(Me.tableORDENTRABAJO.MATTRILAMINACIONKGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLAVEINTELISISNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.CLAVEINTELISISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLAVEINTELISISNull()
            Me(Me.tableORDENTRABAJO.CLAVEINTELISISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDENCOMPRANull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.ORDENCOMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDENCOMPRANull()
            Me(Me.tableORDENTRABAJO.ORDENCOMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLAVEPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.CLAVEPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLAVEPRODUCTONull()
            Me(Me.tableORDENTRABAJO.CLAVEPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPRESORANull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.IMPRESORAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPRESORANull()
            Me(Me.tableORDENTRABAJO.IMPRESORAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRODILLONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.RODILLOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRODILLONull()
            Me(Me.tableORDENTRABAJO.RODILLOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFIGURASALIDAFINALNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.FIGURASALIDAFINALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFIGURASALIDAFINALNull()
            Me(Me.tableORDENTRABAJO.FIGURASALIDAFINALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEMPATESNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.EMPATESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEMPATESNull()
            Me(Me.tableORDENTRABAJO.EMPATESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTCORTENull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.INSTCORTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTCORTENull()
            Me(Me.tableORDENTRABAJO.INSTCORTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTDOBLADONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.INSTDOBLADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTDOBLADONull()
            Me(Me.tableORDENTRABAJO.INSTDOBLADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTEMBOBINADONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.INSTEMBOBINADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTEMBOBINADONull()
            Me(Me.tableORDENTRABAJO.INSTEMBOBINADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTEXTRUSIONNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.INSTEXTRUSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTEXTRUSIONNull()
            Me(Me.tableORDENTRABAJO.INSTEXTRUSIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTIMPRESIONNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.INSTIMPRESIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTIMPRESIONNull()
            Me(Me.tableORDENTRABAJO.INSTIMPRESIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTLAMINACIONNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.INSTLAMINACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTLAMINACIONNull()
            Me(Me.tableORDENTRABAJO.INSTLAMINACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTMANGASNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.INSTMANGASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTMANGASNull()
            Me(Me.tableORDENTRABAJO.INSTMANGASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTREFINADONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.INSTREFINADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTREFINADONull()
            Me(Me.tableORDENTRABAJO.INSTREFINADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTSELLADONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.INSTSELLADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTSELLADONull()
            Me(Me.tableORDENTRABAJO.INSTSELLADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOBSERVACIONESNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.OBSERVACIONESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOBSERVACIONESNull()
            Me(Me.tableORDENTRABAJO.OBSERVACIONESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsESIMPRESONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.ESIMPRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetESIMPRESONull()
            Me(Me.tableORDENTRABAJO.ESIMPRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKGXMILLNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.KGXMILLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKGXMILLNull()
            Me(Me.tableORDENTRABAJO.KGXMILLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATBASEAMUNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.MATBASEAMUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATBASEAMUNull()
            Me(Me.tableORDENTRABAJO.MATBASEAMUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTIPONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.EXTIPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTIPONull()
            Me(Me.tableORDENTRABAJO.EXTIPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXCOLORNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.EXCOLORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXCOLORNull()
            Me(Me.tableORDENTRABAJO.EXCOLORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTRATADONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.EXTRATADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTRATADONull()
            Me(Me.tableORDENTRABAJO.EXTRATADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXDINASNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.EXDINASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXDINASNull()
            Me(Me.tableORDENTRABAJO.EXDINASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXDESLIZNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.EXDESLIZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXDESLIZNull()
            Me(Me.tableORDENTRABAJO.EXDESLIZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXANTIESTATICANull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.EXANTIESTATICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXANTIESTATICANull()
            Me(Me.tableORDENTRABAJO.EXANTIESTATICAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATLAMINACIONAMUNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.MATLAMINACIONAMUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATLAMINACIONAMUNull()
            Me(Me.tableORDENTRABAJO.MATLAMINACIONAMUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATTRILAMINACIONAMUNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.MATTRILAMINACIONAMUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATTRILAMINACIONAMUNull()
            Me(Me.tableORDENTRABAJO.MATTRILAMINACIONAMUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXKGNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.EXKGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXKGNull()
            Me(Me.tableORDENTRABAJO.EXKGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXANCHONull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.EXANCHOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXANCHONull()
            Me(Me.tableORDENTRABAJO.EXANCHOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPOINSTRINGNull() As Boolean
            Return Me.IsNull(Me.tableORDENTRABAJO.TIPOINSTRINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPOINSTRINGNull()
            Me(Me.tableORDENTRABAJO.TIPOINSTRINGColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SP_ORDENTRABAJORow
        Inherits Global.System.Data.DataRow
        
        Private tableSP_ORDENTRABAJO As SP_ORDENTRABAJODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSP_ORDENTRABAJO = CType(Me.Table,SP_ORDENTRABAJODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPO() As Short
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.TIPOColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHARECIBIDO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.FECHARECIBIDOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHARECIBIDO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.FECHARECIBIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAENTREGASOL() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.FECHAENTREGASOLColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FECHAENTREGASOL' de la tabla 'SP_ORDENTRABAJO' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.FECHAENTREGASOLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CLIENTE' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PRODUCTO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CANTIDAD() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.CANTIDADColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CANTIDAD' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.CANTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNIDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.UNIDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UNIDAD' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.UNIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANCHO() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.ANCHOColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ANCHO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.ANCHOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ALTO() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.ALTOColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALTO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.ALTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SOLAPA() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.SOLAPAColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SOLAPA' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.SOLAPAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FUELLELATERAL() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.FUELLELATERALColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FUELLELATERAL' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.FUELLELATERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FUELLEFONDO() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.FUELLEFONDOColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FUELLEFONDO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.FUELLEFONDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COPETE() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.COPETEColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COPETE' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.COPETEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AREASELLOREV() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.AREASELLOREVColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AREASELLOREV' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.AREASELLOREVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AREASELLOFONDO() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.AREASELLOFONDOColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'AREASELLOFONDO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.AREASELLOFONDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOIMPRESION() As Short
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.TIPOIMPRESIONColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOIMPRESION' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.TIPOIMPRESIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOTRABAJO() As Short
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.TIPOTRABAJOColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TIPOTRABAJO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.TIPOTRABAJOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REPEJE() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.REPEJEColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'REPEJE' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.REPEJEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property REPDES() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.REPDESColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'REPDES' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.REPDESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATBASE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.MATBASEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATBASE' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.MATBASEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATBASECALIBRE() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.MATBASECALIBREColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATBASECALIBRE' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.MATBASECALIBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATBASEKG() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.MATBASEKGColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATBASEKG' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.MATBASEKGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATLAMINACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.MATLAMINACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATLAMINACION' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.MATLAMINACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATLAMINACIONCALIBRE() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.MATLAMINACIONCALIBREColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATLAMINACIONCALIBRE' de la tabla 'SP_ORDENTRABAJO' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.MATLAMINACIONCALIBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATLAMINACIONKG() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.MATLAMINACIONKGColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATLAMINACIONKG' de la tabla 'SP_ORDENTRABAJO' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.MATLAMINACIONKGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATTRILAMINACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.MATTRILAMINACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATTRILAMINACION' de la tabla 'SP_ORDENTRABAJO' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.MATTRILAMINACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATTRILAMINACIONCALIBRE() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.MATTRILAMINACIONCALIBREColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATTRILAMINACIONCALIBRE' de la tabla 'SP_ORDENTRABAJO' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.MATTRILAMINACIONCALIBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATTRILAMINACIONKG() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.MATTRILAMINACIONKGColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATTRILAMINACIONKG' de la tabla 'SP_ORDENTRABAJO' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.MATTRILAMINACIONKGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLAVEINTELISIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.CLAVEINTELISISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CLAVEINTELISIS' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.CLAVEINTELISISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDENCOMPRA() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.ORDENCOMPRAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ORDENCOMPRA' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.ORDENCOMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLAVEPRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.CLAVEPRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CLAVEPRODUCTO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.CLAVEPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPRESORA() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.IMPRESORAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IMPRESORA' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.IMPRESORAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RODILLO() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.RODILLOColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'RODILLO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.RODILLOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FIGURASALIDAFINAL() As Short
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.FIGURASALIDAFINALColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FIGURASALIDAFINAL' de la tabla 'SP_ORDENTRABAJO' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.FIGURASALIDAFINALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMPATES() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.EMPATESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EMPATES' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.EMPATESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTCORTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.INSTCORTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTCORTE' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.INSTCORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTDOBLADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.INSTDOBLADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTDOBLADO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.INSTDOBLADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTEMBOBINADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.INSTEMBOBINADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTEMBOBINADO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.INSTEMBOBINADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTEXTRUSION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.INSTEXTRUSIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTEXTRUSION' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.INSTEXTRUSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTIMPRESION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.INSTIMPRESIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTIMPRESION' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.INSTIMPRESIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTLAMINACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.INSTLAMINACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTLAMINACION' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.INSTLAMINACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTMANGAS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.INSTMANGASColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTMANGAS' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.INSTMANGASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTREFINADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.INSTREFINADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTREFINADO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.INSTREFINADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INSTSELLADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.INSTSELLADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'INSTSELLADO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.INSTSELLADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OBSERVACIONES() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.OBSERVACIONESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'OBSERVACIONES' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.OBSERVACIONESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ESIMPRESO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.ESIMPRESOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ESIMPRESO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.ESIMPRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KGXMILL() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.KGXMILLColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'KGXMILL' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.KGXMILLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATBASEAMU() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.MATBASEAMUColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATBASEAMU' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.MATBASEAMUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTIPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.EXTIPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXTIPO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.EXTIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXCOLOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.EXCOLORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXCOLOR' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.EXCOLORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXTRATADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.EXTRATADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXTRATADO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.EXTRATADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXDINAS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.EXDINASColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXDINAS' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.EXDINASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXDESLIZ() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.EXDESLIZColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXDESLIZ' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.EXDESLIZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXANTIESTATICA() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.EXANTIESTATICAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXANTIESTATICA' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.EXANTIESTATICAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATLAMINACIONAMU() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.MATLAMINACIONAMUColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATLAMINACIONAMU' de la tabla 'SP_ORDENTRABAJO' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.MATLAMINACIONAMUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MATTRILAMINACIONAMU() As Single
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.MATTRILAMINACIONAMUColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MATTRILAMINACIONAMU' de la tabla 'SP_ORDENTRABAJO' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.MATTRILAMINACIONAMUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXKG() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.EXKGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXKG' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.EXKGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EXANCHO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.EXANCHOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EXANCHO' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.EXANCHOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENABLED() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSP_ORDENTRABAJO.ENABLEDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENABLED' de la tabla 'SP_ORDENTRABAJO' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSP_ORDENTRABAJO.ENABLEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.TIPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPONull()
            Me(Me.tableSP_ORDENTRABAJO.TIPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHARECIBIDONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.FECHARECIBIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHARECIBIDONull()
            Me(Me.tableSP_ORDENTRABAJO.FECHARECIBIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAENTREGASOLNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.FECHAENTREGASOLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAENTREGASOLNull()
            Me(Me.tableSP_ORDENTRABAJO.FECHAENTREGASOLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENTENull()
            Me(Me.tableSP_ORDENTRABAJO.CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableSP_ORDENTRABAJO.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCANTIDADNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.CANTIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCANTIDADNull()
            Me(Me.tableSP_ORDENTRABAJO.CANTIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUNIDADNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.UNIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUNIDADNull()
            Me(Me.tableSP_ORDENTRABAJO.UNIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANCHONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.ANCHOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANCHONull()
            Me(Me.tableSP_ORDENTRABAJO.ANCHOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsALTONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.ALTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetALTONull()
            Me(Me.tableSP_ORDENTRABAJO.ALTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSOLAPANull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.SOLAPAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSOLAPANull()
            Me(Me.tableSP_ORDENTRABAJO.SOLAPAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFUELLELATERALNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.FUELLELATERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFUELLELATERALNull()
            Me(Me.tableSP_ORDENTRABAJO.FUELLELATERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFUELLEFONDONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.FUELLEFONDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFUELLEFONDONull()
            Me(Me.tableSP_ORDENTRABAJO.FUELLEFONDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOPETENull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.COPETEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOPETENull()
            Me(Me.tableSP_ORDENTRABAJO.COPETEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAREASELLOREVNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.AREASELLOREVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAREASELLOREVNull()
            Me(Me.tableSP_ORDENTRABAJO.AREASELLOREVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAREASELLOFONDONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.AREASELLOFONDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAREASELLOFONDONull()
            Me(Me.tableSP_ORDENTRABAJO.AREASELLOFONDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPOIMPRESIONNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.TIPOIMPRESIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPOIMPRESIONNull()
            Me(Me.tableSP_ORDENTRABAJO.TIPOIMPRESIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPOTRABAJONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.TIPOTRABAJOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPOTRABAJONull()
            Me(Me.tableSP_ORDENTRABAJO.TIPOTRABAJOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREPEJENull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.REPEJEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREPEJENull()
            Me(Me.tableSP_ORDENTRABAJO.REPEJEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsREPDESNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.REPDESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetREPDESNull()
            Me(Me.tableSP_ORDENTRABAJO.REPDESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATBASENull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.MATBASEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATBASENull()
            Me(Me.tableSP_ORDENTRABAJO.MATBASEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATBASECALIBRENull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.MATBASECALIBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATBASECALIBRENull()
            Me(Me.tableSP_ORDENTRABAJO.MATBASECALIBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATBASEKGNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.MATBASEKGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATBASEKGNull()
            Me(Me.tableSP_ORDENTRABAJO.MATBASEKGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATLAMINACIONNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.MATLAMINACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATLAMINACIONNull()
            Me(Me.tableSP_ORDENTRABAJO.MATLAMINACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATLAMINACIONCALIBRENull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.MATLAMINACIONCALIBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATLAMINACIONCALIBRENull()
            Me(Me.tableSP_ORDENTRABAJO.MATLAMINACIONCALIBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATLAMINACIONKGNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.MATLAMINACIONKGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATLAMINACIONKGNull()
            Me(Me.tableSP_ORDENTRABAJO.MATLAMINACIONKGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATTRILAMINACIONNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.MATTRILAMINACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATTRILAMINACIONNull()
            Me(Me.tableSP_ORDENTRABAJO.MATTRILAMINACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATTRILAMINACIONCALIBRENull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.MATTRILAMINACIONCALIBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATTRILAMINACIONCALIBRENull()
            Me(Me.tableSP_ORDENTRABAJO.MATTRILAMINACIONCALIBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATTRILAMINACIONKGNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.MATTRILAMINACIONKGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATTRILAMINACIONKGNull()
            Me(Me.tableSP_ORDENTRABAJO.MATTRILAMINACIONKGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLAVEINTELISISNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.CLAVEINTELISISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLAVEINTELISISNull()
            Me(Me.tableSP_ORDENTRABAJO.CLAVEINTELISISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDENCOMPRANull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.ORDENCOMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDENCOMPRANull()
            Me(Me.tableSP_ORDENTRABAJO.ORDENCOMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLAVEPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.CLAVEPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLAVEPRODUCTONull()
            Me(Me.tableSP_ORDENTRABAJO.CLAVEPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPRESORANull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.IMPRESORAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPRESORANull()
            Me(Me.tableSP_ORDENTRABAJO.IMPRESORAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRODILLONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.RODILLOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRODILLONull()
            Me(Me.tableSP_ORDENTRABAJO.RODILLOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFIGURASALIDAFINALNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.FIGURASALIDAFINALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFIGURASALIDAFINALNull()
            Me(Me.tableSP_ORDENTRABAJO.FIGURASALIDAFINALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEMPATESNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.EMPATESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEMPATESNull()
            Me(Me.tableSP_ORDENTRABAJO.EMPATESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTCORTENull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.INSTCORTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTCORTENull()
            Me(Me.tableSP_ORDENTRABAJO.INSTCORTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTDOBLADONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.INSTDOBLADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTDOBLADONull()
            Me(Me.tableSP_ORDENTRABAJO.INSTDOBLADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTEMBOBINADONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.INSTEMBOBINADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTEMBOBINADONull()
            Me(Me.tableSP_ORDENTRABAJO.INSTEMBOBINADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTEXTRUSIONNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.INSTEXTRUSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTEXTRUSIONNull()
            Me(Me.tableSP_ORDENTRABAJO.INSTEXTRUSIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTIMPRESIONNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.INSTIMPRESIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTIMPRESIONNull()
            Me(Me.tableSP_ORDENTRABAJO.INSTIMPRESIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTLAMINACIONNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.INSTLAMINACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTLAMINACIONNull()
            Me(Me.tableSP_ORDENTRABAJO.INSTLAMINACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTMANGASNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.INSTMANGASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTMANGASNull()
            Me(Me.tableSP_ORDENTRABAJO.INSTMANGASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTREFINADONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.INSTREFINADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTREFINADONull()
            Me(Me.tableSP_ORDENTRABAJO.INSTREFINADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINSTSELLADONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.INSTSELLADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINSTSELLADONull()
            Me(Me.tableSP_ORDENTRABAJO.INSTSELLADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOBSERVACIONESNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.OBSERVACIONESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOBSERVACIONESNull()
            Me(Me.tableSP_ORDENTRABAJO.OBSERVACIONESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsESIMPRESONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.ESIMPRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetESIMPRESONull()
            Me(Me.tableSP_ORDENTRABAJO.ESIMPRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKGXMILLNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.KGXMILLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKGXMILLNull()
            Me(Me.tableSP_ORDENTRABAJO.KGXMILLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATBASEAMUNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.MATBASEAMUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATBASEAMUNull()
            Me(Me.tableSP_ORDENTRABAJO.MATBASEAMUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTIPONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.EXTIPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTIPONull()
            Me(Me.tableSP_ORDENTRABAJO.EXTIPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXCOLORNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.EXCOLORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXCOLORNull()
            Me(Me.tableSP_ORDENTRABAJO.EXCOLORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXTRATADONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.EXTRATADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXTRATADONull()
            Me(Me.tableSP_ORDENTRABAJO.EXTRATADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXDINASNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.EXDINASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXDINASNull()
            Me(Me.tableSP_ORDENTRABAJO.EXDINASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXDESLIZNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.EXDESLIZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXDESLIZNull()
            Me(Me.tableSP_ORDENTRABAJO.EXDESLIZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXANTIESTATICANull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.EXANTIESTATICAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXANTIESTATICANull()
            Me(Me.tableSP_ORDENTRABAJO.EXANTIESTATICAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATLAMINACIONAMUNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.MATLAMINACIONAMUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATLAMINACIONAMUNull()
            Me(Me.tableSP_ORDENTRABAJO.MATLAMINACIONAMUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMATTRILAMINACIONAMUNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.MATTRILAMINACIONAMUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMATTRILAMINACIONAMUNull()
            Me(Me.tableSP_ORDENTRABAJO.MATTRILAMINACIONAMUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXKGNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.EXKGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXKGNull()
            Me(Me.tableSP_ORDENTRABAJO.EXKGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEXANCHONull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.EXANCHOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEXANCHONull()
            Me(Me.tableSP_ORDENTRABAJO.EXANCHOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENABLEDNull() As Boolean
            Return Me.IsNull(Me.tableSP_ORDENTRABAJO.ENABLEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENABLEDNull()
            Me(Me.tableSP_ORDENTRABAJO.ENABLEDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class LINEASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LINEASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As LINEASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As LINEASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MAQUINASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MAQUINASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MAQUINASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MAQUINASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ORDENTRABAJORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ORDENTRABAJORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ORDENTRABAJORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ORDENTRABAJORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SP_ORDENTRABAJORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SP_ORDENTRABAJORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SP_ORDENTRABAJORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SP_ORDENTRABAJORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DataSet1TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class LINEASTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
        
        Private _connection As Global.FirebirdSql.Data.FirebirdClient.FbConnection
        
        Private _transaction As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
        
        Private _commandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.FirebirdSql.Data.FirebirdClient.FbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.FirebirdSql.Data.FirebirdClient.FbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "LINEAS"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""LINEAS"" WHERE ((""ID"" = @Original_ID) AND ((@IsNull_NOMBRE = 1 AND ""N"& _ 
                "OMBRE"" IS NULL) OR (""NOMBRE"" = @Original_NOMBRE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.FirebirdSql.Data.FirebirdClient.FbParameter = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_ID"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_NOMBRE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "NOMBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_NOMBRE"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "NOMBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""LINEAS"" (""ID"", ""NOMBRE"") VALUES (@ID, @NOMBRE)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ID"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@NOMBRE"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "NOMBRE"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""LINEAS"" SET ""ID"" = @ID, ""NOMBRE"" = @NOMBRE WHERE ((""ID"" = @Original_ID) A"& _ 
                "ND ((@IsNull_NOMBRE = 1 AND ""NOMBRE"" IS NULL) OR (""NOMBRE"" = @Original_NOMBRE)))"& _ 
                ""
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ID"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@NOMBRE"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "NOMBRE"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_ID"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_NOMBRE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "NOMBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_NOMBRE"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "NOMBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.FirebirdSql.Data.FirebirdClient.FbConnection()
            Me._connection.ConnectionString = Global.OTS.MySettings.Default.ProduccionOts
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.FirebirdSql.Data.FirebirdClient.FbCommand(0) {}
            Me._commandCollection(0) = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""ID"", ""NOMBRE"" FROM ""LINEAS"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.LINEASDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.LINEASDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.LINEASDataTable = New DataSet1.LINEASDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSet1.LINEASDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "LINEAS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer, ByVal Original_NOMBRE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_NOMBRE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_NOMBRE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID As Integer, ByVal NOMBRE As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID,Integer)
            If (NOMBRE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NOMBRE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID As Integer, ByVal NOMBRE As String, ByVal Original_ID As Integer, ByVal Original_NOMBRE As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID,Integer)
            If (NOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NOMBRE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_ID,Integer)
            If (Original_NOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_NOMBRE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NOMBRE As String, ByVal Original_ID As Integer, ByVal Original_NOMBRE As String) As Integer
            Return Me.Update(Original_ID, NOMBRE, Original_ID, Original_NOMBRE)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MAQUINASTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
        
        Private _connection As Global.FirebirdSql.Data.FirebirdClient.FbConnection
        
        Private _transaction As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
        
        Private _commandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.FirebirdSql.Data.FirebirdClient.FbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.FirebirdSql.Data.FirebirdClient.FbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MAQUINAS"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("ID_LINEA", "ID_LINEA")
            tableMapping.ColumnMappings.Add("PROCESO", "PROCESO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""MAQUINAS"" WHERE ((""ID"" = @Original_ID) AND ((@IsNull_NOMBRE = 1 AND "& _ 
                """NOMBRE"" IS NULL) OR (""NOMBRE"" = @Original_NOMBRE)) AND ((@IsNull_ID_LINEA = 1 A"& _ 
                "ND ""ID_LINEA"" IS NULL) OR (""ID_LINEA"" = @Original_ID_LINEA)) AND ((@IsNull_PROCE"& _ 
                "SO = 1 AND ""PROCESO"" IS NULL) OR (""PROCESO"" = @Original_PROCESO)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.FirebirdSql.Data.FirebirdClient.FbParameter = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_ID"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_NOMBRE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "NOMBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_NOMBRE"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "NOMBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_ID_LINEA"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID_LINEA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_ID_LINEA"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID_LINEA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_PROCESO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "PROCESO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_PROCESO"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "PROCESO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""MAQUINAS"" (""ID"", ""NOMBRE"", ""ID_LINEA"", ""PROCESO"") VALUES (@ID, @NOMB"& _ 
                "RE, @ID_LINEA, @PROCESO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ID"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@NOMBRE"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "NOMBRE"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ID_LINEA"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID_LINEA"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@PROCESO"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "PROCESO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""MAQUINAS"" SET ""ID"" = @ID, ""NOMBRE"" = @NOMBRE, ""ID_LINEA"" = @ID_LINEA, ""PR"& _ 
                "OCESO"" = @PROCESO WHERE ((""ID"" = @Original_ID) AND ((@IsNull_NOMBRE = 1 AND ""NOM"& _ 
                "BRE"" IS NULL) OR (""NOMBRE"" = @Original_NOMBRE)) AND ((@IsNull_ID_LINEA = 1 AND """& _ 
                "ID_LINEA"" IS NULL) OR (""ID_LINEA"" = @Original_ID_LINEA)) AND ((@IsNull_PROCESO ="& _ 
                " 1 AND ""PROCESO"" IS NULL) OR (""PROCESO"" = @Original_PROCESO)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ID"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@NOMBRE"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "NOMBRE"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ID_LINEA"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID_LINEA"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@PROCESO"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "PROCESO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_ID"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_NOMBRE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "NOMBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_NOMBRE"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "NOMBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_ID_LINEA"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID_LINEA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_ID_LINEA"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID_LINEA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_PROCESO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "PROCESO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_PROCESO"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "PROCESO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.FirebirdSql.Data.FirebirdClient.FbConnection()
            Me._connection.ConnectionString = Global.OTS.MySettings.Default.ProduccionOts
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.FirebirdSql.Data.FirebirdClient.FbCommand(0) {}
            Me._commandCollection(0) = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""ID"", ""NOMBRE"", ""ID_LINEA"", ""PROCESO"" FROM ""MAQUINAS"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.MAQUINASDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.MAQUINASDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.MAQUINASDataTable = New DataSet1.MAQUINASDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSet1.MAQUINASDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "MAQUINAS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer, ByVal Original_NOMBRE As String, ByVal Original_ID_LINEA As Global.System.Nullable(Of Integer), ByVal Original_PROCESO As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_NOMBRE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_NOMBRE,String)
            End If
            If (Original_ID_LINEA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_ID_LINEA.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_PROCESO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_PROCESO.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ID As Integer, ByVal NOMBRE As String, ByVal ID_LINEA As Global.System.Nullable(Of Integer), ByVal PROCESO As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID,Integer)
            If (NOMBRE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NOMBRE,String)
            End If
            If (ID_LINEA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ID_LINEA.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PROCESO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PROCESO.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal ID As Integer, ByVal NOMBRE As String, ByVal ID_LINEA As Global.System.Nullable(Of Integer), ByVal PROCESO As Global.System.Nullable(Of Short), ByVal Original_ID As Integer, ByVal Original_NOMBRE As String, ByVal Original_ID_LINEA As Global.System.Nullable(Of Integer), ByVal Original_PROCESO As Global.System.Nullable(Of Short)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID,Integer)
            If (NOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NOMBRE,String)
            End If
            If (ID_LINEA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ID_LINEA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PROCESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PROCESO.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_ID,Integer)
            If (Original_NOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_NOMBRE,String)
            End If
            If (Original_ID_LINEA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_ID_LINEA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_PROCESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_PROCESO.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NOMBRE As String, ByVal ID_LINEA As Global.System.Nullable(Of Integer), ByVal PROCESO As Global.System.Nullable(Of Short), ByVal Original_ID As Integer, ByVal Original_NOMBRE As String, ByVal Original_ID_LINEA As Global.System.Nullable(Of Integer), ByVal Original_PROCESO As Global.System.Nullable(Of Short)) As Integer
            Return Me.Update(Original_ID, NOMBRE, ID_LINEA, PROCESO, Original_ID, Original_NOMBRE, Original_ID_LINEA, Original_PROCESO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ORDENTRABAJOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
        
        Private _connection As Global.FirebirdSql.Data.FirebirdClient.FbConnection
        
        Private _transaction As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
        
        Private _commandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.FirebirdSql.Data.FirebirdClient.FbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.FirebirdSql.Data.FirebirdClient.FbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ORDENTRABAJO"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("TIPO", "TIPO")
            tableMapping.ColumnMappings.Add("FECHARECIBIDO", "FECHARECIBIDO")
            tableMapping.ColumnMappings.Add("OT", "OT")
            tableMapping.ColumnMappings.Add("FECHAENTREGASOL", "FECHAENTREGASOL")
            tableMapping.ColumnMappings.Add("CLIENTE", "CLIENTE")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("CANTIDAD", "CANTIDAD")
            tableMapping.ColumnMappings.Add("UNIDAD", "UNIDAD")
            tableMapping.ColumnMappings.Add("ANCHO", "ANCHO")
            tableMapping.ColumnMappings.Add("ALTO", "ALTO")
            tableMapping.ColumnMappings.Add("SOLAPA", "SOLAPA")
            tableMapping.ColumnMappings.Add("FUELLELATERAL", "FUELLELATERAL")
            tableMapping.ColumnMappings.Add("FUELLEFONDO", "FUELLEFONDO")
            tableMapping.ColumnMappings.Add("COPETE", "COPETE")
            tableMapping.ColumnMappings.Add("AREASELLOREV", "AREASELLOREV")
            tableMapping.ColumnMappings.Add("AREASELLOFONDO", "AREASELLOFONDO")
            tableMapping.ColumnMappings.Add("TIPOIMPRESION", "TIPOIMPRESION")
            tableMapping.ColumnMappings.Add("TIPOTRABAJO", "TIPOTRABAJO")
            tableMapping.ColumnMappings.Add("REPEJE", "REPEJE")
            tableMapping.ColumnMappings.Add("REPDES", "REPDES")
            tableMapping.ColumnMappings.Add("MATBASE", "MATBASE")
            tableMapping.ColumnMappings.Add("MATBASECALIBRE", "MATBASECALIBRE")
            tableMapping.ColumnMappings.Add("MATBASEKG", "MATBASEKG")
            tableMapping.ColumnMappings.Add("MATLAMINACION", "MATLAMINACION")
            tableMapping.ColumnMappings.Add("MATLAMINACIONCALIBRE", "MATLAMINACIONCALIBRE")
            tableMapping.ColumnMappings.Add("MATLAMINACIONKG", "MATLAMINACIONKG")
            tableMapping.ColumnMappings.Add("MATTRILAMINACION", "MATTRILAMINACION")
            tableMapping.ColumnMappings.Add("MATTRILAMINACIONCALIBRE", "MATTRILAMINACIONCALIBRE")
            tableMapping.ColumnMappings.Add("MATTRILAMINACIONKG", "MATTRILAMINACIONKG")
            tableMapping.ColumnMappings.Add("CLAVEINTELISIS", "CLAVEINTELISIS")
            tableMapping.ColumnMappings.Add("ORDENCOMPRA", "ORDENCOMPRA")
            tableMapping.ColumnMappings.Add("CLAVEPRODUCTO", "CLAVEPRODUCTO")
            tableMapping.ColumnMappings.Add("IMPRESORA", "IMPRESORA")
            tableMapping.ColumnMappings.Add("RODILLO", "RODILLO")
            tableMapping.ColumnMappings.Add("FIGURASALIDAFINAL", "FIGURASALIDAFINAL")
            tableMapping.ColumnMappings.Add("EMPATES", "EMPATES")
            tableMapping.ColumnMappings.Add("INSTCORTE", "INSTCORTE")
            tableMapping.ColumnMappings.Add("INSTDOBLADO", "INSTDOBLADO")
            tableMapping.ColumnMappings.Add("INSTEMBOBINADO", "INSTEMBOBINADO")
            tableMapping.ColumnMappings.Add("INSTEXTRUSION", "INSTEXTRUSION")
            tableMapping.ColumnMappings.Add("INSTIMPRESION", "INSTIMPRESION")
            tableMapping.ColumnMappings.Add("INSTLAMINACION", "INSTLAMINACION")
            tableMapping.ColumnMappings.Add("INSTMANGAS", "INSTMANGAS")
            tableMapping.ColumnMappings.Add("INSTREFINADO", "INSTREFINADO")
            tableMapping.ColumnMappings.Add("INSTSELLADO", "INSTSELLADO")
            tableMapping.ColumnMappings.Add("OBSERVACIONES", "OBSERVACIONES")
            tableMapping.ColumnMappings.Add("ESIMPRESO", "ESIMPRESO")
            tableMapping.ColumnMappings.Add("KGXMILL", "KGXMILL")
            tableMapping.ColumnMappings.Add("MATBASEAMU", "MATBASEAMU")
            tableMapping.ColumnMappings.Add("EXTIPO", "EXTIPO")
            tableMapping.ColumnMappings.Add("EXCOLOR", "EXCOLOR")
            tableMapping.ColumnMappings.Add("EXTRATADO", "EXTRATADO")
            tableMapping.ColumnMappings.Add("EXDINAS", "EXDINAS")
            tableMapping.ColumnMappings.Add("EXDESLIZ", "EXDESLIZ")
            tableMapping.ColumnMappings.Add("EXANTIESTATICA", "EXANTIESTATICA")
            tableMapping.ColumnMappings.Add("MATLAMINACIONAMU", "MATLAMINACIONAMU")
            tableMapping.ColumnMappings.Add("MATTRILAMINACIONAMU", "MATTRILAMINACIONAMU")
            tableMapping.ColumnMappings.Add("EXKG", "EXKG")
            tableMapping.ColumnMappings.Add("EXANCHO", "EXANCHO")
            tableMapping.ColumnMappings.Add("TIPOINSTRING", "TIPOINSTRING")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM ""ORDENTRABAJO"" WHERE ((""ID"" = @Original_ID) AND ((@IsNull_TIPO = 1 AN"& _ 
                "D ""TIPO"" IS NULL) OR (""TIPO"" = @Original_TIPO)) AND ((@IsNull_FECHARECIBIDO = 1 "& _ 
                "AND ""FECHARECIBIDO"" IS NULL) OR (""FECHARECIBIDO"" = @Original_FECHARECIBIDO)) AND"& _ 
                " ((@IsNull_OT = 1 AND ""OT"" IS NULL) OR (""OT"" = @Original_OT)) AND ((@IsNull_FECH"& _ 
                "AENTREGASOL = 1 AND ""FECHAENTREGASOL"" IS NULL) OR (""FECHAENTREGASOL"" = @Original"& _ 
                "_FECHAENTREGASOL)) AND ((@IsNull_CLIENTE = 1 AND ""CLIENTE"" IS NULL) OR (""CLIENTE"& _ 
                """ = @Original_CLIENTE)) AND ((@IsNull_PRODUCTO = 1 AND ""PRODUCTO"" IS NULL) OR ("""& _ 
                "PRODUCTO"" = @Original_PRODUCTO)) AND ((@IsNull_CANTIDAD = 1 AND ""CANTIDAD"" IS NU"& _ 
                "LL) OR (""CANTIDAD"" = @Original_CANTIDAD)) AND ((@IsNull_UNIDAD = 1 AND ""UNIDAD"" "& _ 
                "IS NULL) OR (""UNIDAD"" = @Original_UNIDAD)) AND ((@IsNull_ANCHO = 1 AND ""ANCHO"" I"& _ 
                "S NULL) OR (""ANCHO"" = @Original_ANCHO)) AND ((@IsNull_ALTO = 1 AND ""ALTO"" IS NUL"& _ 
                "L) OR (""ALTO"" = @Original_ALTO)) AND ((@IsNull_SOLAPA = 1 AND ""SOLAPA"" IS NULL) "& _ 
                "OR (""SOLAPA"" = @Original_SOLAPA)) AND ((@IsNull_FUELLELATERAL = 1 AND ""FUELLELAT"& _ 
                "ERAL"" IS NULL) OR (""FUELLELATERAL"" = @Original_FUELLELATERAL)) AND ((@IsNull_FUE"& _ 
                "LLEFONDO = 1 AND ""FUELLEFONDO"" IS NULL) OR (""FUELLEFONDO"" = @Original_FUELLEFOND"& _ 
                "O)) AND ((@IsNull_COPETE = 1 AND ""COPETE"" IS NULL) OR (""COPETE"" = @Original_COPE"& _ 
                "TE)) AND ((@IsNull_AREASELLOREV = 1 AND ""AREASELLOREV"" IS NULL) OR (""AREASELLORE"& _ 
                "V"" = @Original_AREASELLOREV)) AND ((@IsNull_AREASELLOFONDO = 1 AND ""AREASELLOFON"& _ 
                "DO"" IS NULL) OR (""AREASELLOFONDO"" = @Original_AREASELLOFONDO)) AND ((@IsNull_TIP"& _ 
                "OIMPRESION = 1 AND ""TIPOIMPRESION"" IS NULL) OR (""TIPOIMPRESION"" = @Original_TIPO"& _ 
                "IMPRESION)) AND ((@IsNull_TIPOTRABAJO = 1 AND ""TIPOTRABAJO"" IS NULL) OR (""TIPOTR"& _ 
                "ABAJO"" = @Original_TIPOTRABAJO)) AND ((@IsNull_REPEJE = 1 AND ""REPEJE"" IS NULL) "& _ 
                "OR (""REPEJE"" = @Original_REPEJE)) AND ((@IsNull_REPDES = 1 AND ""REPDES"" IS NULL)"& _ 
                " OR (""REPDES"" = @Original_REPDES)) AND ((@IsNull_MATBASE = 1 AND ""MATBASE"" IS NU"& _ 
                "LL) OR (""MATBASE"" = @Original_MATBASE)) AND ((@IsNull_MATBASECALIBRE = 1 AND ""MA"& _ 
                "TBASECALIBRE"" IS NULL) OR (""MATBASECALIBRE"" = @Original_MATBASECALIBRE)) AND ((@"& _ 
                "IsNull_MATBASEKG = 1 AND ""MATBASEKG"" IS NULL) OR (""MATBASEKG"" = @Original_MATBAS"& _ 
                "EKG)) AND ((@IsNull_MATLAMINACION = 1 AND ""MATLAMINACION"" IS NULL) OR (""MATLAMIN"& _ 
                "ACION"" = @Original_MATLAMINACION)) AND ((@IsNull_MATLAMINACIONCALIBRE = 1 AND ""M"& _ 
                "ATLAMINACIONCALIBRE"" IS NULL) OR (""MATLAMINACIONCALIBRE"" = @Original_MATLAMINACI"& _ 
                "ONCALIBRE)) AND ((@IsNull_MATLAMINACIONKG = 1 AND ""MATLAMINACIONKG"" IS NULL) OR "& _ 
                "(""MATLAMINACIONKG"" = @Original_MATLAMINACIONKG)) AND ((@IsNull_MATTRILAMINACION "& _ 
                "= 1 AND ""MATTRILAMINACION"" IS NULL) OR (""MATTRILAMINACION"" = @Original_MATTRILAM"& _ 
                "INACION)) AND ((@IsNull_MATTRILAMINACIONCALIBRE = 1 AND ""MATTRILAMINACIONCALIBRE"& _ 
                """ IS NULL) OR (""MATTRILAMINACIONCALIBRE"" = @Original_MATTRILAMINACIONCALIBRE)) A"& _ 
                "ND ((@IsNull_MATTRILAMINACIONKG = 1 AND ""MATTRILAMINACIONKG"" IS NULL) OR (""MATTR"& _ 
                "ILAMINACIONKG"" = @Original_MATTRILAMINACIONKG)) AND ((@IsNull_CLAVEINTELISIS = 1"& _ 
                " AND ""CLAVEINTELISIS"" IS NULL) OR (""CLAVEINTELISIS"" = @Original_CLAVEINTELISIS))"& _ 
                " AND ((@IsNull_ORDENCOMPRA = 1 AND ""ORDENCOMPRA"" IS NULL) OR (""ORDENCOMPRA"" = @O"& _ 
                "riginal_ORDENCOMPRA)) AND ((@IsNull_CLAVEPRODUCTO = 1 AND ""CLAVEPRODUCTO"" IS NUL"& _ 
                "L) OR (""CLAVEPRODUCTO"" = @Original_CLAVEPRODUCTO)) AND ((@IsNull_IMPRESORA = 1 A"& _ 
                "ND ""IMPRESORA"" IS NULL) OR (""IMPRESORA"" = @Original_IMPRESORA)) AND ((@IsNull_RO"& _ 
                "DILLO = 1 AND ""RODILLO"" IS NULL) OR (""RODILLO"" = @Original_RODILLO)) AND ((@IsNu"& _ 
                "ll_FIGURASALIDAFINAL = 1 AND ""FIGURASALIDAFINAL"" IS NULL) OR (""FIGURASALIDAFINAL"& _ 
                """ = @Original_FIGURASALIDAFINAL)) AND ((@IsNull_EMPATES = 1 AND ""EMPATES"" IS NUL"& _ 
                "L) OR (""EMPATES"" = @Original_EMPATES)) AND ((@IsNull_INSTCORTE = 1 AND ""INSTCORT"& _ 
                "E"" IS NULL) OR (""INSTCORTE"" = @Original_INSTCORTE)) AND ((@IsNull_INSTDOBLADO = "& _ 
                "1 AND ""INSTDOBLADO"" IS NULL) OR (""INSTDOBLADO"" = @Original_INSTDOBLADO)) AND ((@"& _ 
                "IsNull_INSTEMBOBINADO = 1 AND ""INSTEMBOBINADO"" IS NULL) OR (""INSTEMBOBINADO"" = @"& _ 
                "Original_INSTEMBOBINADO)) AND ((@IsNull_INSTEXTRUSION = 1 AND ""INSTEXTRUSION"" IS"& _ 
                " NULL) OR (""INSTEXTRUSION"" = @Original_INSTEXTRUSION)) AND ((@IsNull_INSTIMPRESI"& _ 
                "ON = 1 AND ""INSTIMPRESION"" IS NULL) OR (""INSTIMPRESION"" = @Original_INSTIMPRESIO"& _ 
                "N)) AND ((@IsNull_INSTLAMINACION = 1 AND ""INSTLAMINACION"" IS NULL) OR (""INSTLAMI"& _ 
                "NACION"" = @Original_INSTLAMINACION)) AND ((@IsNull_INSTMANGAS = 1 AND ""INSTMANGA"& _ 
                "S"" IS NULL) OR (""INSTMANGAS"" = @Original_INSTMANGAS)) AND ((@IsNull_INSTREFINADO"& _ 
                " = 1 AND ""INSTREFINADO"" IS NULL) OR (""INSTREFINADO"" = @Original_INSTREFINADO)) A"& _ 
                "ND ((@IsNull_INSTSELLADO = 1 AND ""INSTSELLADO"" IS NULL) OR (""INSTSELLADO"" = @Ori"& _ 
                "ginal_INSTSELLADO)) AND ((@IsNull_OBSERVACIONES = 1 AND ""OBSERVACIONES"" IS NULL)"& _ 
                " OR (""OBSERVACIONES"" = @Original_OBSERVACIONES)) AND ((@IsNull_ESIMPRESO = 1 AND"& _ 
                " ""ESIMPRESO"" IS NULL) OR (""ESIMPRESO"" = @Original_ESIMPRESO)) AND ((@IsNull_KGXM"& _ 
                "ILL = 1 AND ""KGXMILL"" IS NULL) OR (""KGXMILL"" = @Original_KGXMILL)) AND ((@IsNull"& _ 
                "_MATBASEAMU = 1 AND ""MATBASEAMU"" IS NULL) OR (""MATBASEAMU"" = @Original_MATBASEAM"& _ 
                "U)) AND ((@IsNull_EXTIPO = 1 AND ""EXTIPO"" IS NULL) OR (""EXTIPO"" = @Original_EXTI"& _ 
                "PO)) AND ((@IsNull_EXCOLOR = 1 AND ""EXCOLOR"" IS NULL) OR (""EXCOLOR"" = @Original_"& _ 
                "EXCOLOR)) AND ((@IsNull_EXTRATADO = 1 AND ""EXTRATADO"" IS NULL) OR (""EXTRATADO"" ="& _ 
                " @Original_EXTRATADO)) AND ((@IsNull_EXDINAS = 1 AND ""EXDINAS"" IS NULL) OR (""EXD"& _ 
                "INAS"" = @Original_EXDINAS)) AND ((@IsNull_EXDESLIZ = 1 AND ""EXDESLIZ"" IS NULL) O"& _ 
                "R (""EXDESLIZ"" = @Original_EXDESLIZ)) AND ((@IsNull_EXANTIESTATICA = 1 AND ""EXANT"& _ 
                "IESTATICA"" IS NULL) OR (""EXANTIESTATICA"" = @Original_EXANTIESTATICA)) AND ((@IsN"& _ 
                "ull_MATLAMINACIONAMU = 1 AND ""MATLAMINACIONAMU"" IS NULL) OR (""MATLAMINACIONAMU"" "& _ 
                "= @Original_MATLAMINACIONAMU)) AND ((@IsNull_MATTRILAMINACIONAMU = 1 AND ""MATTRI"& _ 
                "LAMINACIONAMU"" IS NULL) OR (""MATTRILAMINACIONAMU"" = @Original_MATTRILAMINACIONAM"& _ 
                "U)) AND ((@IsNull_EXKG = 1 AND ""EXKG"" IS NULL) OR (""EXKG"" = @Original_EXKG)) AND"& _ 
                " ((@IsNull_EXANCHO = 1 AND ""EXANCHO"" IS NULL) OR (""EXANCHO"" = @Original_EXANCHO)"& _ 
                ") AND ((@IsNull_TIPOINSTRING = 1 AND ""TIPOINSTRING"" IS NULL) OR (""TIPOINSTRING"" "& _ 
                "= @Original_TIPOINSTRING)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Dim param As Global.FirebirdSql.Data.FirebirdClient.FbParameter = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_ID"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_TIPO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_TIPO"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_FECHARECIBIDO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 8
            param.IsNullable = true
            param.SourceColumn = "FECHARECIBIDO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_FECHARECIBIDO"
            param.DbType = Global.System.Data.DbType.DateTime
            param.Size = 8
            param.IsNullable = true
            param.SourceColumn = "FECHARECIBIDO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_OT"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 10
            param.IsNullable = true
            param.SourceColumn = "OT"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_OT"
            param.Size = 10
            param.IsNullable = true
            param.SourceColumn = "OT"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_FECHAENTREGASOL"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 8
            param.IsNullable = true
            param.SourceColumn = "FECHAENTREGASOL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_FECHAENTREGASOL"
            param.DbType = Global.System.Data.DbType.DateTime
            param.Size = 8
            param.IsNullable = true
            param.SourceColumn = "FECHAENTREGASOL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_CLIENTE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "CLIENTE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_CLIENTE"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "CLIENTE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_PRODUCTO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "PRODUCTO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_PRODUCTO"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "PRODUCTO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_CANTIDAD"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "CANTIDAD"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_CANTIDAD"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "CANTIDAD"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_UNIDAD"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "UNIDAD"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_UNIDAD"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "UNIDAD"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_ANCHO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ANCHO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_ANCHO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ANCHO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_ALTO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ALTO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_ALTO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ALTO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_SOLAPA"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "SOLAPA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_SOLAPA"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "SOLAPA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_FUELLELATERAL"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "FUELLELATERAL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_FUELLELATERAL"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "FUELLELATERAL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_FUELLEFONDO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "FUELLEFONDO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_FUELLEFONDO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "FUELLEFONDO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_COPETE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "COPETE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_COPETE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "COPETE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_AREASELLOREV"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "AREASELLOREV"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_AREASELLOREV"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "AREASELLOREV"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_AREASELLOFONDO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "AREASELLOFONDO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_AREASELLOFONDO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "AREASELLOFONDO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_TIPOIMPRESION"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPOIMPRESION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_TIPOIMPRESION"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPOIMPRESION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_TIPOTRABAJO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPOTRABAJO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_TIPOTRABAJO"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPOTRABAJO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_REPEJE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "REPEJE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_REPEJE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "REPEJE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_REPDES"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "REPDES"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_REPDES"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "REPDES"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATBASE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATBASE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATBASE"
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATBASE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATBASECALIBRE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASECALIBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATBASECALIBRE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASECALIBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATBASEKG"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASEKG"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATBASEKG"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASEKG"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATLAMINACION"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATLAMINACION"
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATLAMINACIONCALIBRE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONCALIBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATLAMINACIONCALIBRE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONCALIBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATLAMINACIONKG"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONKG"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATLAMINACIONKG"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONKG"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATTRILAMINACION"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATTRILAMINACION"
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATTRILAMINACIONCALIBRE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONCALIBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATTRILAMINACIONCALIBRE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONCALIBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATTRILAMINACIONKG"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONKG"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATTRILAMINACIONKG"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONKG"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_CLAVEINTELISIS"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "CLAVEINTELISIS"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_CLAVEINTELISIS"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "CLAVEINTELISIS"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_ORDENCOMPRA"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "ORDENCOMPRA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_ORDENCOMPRA"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "ORDENCOMPRA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_CLAVEPRODUCTO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "CLAVEPRODUCTO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_CLAVEPRODUCTO"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "CLAVEPRODUCTO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_IMPRESORA"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 500
            param.IsNullable = true
            param.SourceColumn = "IMPRESORA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_IMPRESORA"
            param.Size = 500
            param.IsNullable = true
            param.SourceColumn = "IMPRESORA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_RODILLO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "RODILLO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_RODILLO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "RODILLO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_FIGURASALIDAFINAL"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "FIGURASALIDAFINAL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_FIGURASALIDAFINAL"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "FIGURASALIDAFINAL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EMPATES"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1500
            param.IsNullable = true
            param.SourceColumn = "EMPATES"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EMPATES"
            param.Size = 1500
            param.IsNullable = true
            param.SourceColumn = "EMPATES"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTCORTE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTCORTE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTCORTE"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTCORTE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTDOBLADO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTDOBLADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTDOBLADO"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTDOBLADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTEMBOBINADO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTEMBOBINADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTEMBOBINADO"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTEMBOBINADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTEXTRUSION"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTEXTRUSION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTEXTRUSION"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTEXTRUSION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTIMPRESION"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTIMPRESION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTIMPRESION"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTIMPRESION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTLAMINACION"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTLAMINACION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTLAMINACION"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTLAMINACION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTMANGAS"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTMANGAS"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTMANGAS"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTMANGAS"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTREFINADO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTREFINADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTREFINADO"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTREFINADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTSELLADO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTSELLADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTSELLADO"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTSELLADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_OBSERVACIONES"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "OBSERVACIONES"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_OBSERVACIONES"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "OBSERVACIONES"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_ESIMPRESO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 10
            param.IsNullable = true
            param.SourceColumn = "ESIMPRESO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_ESIMPRESO"
            param.Size = 10
            param.IsNullable = true
            param.SourceColumn = "ESIMPRESO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_KGXMILL"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "KGXMILL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_KGXMILL"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "KGXMILL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATBASEAMU"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASEAMU"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATBASEAMU"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASEAMU"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EXTIPO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXTIPO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EXTIPO"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXTIPO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EXCOLOR"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXCOLOR"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EXCOLOR"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXCOLOR"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EXTRATADO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXTRATADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EXTRATADO"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXTRATADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EXDINAS"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXDINAS"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EXDINAS"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXDINAS"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EXDESLIZ"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXDESLIZ"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EXDESLIZ"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXDESLIZ"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EXANTIESTATICA"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXANTIESTATICA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EXANTIESTATICA"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXANTIESTATICA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATLAMINACIONAMU"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONAMU"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATLAMINACIONAMU"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONAMU"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATTRILAMINACIONAMU"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONAMU"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATTRILAMINACIONAMU"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONAMU"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EXKG"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "EXKG"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EXKG"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "EXKG"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EXANCHO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "EXANCHO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EXANCHO"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "EXANCHO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_TIPOINSTRING"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 36
            param.IsNullable = true
            param.SourceColumn = "TIPOINSTRING"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.DeleteCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_TIPOINSTRING"
            param.Size = 36
            param.IsNullable = true
            param.SourceColumn = "TIPOINSTRING"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.DeleteCommand.Parameters.Add(param)
            Me._adapter.InsertCommand = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO ""ORDENTRABAJO"" (""ID"", ""TIPO"", ""FECHARECIBIDO"", ""OT"", ""FECHAENTREGASOL"& _ 
                """, ""CLIENTE"", ""PRODUCTO"", ""CANTIDAD"", ""UNIDAD"", ""ANCHO"", ""ALTO"", ""SOLAPA"", ""FUEL"& _ 
                "LELATERAL"", ""FUELLEFONDO"", ""COPETE"", ""AREASELLOREV"", ""AREASELLOFONDO"", ""TIPOIMPR"& _ 
                "ESION"", ""TIPOTRABAJO"", ""REPEJE"", ""REPDES"", ""MATBASE"", ""MATBASECALIBRE"", ""MATBASE"& _ 
                "KG"", ""MATLAMINACION"", ""MATLAMINACIONCALIBRE"", ""MATLAMINACIONKG"", ""MATTRILAMINACI"& _ 
                "ON"", ""MATTRILAMINACIONCALIBRE"", ""MATTRILAMINACIONKG"", ""CLAVEINTELISIS"", ""ORDENCO"& _ 
                "MPRA"", ""CLAVEPRODUCTO"", ""IMPRESORA"", ""RODILLO"", ""FIGURASALIDAFINAL"", ""EMPATES"", "& _ 
                """INSTCORTE"", ""INSTDOBLADO"", ""INSTEMBOBINADO"", ""INSTEXTRUSION"", ""INSTIMPRESION"", "& _ 
                """INSTLAMINACION"", ""INSTMANGAS"", ""INSTREFINADO"", ""INSTSELLADO"", ""OBSERVACIONES"", "& _ 
                """ESIMPRESO"", ""KGXMILL"", ""MATBASEAMU"", ""EXTIPO"", ""EXCOLOR"", ""EXTRATADO"", ""EXDINAS"& _ 
                """, ""EXDESLIZ"", ""EXANTIESTATICA"", ""MATLAMINACIONAMU"", ""MATTRILAMINACIONAMU"", ""EXK"& _ 
                "G"", ""EXANCHO"") VALUES (@ID, @TIPO, @FECHARECIBIDO, @OT, @FECHAENTREGASOL, @CLIEN"& _ 
                "TE, @PRODUCTO, @CANTIDAD, @UNIDAD, @ANCHO, @ALTO, @SOLAPA, @FUELLELATERAL, @FUEL"& _ 
                "LEFONDO, @COPETE, @AREASELLOREV, @AREASELLOFONDO, @TIPOIMPRESION, @TIPOTRABAJO, "& _ 
                "@REPEJE, @REPDES, @MATBASE, @MATBASECALIBRE, @MATBASEKG, @MATLAMINACION, @MATLAM"& _ 
                "INACIONCALIBRE, @MATLAMINACIONKG, @MATTRILAMINACION, @MATTRILAMINACIONCALIBRE, @"& _ 
                "MATTRILAMINACIONKG, @CLAVEINTELISIS, @ORDENCOMPRA, @CLAVEPRODUCTO, @IMPRESORA, @"& _ 
                "RODILLO, @FIGURASALIDAFINAL, @EMPATES, @INSTCORTE, @INSTDOBLADO, @INSTEMBOBINADO"& _ 
                ", @INSTEXTRUSION, @INSTIMPRESION, @INSTLAMINACION, @INSTMANGAS, @INSTREFINADO, @"& _ 
                "INSTSELLADO, @OBSERVACIONES, @ESIMPRESO, @KGXMILL, @MATBASEAMU, @EXTIPO, @EXCOLO"& _ 
                "R, @EXTRATADO, @EXDINAS, @EXDESLIZ, @EXANTIESTATICA, @MATLAMINACIONAMU, @MATTRIL"& _ 
                "AMINACIONAMU, @EXKG, @EXANCHO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ID"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@TIPO"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@FECHARECIBIDO"
            param.DbType = Global.System.Data.DbType.DateTime
            param.Size = 8
            param.IsNullable = true
            param.SourceColumn = "FECHARECIBIDO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@OT"
            param.Size = 10
            param.IsNullable = true
            param.SourceColumn = "OT"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@FECHAENTREGASOL"
            param.DbType = Global.System.Data.DbType.DateTime
            param.Size = 8
            param.IsNullable = true
            param.SourceColumn = "FECHAENTREGASOL"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@CLIENTE"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "CLIENTE"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@PRODUCTO"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "PRODUCTO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@CANTIDAD"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "CANTIDAD"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@UNIDAD"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "UNIDAD"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ANCHO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ANCHO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ALTO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ALTO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@SOLAPA"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "SOLAPA"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@FUELLELATERAL"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "FUELLELATERAL"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@FUELLEFONDO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "FUELLEFONDO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@COPETE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "COPETE"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@AREASELLOREV"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "AREASELLOREV"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@AREASELLOFONDO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "AREASELLOFONDO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@TIPOIMPRESION"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPOIMPRESION"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@TIPOTRABAJO"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPOTRABAJO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@REPEJE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "REPEJE"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@REPDES"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "REPDES"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATBASE"
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATBASE"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATBASECALIBRE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASECALIBRE"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATBASEKG"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASEKG"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATLAMINACION"
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACION"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATLAMINACIONCALIBRE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONCALIBRE"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATLAMINACIONKG"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONKG"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATTRILAMINACION"
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACION"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATTRILAMINACIONCALIBRE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONCALIBRE"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATTRILAMINACIONKG"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONKG"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@CLAVEINTELISIS"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "CLAVEINTELISIS"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ORDENCOMPRA"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "ORDENCOMPRA"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@CLAVEPRODUCTO"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "CLAVEPRODUCTO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IMPRESORA"
            param.Size = 500
            param.IsNullable = true
            param.SourceColumn = "IMPRESORA"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@RODILLO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "RODILLO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@FIGURASALIDAFINAL"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "FIGURASALIDAFINAL"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EMPATES"
            param.Size = 1500
            param.IsNullable = true
            param.SourceColumn = "EMPATES"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTCORTE"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTCORTE"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTDOBLADO"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTDOBLADO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTEMBOBINADO"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTEMBOBINADO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTEXTRUSION"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTEXTRUSION"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTIMPRESION"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTIMPRESION"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTLAMINACION"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTLAMINACION"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTMANGAS"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTMANGAS"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTREFINADO"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTREFINADO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTSELLADO"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTSELLADO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@OBSERVACIONES"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "OBSERVACIONES"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ESIMPRESO"
            param.Size = 10
            param.IsNullable = true
            param.SourceColumn = "ESIMPRESO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@KGXMILL"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "KGXMILL"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATBASEAMU"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASEAMU"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EXTIPO"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXTIPO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EXCOLOR"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXCOLOR"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EXTRATADO"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXTRATADO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EXDINAS"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXDINAS"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EXDESLIZ"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXDESLIZ"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EXANTIESTATICA"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXANTIESTATICA"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATLAMINACIONAMU"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONAMU"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATTRILAMINACIONAMU"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONAMU"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EXKG"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "EXKG"
            Me._adapter.InsertCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EXANCHO"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "EXANCHO"
            Me._adapter.InsertCommand.Parameters.Add(param)
            Me._adapter.UpdateCommand = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE ""ORDENTRABAJO"" SET ""ID"" = @ID, ""TIPO"" = @TIPO, ""FECHARECIBIDO"" = @FECHAREC"& _ 
                "IBIDO, ""OT"" = @OT, ""FECHAENTREGASOL"" = @FECHAENTREGASOL, ""CLIENTE"" = @CLIENTE, """& _ 
                "PRODUCTO"" = @PRODUCTO, ""CANTIDAD"" = @CANTIDAD, ""UNIDAD"" = @UNIDAD, ""ANCHO"" = @AN"& _ 
                "CHO, ""ALTO"" = @ALTO, ""SOLAPA"" = @SOLAPA, ""FUELLELATERAL"" = @FUELLELATERAL, ""FUEL"& _ 
                "LEFONDO"" = @FUELLEFONDO, ""COPETE"" = @COPETE, ""AREASELLOREV"" = @AREASELLOREV, ""AR"& _ 
                "EASELLOFONDO"" = @AREASELLOFONDO, ""TIPOIMPRESION"" = @TIPOIMPRESION, ""TIPOTRABAJO"""& _ 
                " = @TIPOTRABAJO, ""REPEJE"" = @REPEJE, ""REPDES"" = @REPDES, ""MATBASE"" = @MATBASE, """& _ 
                "MATBASECALIBRE"" = @MATBASECALIBRE, ""MATBASEKG"" = @MATBASEKG, ""MATLAMINACION"" = @"& _ 
                "MATLAMINACION, ""MATLAMINACIONCALIBRE"" = @MATLAMINACIONCALIBRE, ""MATLAMINACIONKG"""& _ 
                " = @MATLAMINACIONKG, ""MATTRILAMINACION"" = @MATTRILAMINACION, ""MATTRILAMINACIONCA"& _ 
                "LIBRE"" = @MATTRILAMINACIONCALIBRE, ""MATTRILAMINACIONKG"" = @MATTRILAMINACIONKG, """& _ 
                "CLAVEINTELISIS"" = @CLAVEINTELISIS, ""ORDENCOMPRA"" = @ORDENCOMPRA, ""CLAVEPRODUCTO"""& _ 
                " = @CLAVEPRODUCTO, ""IMPRESORA"" = @IMPRESORA, ""RODILLO"" = @RODILLO, ""FIGURASALIDA"& _ 
                "FINAL"" = @FIGURASALIDAFINAL, ""EMPATES"" = @EMPATES, ""INSTCORTE"" = @INSTCORTE, ""IN"& _ 
                "STDOBLADO"" = @INSTDOBLADO, ""INSTEMBOBINADO"" = @INSTEMBOBINADO, ""INSTEXTRUSION"" ="& _ 
                " @INSTEXTRUSION, ""INSTIMPRESION"" = @INSTIMPRESION, ""INSTLAMINACION"" = @INSTLAMIN"& _ 
                "ACION, ""INSTMANGAS"" = @INSTMANGAS, ""INSTREFINADO"" = @INSTREFINADO, ""INSTSELLADO"""& _ 
                " = @INSTSELLADO, ""OBSERVACIONES"" = @OBSERVACIONES, ""ESIMPRESO"" = @ESIMPRESO, ""KG"& _ 
                "XMILL"" = @KGXMILL, ""MATBASEAMU"" = @MATBASEAMU, ""EXTIPO"" = @EXTIPO, ""EXCOLOR"" = @"& _ 
                "EXCOLOR, ""EXTRATADO"" = @EXTRATADO, ""EXDINAS"" = @EXDINAS, ""EXDESLIZ"" = @EXDESLIZ,"& _ 
                " ""EXANTIESTATICA"" = @EXANTIESTATICA, ""MATLAMINACIONAMU"" = @MATLAMINACIONAMU, ""MA"& _ 
                "TTRILAMINACIONAMU"" = @MATTRILAMINACIONAMU, ""EXKG"" = @EXKG, ""EXANCHO"" = @EXANCHO "& _ 
                "WHERE ((""ID"" = @Original_ID) AND ((@IsNull_TIPO = 1 AND ""TIPO"" IS NULL) OR (""TIP"& _ 
                "O"" = @Original_TIPO)) AND ((@IsNull_FECHARECIBIDO = 1 AND ""FECHARECIBIDO"" IS NUL"& _ 
                "L) OR (""FECHARECIBIDO"" = @Original_FECHARECIBIDO)) AND ((@IsNull_OT = 1 AND ""OT"""& _ 
                " IS NULL) OR (""OT"" = @Original_OT)) AND ((@IsNull_FECHAENTREGASOL = 1 AND ""FECHA"& _ 
                "ENTREGASOL"" IS NULL) OR (""FECHAENTREGASOL"" = @Original_FECHAENTREGASOL)) AND ((@"& _ 
                "IsNull_CLIENTE = 1 AND ""CLIENTE"" IS NULL) OR (""CLIENTE"" = @Original_CLIENTE)) AN"& _ 
                "D ((@IsNull_PRODUCTO = 1 AND ""PRODUCTO"" IS NULL) OR (""PRODUCTO"" = @Original_PROD"& _ 
                "UCTO)) AND ((@IsNull_CANTIDAD = 1 AND ""CANTIDAD"" IS NULL) OR (""CANTIDAD"" = @Orig"& _ 
                "inal_CANTIDAD)) AND ((@IsNull_UNIDAD = 1 AND ""UNIDAD"" IS NULL) OR (""UNIDAD"" = @O"& _ 
                "riginal_UNIDAD)) AND ((@IsNull_ANCHO = 1 AND ""ANCHO"" IS NULL) OR (""ANCHO"" = @Ori"& _ 
                "ginal_ANCHO)) AND ((@IsNull_ALTO = 1 AND ""ALTO"" IS NULL) OR (""ALTO"" = @Original_"& _ 
                "ALTO)) AND ((@IsNull_SOLAPA = 1 AND ""SOLAPA"" IS NULL) OR (""SOLAPA"" = @Original_S"& _ 
                "OLAPA)) AND ((@IsNull_FUELLELATERAL = 1 AND ""FUELLELATERAL"" IS NULL) OR (""FUELLE"& _ 
                "LATERAL"" = @Original_FUELLELATERAL)) AND ((@IsNull_FUELLEFONDO = 1 AND ""FUELLEFO"& _ 
                "NDO"" IS NULL) OR (""FUELLEFONDO"" = @Original_FUELLEFONDO)) AND ((@IsNull_COPETE ="& _ 
                " 1 AND ""COPETE"" IS NULL) OR (""COPETE"" = @Original_COPETE)) AND ((@IsNull_AREASEL"& _ 
                "LOREV = 1 AND ""AREASELLOREV"" IS NULL) OR (""AREASELLOREV"" = @Original_AREASELLORE"& _ 
                "V)) AND ((@IsNull_AREASELLOFONDO = 1 AND ""AREASELLOFONDO"" IS NULL) OR (""AREASELL"& _ 
                "OFONDO"" = @Original_AREASELLOFONDO)) AND ((@IsNull_TIPOIMPRESION = 1 AND ""TIPOIM"& _ 
                "PRESION"" IS NULL) OR (""TIPOIMPRESION"" = @Original_TIPOIMPRESION)) AND ((@IsNull_"& _ 
                "TIPOTRABAJO = 1 AND ""TIPOTRABAJO"" IS NULL) OR (""TIPOTRABAJO"" = @Original_TIPOTRA"& _ 
                "BAJO)) AND ((@IsNull_REPEJE = 1 AND ""REPEJE"" IS NULL) OR (""REPEJE"" = @Original_R"& _ 
                "EPEJE)) AND ((@IsNull_REPDES = 1 AND ""REPDES"" IS NULL) OR (""REPDES"" = @Original_"& _ 
                "REPDES)) AND ((@IsNull_MATBASE = 1 AND ""MATBASE"" IS NULL) OR (""MATBASE"" = @Origi"& _ 
                "nal_MATBASE)) AND ((@IsNull_MATBASECALIBRE = 1 AND ""MATBASECALIBRE"" IS NULL) OR "& _ 
                "(""MATBASECALIBRE"" = @Original_MATBASECALIBRE)) AND ((@IsNull_MATBASEKG = 1 AND """& _ 
                "MATBASEKG"" IS NULL) OR (""MATBASEKG"" = @Original_MATBASEKG)) AND ((@IsNull_MATLAM"& _ 
                "INACION = 1 AND ""MATLAMINACION"" IS NULL) OR (""MATLAMINACION"" = @Original_MATLAMI"& _ 
                "NACION)) AND ((@IsNull_MATLAMINACIONCALIBRE = 1 AND ""MATLAMINACIONCALIBRE"" IS NU"& _ 
                "LL) OR (""MATLAMINACIONCALIBRE"" = @Original_MATLAMINACIONCALIBRE)) AND ((@IsNull_"& _ 
                "MATLAMINACIONKG = 1 AND ""MATLAMINACIONKG"" IS NULL) OR (""MATLAMINACIONKG"" = @Orig"& _ 
                "inal_MATLAMINACIONKG)) AND ((@IsNull_MATTRILAMINACION = 1 AND ""MATTRILAMINACION"""& _ 
                " IS NULL) OR (""MATTRILAMINACION"" = @Original_MATTRILAMINACION)) AND ((@IsNull_MA"& _ 
                "TTRILAMINACIONCALIBRE = 1 AND ""MATTRILAMINACIONCALIBRE"" IS NULL) OR (""MATTRILAMI"& _ 
                "NACIONCALIBRE"" = @Original_MATTRILAMINACIONCALIBRE)) AND ((@IsNull_MATTRILAMINAC"& _ 
                "IONKG = 1 AND ""MATTRILAMINACIONKG"" IS NULL) OR (""MATTRILAMINACIONKG"" = @Original"& _ 
                "_MATTRILAMINACIONKG)) AND ((@IsNull_CLAVEINTELISIS = 1 AND ""CLAVEINTELISIS"" IS N"& _ 
                "ULL) OR (""CLAVEINTELISIS"" = @Original_CLAVEINTELISIS)) AND ((@IsNull_ORDENCOMPRA"& _ 
                " = 1 AND ""ORDENCOMPRA"" IS NULL) OR (""ORDENCOMPRA"" = @Original_ORDENCOMPRA)) AND "& _ 
                "((@IsNull_CLAVEPRODUCTO = 1 AND ""CLAVEPRODUCTO"" IS NULL) OR (""CLAVEPRODUCTO"" = @"& _ 
                "Original_CLAVEPRODUCTO)) AND ((@IsNull_IMPRESORA = 1 AND ""IMPRESORA"" IS NULL) OR"& _ 
                " (""IMPRESORA"" = @Original_IMPRESORA)) AND ((@IsNull_RODILLO = 1 AND ""RODILLO"" IS"& _ 
                " NULL) OR (""RODILLO"" = @Original_RODILLO)) AND ((@IsNull_FIGURASALIDAFINAL = 1 A"& _ 
                "ND ""FIGURASALIDAFINAL"" IS NULL) OR (""FIGURASALIDAFINAL"" = @Original_FIGURASALIDA"& _ 
                "FINAL)) AND ((@IsNull_EMPATES = 1 AND ""EMPATES"" IS NULL) OR (""EMPATES"" = @Origin"& _ 
                "al_EMPATES)) AND ((@IsNull_INSTCORTE = 1 AND ""INSTCORTE"" IS NULL) OR (""INSTCORTE"& _ 
                """ = @Original_INSTCORTE)) AND ((@IsNull_INSTDOBLADO = 1 AND ""INSTDOBLADO"" IS NUL"& _ 
                "L) OR (""INSTDOBLADO"" = @Original_INSTDOBLADO)) AND ((@IsNull_INSTEMBOBINADO = 1 "& _ 
                "AND ""INSTEMBOBINADO"" IS NULL) OR (""INSTEMBOBINADO"" = @Original_INSTEMBOBINADO)) "& _ 
                "AND ((@IsNull_INSTEXTRUSION = 1 AND ""INSTEXTRUSION"" IS NULL) OR (""INSTEXTRUSION"""& _ 
                " = @Original_INSTEXTRUSION)) AND ((@IsNull_INSTIMPRESION = 1 AND ""INSTIMPRESION"""& _ 
                " IS NULL) OR (""INSTIMPRESION"" = @Original_INSTIMPRESION)) AND ((@IsNull_INSTLAMI"& _ 
                "NACION = 1 AND ""INSTLAMINACION"" IS NULL) OR (""INSTLAMINACION"" = @Original_INSTLA"& _ 
                "MINACION)) AND ((@IsNull_INSTMANGAS = 1 AND ""INSTMANGAS"" IS NULL) OR (""INSTMANGA"& _ 
                "S"" = @Original_INSTMANGAS)) AND ((@IsNull_INSTREFINADO = 1 AND ""INSTREFINADO"" IS"& _ 
                " NULL) OR (""INSTREFINADO"" = @Original_INSTREFINADO)) AND ((@IsNull_INSTSELLADO ="& _ 
                " 1 AND ""INSTSELLADO"" IS NULL) OR (""INSTSELLADO"" = @Original_INSTSELLADO)) AND (("& _ 
                "@IsNull_OBSERVACIONES = 1 AND ""OBSERVACIONES"" IS NULL) OR (""OBSERVACIONES"" = @Or"& _ 
                "iginal_OBSERVACIONES)) AND ((@IsNull_ESIMPRESO = 1 AND ""ESIMPRESO"" IS NULL) OR ("& _ 
                """ESIMPRESO"" = @Original_ESIMPRESO)) AND ((@IsNull_KGXMILL = 1 AND ""KGXMILL"" IS N"& _ 
                "ULL) OR (""KGXMILL"" = @Original_KGXMILL)) AND ((@IsNull_MATBASEAMU = 1 AND ""MATBA"& _ 
                "SEAMU"" IS NULL) OR (""MATBASEAMU"" = @Original_MATBASEAMU)) AND ((@IsNull_EXTIPO ="& _ 
                " 1 AND ""EXTIPO"" IS NULL) OR (""EXTIPO"" = @Original_EXTIPO)) AND ((@IsNull_EXCOLOR"& _ 
                " = 1 AND ""EXCOLOR"" IS NULL) OR (""EXCOLOR"" = @Original_EXCOLOR)) AND ((@IsNull_EX"& _ 
                "TRATADO = 1 AND ""EXTRATADO"" IS NULL) OR (""EXTRATADO"" = @Original_EXTRATADO)) AND"& _ 
                " ((@IsNull_EXDINAS = 1 AND ""EXDINAS"" IS NULL) OR (""EXDINAS"" = @Original_EXDINAS)"& _ 
                ") AND ((@IsNull_EXDESLIZ = 1 AND ""EXDESLIZ"" IS NULL) OR (""EXDESLIZ"" = @Original_"& _ 
                "EXDESLIZ)) AND ((@IsNull_EXANTIESTATICA = 1 AND ""EXANTIESTATICA"" IS NULL) OR (""E"& _ 
                "XANTIESTATICA"" = @Original_EXANTIESTATICA)) AND ((@IsNull_MATLAMINACIONAMU = 1 A"& _ 
                "ND ""MATLAMINACIONAMU"" IS NULL) OR (""MATLAMINACIONAMU"" = @Original_MATLAMINACIONA"& _ 
                "MU)) AND ((@IsNull_MATTRILAMINACIONAMU = 1 AND ""MATTRILAMINACIONAMU"" IS NULL) OR"& _ 
                " (""MATTRILAMINACIONAMU"" = @Original_MATTRILAMINACIONAMU)) AND ((@IsNull_EXKG = 1"& _ 
                " AND ""EXKG"" IS NULL) OR (""EXKG"" = @Original_EXKG)) AND ((@IsNull_EXANCHO = 1 AND"& _ 
                " ""EXANCHO"" IS NULL) OR (""EXANCHO"" = @Original_EXANCHO)) AND ((@IsNull_TIPOINSTRI"& _ 
                "NG = 1 AND ""TIPOINSTRING"" IS NULL) OR (""TIPOINSTRING"" = @Original_TIPOINSTRING))"& _ 
                ")"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ID"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@TIPO"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@FECHARECIBIDO"
            param.DbType = Global.System.Data.DbType.DateTime
            param.Size = 8
            param.IsNullable = true
            param.SourceColumn = "FECHARECIBIDO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@OT"
            param.Size = 10
            param.IsNullable = true
            param.SourceColumn = "OT"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@FECHAENTREGASOL"
            param.DbType = Global.System.Data.DbType.DateTime
            param.Size = 8
            param.IsNullable = true
            param.SourceColumn = "FECHAENTREGASOL"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@CLIENTE"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "CLIENTE"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@PRODUCTO"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "PRODUCTO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@CANTIDAD"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "CANTIDAD"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@UNIDAD"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "UNIDAD"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ANCHO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ANCHO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ALTO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ALTO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@SOLAPA"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "SOLAPA"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@FUELLELATERAL"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "FUELLELATERAL"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@FUELLEFONDO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "FUELLEFONDO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@COPETE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "COPETE"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@AREASELLOREV"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "AREASELLOREV"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@AREASELLOFONDO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "AREASELLOFONDO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@TIPOIMPRESION"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPOIMPRESION"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@TIPOTRABAJO"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPOTRABAJO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@REPEJE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "REPEJE"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@REPDES"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "REPDES"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATBASE"
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATBASE"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATBASECALIBRE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASECALIBRE"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATBASEKG"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASEKG"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATLAMINACION"
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACION"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATLAMINACIONCALIBRE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONCALIBRE"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATLAMINACIONKG"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONKG"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATTRILAMINACION"
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACION"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATTRILAMINACIONCALIBRE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONCALIBRE"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATTRILAMINACIONKG"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONKG"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@CLAVEINTELISIS"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "CLAVEINTELISIS"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ORDENCOMPRA"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "ORDENCOMPRA"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@CLAVEPRODUCTO"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "CLAVEPRODUCTO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IMPRESORA"
            param.Size = 500
            param.IsNullable = true
            param.SourceColumn = "IMPRESORA"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@RODILLO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "RODILLO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@FIGURASALIDAFINAL"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "FIGURASALIDAFINAL"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EMPATES"
            param.Size = 1500
            param.IsNullable = true
            param.SourceColumn = "EMPATES"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTCORTE"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTCORTE"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTDOBLADO"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTDOBLADO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTEMBOBINADO"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTEMBOBINADO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTEXTRUSION"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTEXTRUSION"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTIMPRESION"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTIMPRESION"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTLAMINACION"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTLAMINACION"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTMANGAS"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTMANGAS"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTREFINADO"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTREFINADO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@INSTSELLADO"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTSELLADO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@OBSERVACIONES"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "OBSERVACIONES"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@ESIMPRESO"
            param.Size = 10
            param.IsNullable = true
            param.SourceColumn = "ESIMPRESO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@KGXMILL"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "KGXMILL"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATBASEAMU"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASEAMU"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EXTIPO"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXTIPO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EXCOLOR"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXCOLOR"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EXTRATADO"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXTRATADO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EXDINAS"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXDINAS"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EXDESLIZ"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXDESLIZ"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EXANTIESTATICA"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXANTIESTATICA"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATLAMINACIONAMU"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONAMU"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@MATTRILAMINACIONAMU"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONAMU"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EXKG"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "EXKG"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@EXANCHO"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "EXANCHO"
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_ID"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ID"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_TIPO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_TIPO"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_FECHARECIBIDO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 8
            param.IsNullable = true
            param.SourceColumn = "FECHARECIBIDO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_FECHARECIBIDO"
            param.DbType = Global.System.Data.DbType.DateTime
            param.Size = 8
            param.IsNullable = true
            param.SourceColumn = "FECHARECIBIDO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_OT"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 10
            param.IsNullable = true
            param.SourceColumn = "OT"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_OT"
            param.Size = 10
            param.IsNullable = true
            param.SourceColumn = "OT"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_FECHAENTREGASOL"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 8
            param.IsNullable = true
            param.SourceColumn = "FECHAENTREGASOL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_FECHAENTREGASOL"
            param.DbType = Global.System.Data.DbType.DateTime
            param.Size = 8
            param.IsNullable = true
            param.SourceColumn = "FECHAENTREGASOL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_CLIENTE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "CLIENTE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_CLIENTE"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "CLIENTE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_PRODUCTO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "PRODUCTO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_PRODUCTO"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "PRODUCTO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_CANTIDAD"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "CANTIDAD"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_CANTIDAD"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "CANTIDAD"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_UNIDAD"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "UNIDAD"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_UNIDAD"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "UNIDAD"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_ANCHO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ANCHO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_ANCHO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ANCHO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_ALTO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ALTO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_ALTO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "ALTO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_SOLAPA"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "SOLAPA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_SOLAPA"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "SOLAPA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_FUELLELATERAL"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "FUELLELATERAL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_FUELLELATERAL"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "FUELLELATERAL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_FUELLEFONDO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "FUELLEFONDO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_FUELLEFONDO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "FUELLEFONDO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_COPETE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "COPETE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_COPETE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "COPETE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_AREASELLOREV"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "AREASELLOREV"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_AREASELLOREV"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "AREASELLOREV"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_AREASELLOFONDO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "AREASELLOFONDO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_AREASELLOFONDO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "AREASELLOFONDO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_TIPOIMPRESION"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPOIMPRESION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_TIPOIMPRESION"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPOIMPRESION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_TIPOTRABAJO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPOTRABAJO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_TIPOTRABAJO"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "TIPOTRABAJO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_REPEJE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "REPEJE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_REPEJE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "REPEJE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_REPDES"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "REPDES"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_REPDES"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "REPDES"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATBASE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATBASE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATBASE"
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATBASE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATBASECALIBRE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASECALIBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATBASECALIBRE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASECALIBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATBASEKG"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASEKG"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATBASEKG"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASEKG"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATLAMINACION"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATLAMINACION"
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATLAMINACIONCALIBRE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONCALIBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATLAMINACIONCALIBRE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONCALIBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATLAMINACIONKG"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONKG"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATLAMINACIONKG"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONKG"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATTRILAMINACION"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATTRILAMINACION"
            param.Size = 250
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATTRILAMINACIONCALIBRE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONCALIBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATTRILAMINACIONCALIBRE"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONCALIBRE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATTRILAMINACIONKG"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONKG"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATTRILAMINACIONKG"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONKG"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_CLAVEINTELISIS"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "CLAVEINTELISIS"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_CLAVEINTELISIS"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "CLAVEINTELISIS"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_ORDENCOMPRA"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "ORDENCOMPRA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_ORDENCOMPRA"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "ORDENCOMPRA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_CLAVEPRODUCTO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "CLAVEPRODUCTO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_CLAVEPRODUCTO"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "CLAVEPRODUCTO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_IMPRESORA"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 500
            param.IsNullable = true
            param.SourceColumn = "IMPRESORA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_IMPRESORA"
            param.Size = 500
            param.IsNullable = true
            param.SourceColumn = "IMPRESORA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_RODILLO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "RODILLO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_RODILLO"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "RODILLO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_FIGURASALIDAFINAL"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "FIGURASALIDAFINAL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_FIGURASALIDAFINAL"
            param.DbType = Global.System.Data.DbType.Int16
            param.Size = 2
            param.IsNullable = true
            param.SourceColumn = "FIGURASALIDAFINAL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EMPATES"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1500
            param.IsNullable = true
            param.SourceColumn = "EMPATES"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EMPATES"
            param.Size = 1500
            param.IsNullable = true
            param.SourceColumn = "EMPATES"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTCORTE"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTCORTE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTCORTE"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTCORTE"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTDOBLADO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTDOBLADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTDOBLADO"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTDOBLADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTEMBOBINADO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTEMBOBINADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTEMBOBINADO"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTEMBOBINADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTEXTRUSION"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTEXTRUSION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTEXTRUSION"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTEXTRUSION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTIMPRESION"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTIMPRESION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTIMPRESION"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTIMPRESION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTLAMINACION"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTLAMINACION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTLAMINACION"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTLAMINACION"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTMANGAS"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTMANGAS"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTMANGAS"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTMANGAS"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTREFINADO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTREFINADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTREFINADO"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTREFINADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_INSTSELLADO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTSELLADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_INSTSELLADO"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "INSTSELLADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_OBSERVACIONES"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "OBSERVACIONES"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_OBSERVACIONES"
            param.Size = 2500
            param.IsNullable = true
            param.SourceColumn = "OBSERVACIONES"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_ESIMPRESO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 10
            param.IsNullable = true
            param.SourceColumn = "ESIMPRESO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_ESIMPRESO"
            param.Size = 10
            param.IsNullable = true
            param.SourceColumn = "ESIMPRESO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_KGXMILL"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "KGXMILL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_KGXMILL"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "KGXMILL"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATBASEAMU"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASEAMU"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATBASEAMU"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATBASEAMU"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EXTIPO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXTIPO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EXTIPO"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXTIPO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EXCOLOR"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXCOLOR"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EXCOLOR"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXCOLOR"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EXTRATADO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXTRATADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EXTRATADO"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXTRATADO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EXDINAS"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXDINAS"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EXDINAS"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXDINAS"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EXDESLIZ"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXDESLIZ"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EXDESLIZ"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXDESLIZ"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EXANTIESTATICA"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXANTIESTATICA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EXANTIESTATICA"
            param.Size = 1000
            param.IsNullable = true
            param.SourceColumn = "EXANTIESTATICA"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATLAMINACIONAMU"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONAMU"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATLAMINACIONAMU"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATLAMINACIONAMU"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_MATTRILAMINACIONAMU"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONAMU"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_MATTRILAMINACIONAMU"
            param.DbType = Global.System.Data.DbType.[Single]
            param.Size = 4
            param.IsNullable = true
            param.SourceColumn = "MATTRILAMINACIONAMU"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EXKG"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "EXKG"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EXKG"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "EXKG"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_EXANCHO"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "EXANCHO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_EXANCHO"
            param.Size = 100
            param.IsNullable = true
            param.SourceColumn = "EXANCHO"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@IsNull_TIPOINSTRING"
            param.DbType = Global.System.Data.DbType.Int32
            param.Size = 36
            param.IsNullable = true
            param.SourceColumn = "TIPOINSTRING"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            param.SourceColumnNullMapping = true
            Me._adapter.UpdateCommand.Parameters.Add(param)
            param = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "@Original_TIPOINSTRING"
            param.Size = 36
            param.IsNullable = true
            param.SourceColumn = "TIPOINSTRING"
            param.SourceVersion = Global.System.Data.DataRowVersion.Original
            Me._adapter.UpdateCommand.Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.FirebirdSql.Data.FirebirdClient.FbConnection()
            Me._connection.ConnectionString = Global.OTS.MySettings.Default.ProduccionOts
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.FirebirdSql.Data.FirebirdClient.FbCommand(0) {}
            Me._commandCollection(0) = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ""ID"", ""TIPO"", ""FECHARECIBIDO"", ""OT"", ""FECHAENTREGASOL"", ""CLIENTE"", ""PRODUC"& _ 
                "TO"", ""CANTIDAD"", ""UNIDAD"", ""ANCHO"", ""ALTO"", ""SOLAPA"", ""FUELLELATERAL"", ""FUELLEFO"& _ 
                "NDO"", ""COPETE"", ""AREASELLOREV"", ""AREASELLOFONDO"", ""TIPOIMPRESION"", ""TIPOTRABAJO"""& _ 
                ", ""REPEJE"", ""REPDES"", ""MATBASE"", ""MATBASECALIBRE"", ""MATBASEKG"", ""MATLAMINACION"","& _ 
                " ""MATLAMINACIONCALIBRE"", ""MATLAMINACIONKG"", ""MATTRILAMINACION"", ""MATTRILAMINACIO"& _ 
                "NCALIBRE"", ""MATTRILAMINACIONKG"", ""CLAVEINTELISIS"", ""ORDENCOMPRA"", ""CLAVEPRODUCTO"& _ 
                """, ""IMPRESORA"", ""RODILLO"", ""FIGURASALIDAFINAL"", ""EMPATES"", ""INSTCORTE"", ""INSTDOB"& _ 
                "LADO"", ""INSTEMBOBINADO"", ""INSTEXTRUSION"", ""INSTIMPRESION"", ""INSTLAMINACION"", ""IN"& _ 
                "STMANGAS"", ""INSTREFINADO"", ""INSTSELLADO"", ""OBSERVACIONES"", ""ESIMPRESO"", ""KGXMILL"& _ 
                """, ""MATBASEAMU"", ""EXTIPO"", ""EXCOLOR"", ""EXTRATADO"", ""EXDINAS"", ""EXDESLIZ"", ""EXANT"& _ 
                "IESTATICA"", ""MATLAMINACIONAMU"", ""MATTRILAMINACIONAMU"", ""EXKG"", ""EXANCHO"", ""TIPOI"& _ 
                "NSTRING"" FROM ""ORDENTRABAJO"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.ORDENTRABAJODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DataSet1.ORDENTRABAJODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DataSet1.ORDENTRABAJODataTable = New DataSet1.ORDENTRABAJODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DataSet1.ORDENTRABAJODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DataSet1) As Integer
            Return Me.Adapter.Update(dataSet, "ORDENTRABAJO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_TIPO As Global.System.Nullable(Of Short),  _
                    ByVal Original_FECHARECIBIDO As Global.System.Nullable(Of Date),  _
                    ByVal Original_OT As String,  _
                    ByVal Original_FECHAENTREGASOL As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENTE As String,  _
                    ByVal Original_PRODUCTO As String,  _
                    ByVal Original_CANTIDAD As Global.System.Nullable(Of Single),  _
                    ByVal Original_UNIDAD As String,  _
                    ByVal Original_ANCHO As Global.System.Nullable(Of Single),  _
                    ByVal Original_ALTO As Global.System.Nullable(Of Single),  _
                    ByVal Original_SOLAPA As Global.System.Nullable(Of Single),  _
                    ByVal Original_FUELLELATERAL As Global.System.Nullable(Of Single),  _
                    ByVal Original_FUELLEFONDO As Global.System.Nullable(Of Single),  _
                    ByVal Original_COPETE As Global.System.Nullable(Of Single),  _
                    ByVal Original_AREASELLOREV As Global.System.Nullable(Of Single),  _
                    ByVal Original_AREASELLOFONDO As Global.System.Nullable(Of Single),  _
                    ByVal Original_TIPOIMPRESION As Global.System.Nullable(Of Short),  _
                    ByVal Original_TIPOTRABAJO As Global.System.Nullable(Of Short),  _
                    ByVal Original_REPEJE As Global.System.Nullable(Of Single),  _
                    ByVal Original_REPDES As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATBASE As String,  _
                    ByVal Original_MATBASECALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATBASEKG As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATLAMINACION As String,  _
                    ByVal Original_MATLAMINACIONCALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATLAMINACIONKG As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATTRILAMINACION As String,  _
                    ByVal Original_MATTRILAMINACIONCALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATTRILAMINACIONKG As Global.System.Nullable(Of Single),  _
                    ByVal Original_CLAVEINTELISIS As String,  _
                    ByVal Original_ORDENCOMPRA As String,  _
                    ByVal Original_CLAVEPRODUCTO As String,  _
                    ByVal Original_IMPRESORA As String,  _
                    ByVal Original_RODILLO As Global.System.Nullable(Of Single),  _
                    ByVal Original_FIGURASALIDAFINAL As Global.System.Nullable(Of Short),  _
                    ByVal Original_EMPATES As String,  _
                    ByVal Original_INSTCORTE As String,  _
                    ByVal Original_INSTDOBLADO As String,  _
                    ByVal Original_INSTEMBOBINADO As String,  _
                    ByVal Original_INSTEXTRUSION As String,  _
                    ByVal Original_INSTIMPRESION As String,  _
                    ByVal Original_INSTLAMINACION As String,  _
                    ByVal Original_INSTMANGAS As String,  _
                    ByVal Original_INSTREFINADO As String,  _
                    ByVal Original_INSTSELLADO As String,  _
                    ByVal Original_OBSERVACIONES As String,  _
                    ByVal Original_ESIMPRESO As String,  _
                    ByVal Original_KGXMILL As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATBASEAMU As Global.System.Nullable(Of Single),  _
                    ByVal Original_EXTIPO As String,  _
                    ByVal Original_EXCOLOR As String,  _
                    ByVal Original_EXTRATADO As String,  _
                    ByVal Original_EXDINAS As String,  _
                    ByVal Original_EXDESLIZ As String,  _
                    ByVal Original_EXANTIESTATICA As String,  _
                    ByVal Original_MATLAMINACIONAMU As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATTRILAMINACIONAMU As Global.System.Nullable(Of Single),  _
                    ByVal Original_EXKG As String,  _
                    ByVal Original_EXANCHO As String,  _
                    ByVal Original_TIPOINSTRING As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_TIPO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_TIPO.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHARECIBIDO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_FECHARECIBIDO.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_OT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_OT,String)
            End If
            If (Original_FECHAENTREGASOL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_FECHAENTREGASOL.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_CLIENTE,String)
            End If
            If (Original_PRODUCTO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_PRODUCTO,String)
            End If
            If (Original_CANTIDAD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_CANTIDAD.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_UNIDAD Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_UNIDAD,String)
            End If
            If (Original_ANCHO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_ANCHO.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_ALTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_ALTO.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_SOLAPA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_SOLAPA.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_FUELLELATERAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_FUELLELATERAL.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_FUELLEFONDO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_FUELLEFONDO.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_COPETE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_COPETE.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_AREASELLOREV.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_AREASELLOREV.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_AREASELLOFONDO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_AREASELLOFONDO.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_TIPOIMPRESION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_TIPOIMPRESION.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_TIPOTRABAJO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_TIPOTRABAJO.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_REPEJE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_REPEJE.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_REPDES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_REPDES.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_MATBASE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_MATBASE,String)
            End If
            If (Original_MATBASECALIBRE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_MATBASECALIBRE.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_MATBASEKG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_MATBASEKG.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_MATLAMINACION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_MATLAMINACION,String)
            End If
            If (Original_MATLAMINACIONCALIBRE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_MATLAMINACIONCALIBRE.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_MATLAMINACIONKG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_MATLAMINACIONKG.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_MATTRILAMINACION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_MATTRILAMINACION,String)
            End If
            If (Original_MATTRILAMINACIONCALIBRE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_MATTRILAMINACIONCALIBRE.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_MATTRILAMINACIONKG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_MATTRILAMINACIONKG.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_CLAVEINTELISIS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_CLAVEINTELISIS,String)
            End If
            If (Original_ORDENCOMPRA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_ORDENCOMPRA,String)
            End If
            If (Original_CLAVEPRODUCTO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_CLAVEPRODUCTO,String)
            End If
            If (Original_IMPRESORA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_IMPRESORA,String)
            End If
            If (Original_RODILLO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_RODILLO.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_FIGURASALIDAFINAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_FIGURASALIDAFINAL.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_EMPATES Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_EMPATES,String)
            End If
            If (Original_INSTCORTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_INSTCORTE,String)
            End If
            If (Original_INSTDOBLADO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_INSTDOBLADO,String)
            End If
            If (Original_INSTEMBOBINADO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_INSTEMBOBINADO,String)
            End If
            If (Original_INSTEXTRUSION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_INSTEXTRUSION,String)
            End If
            If (Original_INSTIMPRESION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_INSTIMPRESION,String)
            End If
            If (Original_INSTLAMINACION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_INSTLAMINACION,String)
            End If
            If (Original_INSTMANGAS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_INSTMANGAS,String)
            End If
            If (Original_INSTREFINADO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_INSTREFINADO,String)
            End If
            If (Original_INSTSELLADO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_INSTSELLADO,String)
            End If
            If (Original_OBSERVACIONES Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_OBSERVACIONES,String)
            End If
            If (Original_ESIMPRESO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(Original_ESIMPRESO,String)
            End If
            If (Original_KGXMILL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(Original_KGXMILL.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Original_MATBASEAMU.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(Original_MATBASEAMU.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_EXTIPO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(Original_EXTIPO,String)
            End If
            If (Original_EXCOLOR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(Original_EXCOLOR,String)
            End If
            If (Original_EXTRATADO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(Original_EXTRATADO,String)
            End If
            If (Original_EXDINAS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(Original_EXDINAS,String)
            End If
            If (Original_EXDESLIZ Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(Original_EXDESLIZ,String)
            End If
            If (Original_EXANTIESTATICA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(Original_EXANTIESTATICA,String)
            End If
            If (Original_MATLAMINACIONAMU.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(Original_MATLAMINACIONAMU.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (Original_MATTRILAMINACIONAMU.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(Original_MATTRILAMINACIONAMU.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (Original_EXKG Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(Original_EXKG,String)
            End If
            If (Original_EXANCHO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(Original_EXANCHO,String)
            End If
            If (Original_TIPOINSTRING Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(Original_TIPOINSTRING,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ID As Integer,  _
                    ByVal TIPO As Global.System.Nullable(Of Short),  _
                    ByVal FECHARECIBIDO As Global.System.Nullable(Of Date),  _
                    ByVal OT As String,  _
                    ByVal FECHAENTREGASOL As Global.System.Nullable(Of Date),  _
                    ByVal CLIENTE As String,  _
                    ByVal PRODUCTO As String,  _
                    ByVal CANTIDAD As Global.System.Nullable(Of Single),  _
                    ByVal UNIDAD As String,  _
                    ByVal ANCHO As Global.System.Nullable(Of Single),  _
                    ByVal ALTO As Global.System.Nullable(Of Single),  _
                    ByVal SOLAPA As Global.System.Nullable(Of Single),  _
                    ByVal FUELLELATERAL As Global.System.Nullable(Of Single),  _
                    ByVal FUELLEFONDO As Global.System.Nullable(Of Single),  _
                    ByVal COPETE As Global.System.Nullable(Of Single),  _
                    ByVal AREASELLOREV As Global.System.Nullable(Of Single),  _
                    ByVal AREASELLOFONDO As Global.System.Nullable(Of Single),  _
                    ByVal TIPOIMPRESION As Global.System.Nullable(Of Short),  _
                    ByVal TIPOTRABAJO As Global.System.Nullable(Of Short),  _
                    ByVal REPEJE As Global.System.Nullable(Of Single),  _
                    ByVal REPDES As Global.System.Nullable(Of Single),  _
                    ByVal MATBASE As String,  _
                    ByVal MATBASECALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal MATBASEKG As Global.System.Nullable(Of Single),  _
                    ByVal MATLAMINACION As String,  _
                    ByVal MATLAMINACIONCALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal MATLAMINACIONKG As Global.System.Nullable(Of Single),  _
                    ByVal MATTRILAMINACION As String,  _
                    ByVal MATTRILAMINACIONCALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal MATTRILAMINACIONKG As Global.System.Nullable(Of Single),  _
                    ByVal CLAVEINTELISIS As String,  _
                    ByVal ORDENCOMPRA As String,  _
                    ByVal CLAVEPRODUCTO As String,  _
                    ByVal IMPRESORA As String,  _
                    ByVal RODILLO As Global.System.Nullable(Of Single),  _
                    ByVal FIGURASALIDAFINAL As Global.System.Nullable(Of Short),  _
                    ByVal EMPATES As String,  _
                    ByVal INSTCORTE As String,  _
                    ByVal INSTDOBLADO As String,  _
                    ByVal INSTEMBOBINADO As String,  _
                    ByVal INSTEXTRUSION As String,  _
                    ByVal INSTIMPRESION As String,  _
                    ByVal INSTLAMINACION As String,  _
                    ByVal INSTMANGAS As String,  _
                    ByVal INSTREFINADO As String,  _
                    ByVal INSTSELLADO As String,  _
                    ByVal OBSERVACIONES As String,  _
                    ByVal ESIMPRESO As String,  _
                    ByVal KGXMILL As Global.System.Nullable(Of Single),  _
                    ByVal MATBASEAMU As Global.System.Nullable(Of Single),  _
                    ByVal EXTIPO As String,  _
                    ByVal EXCOLOR As String,  _
                    ByVal EXTRATADO As String,  _
                    ByVal EXDINAS As String,  _
                    ByVal EXDESLIZ As String,  _
                    ByVal EXANTIESTATICA As String,  _
                    ByVal MATLAMINACIONAMU As Global.System.Nullable(Of Single),  _
                    ByVal MATTRILAMINACIONAMU As Global.System.Nullable(Of Single),  _
                    ByVal EXKG As String,  _
                    ByVal EXANCHO As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID,Integer)
            If (TIPO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TIPO.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (FECHARECIBIDO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(FECHARECIBIDO.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (OT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(OT,String)
            End If
            If (FECHAENTREGASOL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(FECHAENTREGASOL.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CLIENTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CLIENTE,String)
            End If
            If (PRODUCTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PRODUCTO,String)
            End If
            If (CANTIDAD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CANTIDAD.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (UNIDAD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(UNIDAD,String)
            End If
            If (ANCHO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ANCHO.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (ALTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ALTO.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (SOLAPA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SOLAPA.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (FUELLELATERAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(FUELLELATERAL.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (FUELLEFONDO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(FUELLEFONDO.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (COPETE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(COPETE.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (AREASELLOREV.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(AREASELLOREV.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (AREASELLOFONDO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(AREASELLOFONDO.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (TIPOIMPRESION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(TIPOIMPRESION.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (TIPOTRABAJO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(TIPOTRABAJO.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (REPEJE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(REPEJE.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (REPDES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(REPDES.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (MATBASE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(MATBASE,String)
            End If
            If (MATBASECALIBRE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(MATBASECALIBRE.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (MATBASEKG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(MATBASEKG.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (MATLAMINACION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(MATLAMINACION,String)
            End If
            If (MATLAMINACIONCALIBRE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(MATLAMINACIONCALIBRE.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (MATLAMINACIONKG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(MATLAMINACIONKG.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (MATTRILAMINACION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(MATTRILAMINACION,String)
            End If
            If (MATTRILAMINACIONCALIBRE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(MATTRILAMINACIONCALIBRE.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (MATTRILAMINACIONKG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(MATTRILAMINACIONKG.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CLAVEINTELISIS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(CLAVEINTELISIS,String)
            End If
            If (ORDENCOMPRA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(ORDENCOMPRA,String)
            End If
            If (CLAVEPRODUCTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(CLAVEPRODUCTO,String)
            End If
            If (IMPRESORA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(IMPRESORA,String)
            End If
            If (RODILLO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(RODILLO.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (FIGURASALIDAFINAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(FIGURASALIDAFINAL.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (EMPATES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(EMPATES,String)
            End If
            If (INSTCORTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(INSTCORTE,String)
            End If
            If (INSTDOBLADO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(INSTDOBLADO,String)
            End If
            If (INSTEMBOBINADO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(INSTEMBOBINADO,String)
            End If
            If (INSTEXTRUSION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(INSTEXTRUSION,String)
            End If
            If (INSTIMPRESION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(INSTIMPRESION,String)
            End If
            If (INSTLAMINACION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(INSTLAMINACION,String)
            End If
            If (INSTMANGAS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(INSTMANGAS,String)
            End If
            If (INSTREFINADO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(INSTREFINADO,String)
            End If
            If (INSTSELLADO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(INSTSELLADO,String)
            End If
            If (OBSERVACIONES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(OBSERVACIONES,String)
            End If
            If (ESIMPRESO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(ESIMPRESO,String)
            End If
            If (KGXMILL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(KGXMILL.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (MATBASEAMU.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(MATBASEAMU.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (EXTIPO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(EXTIPO,String)
            End If
            If (EXCOLOR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(EXCOLOR,String)
            End If
            If (EXTRATADO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(EXTRATADO,String)
            End If
            If (EXDINAS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(EXDINAS,String)
            End If
            If (EXDESLIZ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(EXDESLIZ,String)
            End If
            If (EXANTIESTATICA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(EXANTIESTATICA,String)
            End If
            If (MATLAMINACIONAMU.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(MATLAMINACIONAMU.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (MATTRILAMINACIONAMU.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(MATTRILAMINACIONAMU.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (EXKG Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(EXKG,String)
            End If
            If (EXANCHO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(EXANCHO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID As Integer,  _
                    ByVal TIPO As Global.System.Nullable(Of Short),  _
                    ByVal FECHARECIBIDO As Global.System.Nullable(Of Date),  _
                    ByVal OT As String,  _
                    ByVal FECHAENTREGASOL As Global.System.Nullable(Of Date),  _
                    ByVal CLIENTE As String,  _
                    ByVal PRODUCTO As String,  _
                    ByVal CANTIDAD As Global.System.Nullable(Of Single),  _
                    ByVal UNIDAD As String,  _
                    ByVal ANCHO As Global.System.Nullable(Of Single),  _
                    ByVal ALTO As Global.System.Nullable(Of Single),  _
                    ByVal SOLAPA As Global.System.Nullable(Of Single),  _
                    ByVal FUELLELATERAL As Global.System.Nullable(Of Single),  _
                    ByVal FUELLEFONDO As Global.System.Nullable(Of Single),  _
                    ByVal COPETE As Global.System.Nullable(Of Single),  _
                    ByVal AREASELLOREV As Global.System.Nullable(Of Single),  _
                    ByVal AREASELLOFONDO As Global.System.Nullable(Of Single),  _
                    ByVal TIPOIMPRESION As Global.System.Nullable(Of Short),  _
                    ByVal TIPOTRABAJO As Global.System.Nullable(Of Short),  _
                    ByVal REPEJE As Global.System.Nullable(Of Single),  _
                    ByVal REPDES As Global.System.Nullable(Of Single),  _
                    ByVal MATBASE As String,  _
                    ByVal MATBASECALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal MATBASEKG As Global.System.Nullable(Of Single),  _
                    ByVal MATLAMINACION As String,  _
                    ByVal MATLAMINACIONCALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal MATLAMINACIONKG As Global.System.Nullable(Of Single),  _
                    ByVal MATTRILAMINACION As String,  _
                    ByVal MATTRILAMINACIONCALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal MATTRILAMINACIONKG As Global.System.Nullable(Of Single),  _
                    ByVal CLAVEINTELISIS As String,  _
                    ByVal ORDENCOMPRA As String,  _
                    ByVal CLAVEPRODUCTO As String,  _
                    ByVal IMPRESORA As String,  _
                    ByVal RODILLO As Global.System.Nullable(Of Single),  _
                    ByVal FIGURASALIDAFINAL As Global.System.Nullable(Of Short),  _
                    ByVal EMPATES As String,  _
                    ByVal INSTCORTE As String,  _
                    ByVal INSTDOBLADO As String,  _
                    ByVal INSTEMBOBINADO As String,  _
                    ByVal INSTEXTRUSION As String,  _
                    ByVal INSTIMPRESION As String,  _
                    ByVal INSTLAMINACION As String,  _
                    ByVal INSTMANGAS As String,  _
                    ByVal INSTREFINADO As String,  _
                    ByVal INSTSELLADO As String,  _
                    ByVal OBSERVACIONES As String,  _
                    ByVal ESIMPRESO As String,  _
                    ByVal KGXMILL As Global.System.Nullable(Of Single),  _
                    ByVal MATBASEAMU As Global.System.Nullable(Of Single),  _
                    ByVal EXTIPO As String,  _
                    ByVal EXCOLOR As String,  _
                    ByVal EXTRATADO As String,  _
                    ByVal EXDINAS As String,  _
                    ByVal EXDESLIZ As String,  _
                    ByVal EXANTIESTATICA As String,  _
                    ByVal MATLAMINACIONAMU As Global.System.Nullable(Of Single),  _
                    ByVal MATTRILAMINACIONAMU As Global.System.Nullable(Of Single),  _
                    ByVal EXKG As String,  _
                    ByVal EXANCHO As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_TIPO As Global.System.Nullable(Of Short),  _
                    ByVal Original_FECHARECIBIDO As Global.System.Nullable(Of Date),  _
                    ByVal Original_OT As String,  _
                    ByVal Original_FECHAENTREGASOL As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENTE As String,  _
                    ByVal Original_PRODUCTO As String,  _
                    ByVal Original_CANTIDAD As Global.System.Nullable(Of Single),  _
                    ByVal Original_UNIDAD As String,  _
                    ByVal Original_ANCHO As Global.System.Nullable(Of Single),  _
                    ByVal Original_ALTO As Global.System.Nullable(Of Single),  _
                    ByVal Original_SOLAPA As Global.System.Nullable(Of Single),  _
                    ByVal Original_FUELLELATERAL As Global.System.Nullable(Of Single),  _
                    ByVal Original_FUELLEFONDO As Global.System.Nullable(Of Single),  _
                    ByVal Original_COPETE As Global.System.Nullable(Of Single),  _
                    ByVal Original_AREASELLOREV As Global.System.Nullable(Of Single),  _
                    ByVal Original_AREASELLOFONDO As Global.System.Nullable(Of Single),  _
                    ByVal Original_TIPOIMPRESION As Global.System.Nullable(Of Short),  _
                    ByVal Original_TIPOTRABAJO As Global.System.Nullable(Of Short),  _
                    ByVal Original_REPEJE As Global.System.Nullable(Of Single),  _
                    ByVal Original_REPDES As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATBASE As String,  _
                    ByVal Original_MATBASECALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATBASEKG As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATLAMINACION As String,  _
                    ByVal Original_MATLAMINACIONCALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATLAMINACIONKG As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATTRILAMINACION As String,  _
                    ByVal Original_MATTRILAMINACIONCALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATTRILAMINACIONKG As Global.System.Nullable(Of Single),  _
                    ByVal Original_CLAVEINTELISIS As String,  _
                    ByVal Original_ORDENCOMPRA As String,  _
                    ByVal Original_CLAVEPRODUCTO As String,  _
                    ByVal Original_IMPRESORA As String,  _
                    ByVal Original_RODILLO As Global.System.Nullable(Of Single),  _
                    ByVal Original_FIGURASALIDAFINAL As Global.System.Nullable(Of Short),  _
                    ByVal Original_EMPATES As String,  _
                    ByVal Original_INSTCORTE As String,  _
                    ByVal Original_INSTDOBLADO As String,  _
                    ByVal Original_INSTEMBOBINADO As String,  _
                    ByVal Original_INSTEXTRUSION As String,  _
                    ByVal Original_INSTIMPRESION As String,  _
                    ByVal Original_INSTLAMINACION As String,  _
                    ByVal Original_INSTMANGAS As String,  _
                    ByVal Original_INSTREFINADO As String,  _
                    ByVal Original_INSTSELLADO As String,  _
                    ByVal Original_OBSERVACIONES As String,  _
                    ByVal Original_ESIMPRESO As String,  _
                    ByVal Original_KGXMILL As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATBASEAMU As Global.System.Nullable(Of Single),  _
                    ByVal Original_EXTIPO As String,  _
                    ByVal Original_EXCOLOR As String,  _
                    ByVal Original_EXTRATADO As String,  _
                    ByVal Original_EXDINAS As String,  _
                    ByVal Original_EXDESLIZ As String,  _
                    ByVal Original_EXANTIESTATICA As String,  _
                    ByVal Original_MATLAMINACIONAMU As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATTRILAMINACIONAMU As Global.System.Nullable(Of Single),  _
                    ByVal Original_EXKG As String,  _
                    ByVal Original_EXANCHO As String,  _
                    ByVal Original_TIPOINSTRING As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID,Integer)
            If (TIPO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TIPO.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (FECHARECIBIDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FECHARECIBIDO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (OT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(OT,String)
            End If
            If (FECHAENTREGASOL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(FECHAENTREGASOL.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CLIENTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CLIENTE,String)
            End If
            If (PRODUCTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PRODUCTO,String)
            End If
            If (CANTIDAD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CANTIDAD.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (UNIDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(UNIDAD,String)
            End If
            If (ANCHO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ANCHO.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (ALTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ALTO.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (SOLAPA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(SOLAPA.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (FUELLELATERAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(FUELLELATERAL.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (FUELLEFONDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(FUELLEFONDO.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (COPETE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(COPETE.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (AREASELLOREV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(AREASELLOREV.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (AREASELLOFONDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(AREASELLOFONDO.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (TIPOIMPRESION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(TIPOIMPRESION.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (TIPOTRABAJO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(TIPOTRABAJO.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (REPEJE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(REPEJE.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (REPDES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(REPDES.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (MATBASE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(MATBASE,String)
            End If
            If (MATBASECALIBRE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(MATBASECALIBRE.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (MATBASEKG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(MATBASEKG.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (MATLAMINACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(MATLAMINACION,String)
            End If
            If (MATLAMINACIONCALIBRE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(MATLAMINACIONCALIBRE.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (MATLAMINACIONKG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(MATLAMINACIONKG.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (MATTRILAMINACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(MATTRILAMINACION,String)
            End If
            If (MATTRILAMINACIONCALIBRE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(MATTRILAMINACIONCALIBRE.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (MATTRILAMINACIONKG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(MATTRILAMINACIONKG.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CLAVEINTELISIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(CLAVEINTELISIS,String)
            End If
            If (ORDENCOMPRA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(ORDENCOMPRA,String)
            End If
            If (CLAVEPRODUCTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(CLAVEPRODUCTO,String)
            End If
            If (IMPRESORA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(IMPRESORA,String)
            End If
            If (RODILLO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(RODILLO.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (FIGURASALIDAFINAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(FIGURASALIDAFINAL.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (EMPATES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(EMPATES,String)
            End If
            If (INSTCORTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(INSTCORTE,String)
            End If
            If (INSTDOBLADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(INSTDOBLADO,String)
            End If
            If (INSTEMBOBINADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(INSTEMBOBINADO,String)
            End If
            If (INSTEXTRUSION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(INSTEXTRUSION,String)
            End If
            If (INSTIMPRESION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(INSTIMPRESION,String)
            End If
            If (INSTLAMINACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(INSTLAMINACION,String)
            End If
            If (INSTMANGAS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(INSTMANGAS,String)
            End If
            If (INSTREFINADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(INSTREFINADO,String)
            End If
            If (INSTSELLADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(INSTSELLADO,String)
            End If
            If (OBSERVACIONES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(OBSERVACIONES,String)
            End If
            If (ESIMPRESO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(ESIMPRESO,String)
            End If
            If (KGXMILL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(KGXMILL.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (MATBASEAMU.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(MATBASEAMU.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (EXTIPO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(EXTIPO,String)
            End If
            If (EXCOLOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(EXCOLOR,String)
            End If
            If (EXTRATADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(EXTRATADO,String)
            End If
            If (EXDINAS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(EXDINAS,String)
            End If
            If (EXDESLIZ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(EXDESLIZ,String)
            End If
            If (EXANTIESTATICA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(EXANTIESTATICA,String)
            End If
            If (MATLAMINACIONAMU.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(MATLAMINACIONAMU.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (MATTRILAMINACIONAMU.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(MATTRILAMINACIONAMU.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (EXKG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(EXKG,String)
            End If
            If (EXANCHO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(EXANCHO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_ID,Integer)
            If (Original_TIPO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_TIPO.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHARECIBIDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_FECHARECIBIDO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_OT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_OT,String)
            End If
            If (Original_FECHAENTREGASOL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_FECHAENTREGASOL.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_CLIENTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_CLIENTE,String)
            End If
            If (Original_PRODUCTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_PRODUCTO,String)
            End If
            If (Original_CANTIDAD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_CANTIDAD.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_UNIDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_UNIDAD,String)
            End If
            If (Original_ANCHO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_ANCHO.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (Original_ALTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_ALTO.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_SOLAPA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_SOLAPA.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_FUELLELATERAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_FUELLELATERAL.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_FUELLEFONDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_FUELLEFONDO.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_COPETE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_COPETE.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_AREASELLOREV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_AREASELLOREV.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_AREASELLOFONDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_AREASELLOFONDO.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_TIPOIMPRESION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_TIPOIMPRESION.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_TIPOTRABAJO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_TIPOTRABAJO.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Original_REPEJE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_REPEJE.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_REPDES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_REPDES.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_MATBASE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_MATBASE,String)
            End If
            If (Original_MATBASECALIBRE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_MATBASECALIBRE.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_MATBASEKG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_MATBASEKG.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Original_MATLAMINACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_MATLAMINACION,String)
            End If
            If (Original_MATLAMINACIONCALIBRE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_MATLAMINACIONCALIBRE.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (Original_MATLAMINACIONKG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_MATLAMINACIONKG.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (Original_MATTRILAMINACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_MATTRILAMINACION,String)
            End If
            If (Original_MATTRILAMINACIONCALIBRE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_MATTRILAMINACIONCALIBRE.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Original_MATTRILAMINACIONKG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_MATTRILAMINACIONKG.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            If (Original_CLAVEINTELISIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_CLAVEINTELISIS,String)
            End If
            If (Original_ORDENCOMPRA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_ORDENCOMPRA,String)
            End If
            If (Original_CLAVEPRODUCTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_CLAVEPRODUCTO,String)
            End If
            If (Original_IMPRESORA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_IMPRESORA,String)
            End If
            If (Original_RODILLO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_RODILLO.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            If (Original_FIGURASALIDAFINAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(Original_FIGURASALIDAFINAL.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (Original_EMPATES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(Original_EMPATES,String)
            End If
            If (Original_INSTCORTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Original_INSTCORTE,String)
            End If
            If (Original_INSTDOBLADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Original_INSTDOBLADO,String)
            End If
            If (Original_INSTEMBOBINADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Original_INSTEMBOBINADO,String)
            End If
            If (Original_INSTEXTRUSION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(Original_INSTEXTRUSION,String)
            End If
            If (Original_INSTIMPRESION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(Original_INSTIMPRESION,String)
            End If
            If (Original_INSTLAMINACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(Original_INSTLAMINACION,String)
            End If
            If (Original_INSTMANGAS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(Original_INSTMANGAS,String)
            End If
            If (Original_INSTREFINADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(Original_INSTREFINADO,String)
            End If
            If (Original_INSTSELLADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(Original_INSTSELLADO,String)
            End If
            If (Original_OBSERVACIONES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(Original_OBSERVACIONES,String)
            End If
            If (Original_ESIMPRESO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(Original_ESIMPRESO,String)
            End If
            If (Original_KGXMILL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(Original_KGXMILL.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = Global.System.DBNull.Value
            End If
            If (Original_MATBASEAMU.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(Original_MATBASEAMU.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = Global.System.DBNull.Value
            End If
            If (Original_EXTIPO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(Original_EXTIPO,String)
            End If
            If (Original_EXCOLOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(Original_EXCOLOR,String)
            End If
            If (Original_EXTRATADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(Original_EXTRATADO,String)
            End If
            If (Original_EXDINAS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(Original_EXDINAS,String)
            End If
            If (Original_EXDESLIZ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(Original_EXDESLIZ,String)
            End If
            If (Original_EXANTIESTATICA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(Original_EXANTIESTATICA,String)
            End If
            If (Original_MATLAMINACIONAMU.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(Original_MATLAMINACIONAMU.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = Global.System.DBNull.Value
            End If
            If (Original_MATTRILAMINACIONAMU.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(Original_MATTRILAMINACIONAMU.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = Global.System.DBNull.Value
            End If
            If (Original_EXKG Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(Original_EXKG,String)
            End If
            If (Original_EXANCHO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(Original_EXANCHO,String)
            End If
            If (Original_TIPOINSTRING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(Original_TIPOINSTRING,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal TIPO As Global.System.Nullable(Of Short),  _
                    ByVal FECHARECIBIDO As Global.System.Nullable(Of Date),  _
                    ByVal OT As String,  _
                    ByVal FECHAENTREGASOL As Global.System.Nullable(Of Date),  _
                    ByVal CLIENTE As String,  _
                    ByVal PRODUCTO As String,  _
                    ByVal CANTIDAD As Global.System.Nullable(Of Single),  _
                    ByVal UNIDAD As String,  _
                    ByVal ANCHO As Global.System.Nullable(Of Single),  _
                    ByVal ALTO As Global.System.Nullable(Of Single),  _
                    ByVal SOLAPA As Global.System.Nullable(Of Single),  _
                    ByVal FUELLELATERAL As Global.System.Nullable(Of Single),  _
                    ByVal FUELLEFONDO As Global.System.Nullable(Of Single),  _
                    ByVal COPETE As Global.System.Nullable(Of Single),  _
                    ByVal AREASELLOREV As Global.System.Nullable(Of Single),  _
                    ByVal AREASELLOFONDO As Global.System.Nullable(Of Single),  _
                    ByVal TIPOIMPRESION As Global.System.Nullable(Of Short),  _
                    ByVal TIPOTRABAJO As Global.System.Nullable(Of Short),  _
                    ByVal REPEJE As Global.System.Nullable(Of Single),  _
                    ByVal REPDES As Global.System.Nullable(Of Single),  _
                    ByVal MATBASE As String,  _
                    ByVal MATBASECALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal MATBASEKG As Global.System.Nullable(Of Single),  _
                    ByVal MATLAMINACION As String,  _
                    ByVal MATLAMINACIONCALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal MATLAMINACIONKG As Global.System.Nullable(Of Single),  _
                    ByVal MATTRILAMINACION As String,  _
                    ByVal MATTRILAMINACIONCALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal MATTRILAMINACIONKG As Global.System.Nullable(Of Single),  _
                    ByVal CLAVEINTELISIS As String,  _
                    ByVal ORDENCOMPRA As String,  _
                    ByVal CLAVEPRODUCTO As String,  _
                    ByVal IMPRESORA As String,  _
                    ByVal RODILLO As Global.System.Nullable(Of Single),  _
                    ByVal FIGURASALIDAFINAL As Global.System.Nullable(Of Short),  _
                    ByVal EMPATES As String,  _
                    ByVal INSTCORTE As String,  _
                    ByVal INSTDOBLADO As String,  _
                    ByVal INSTEMBOBINADO As String,  _
                    ByVal INSTEXTRUSION As String,  _
                    ByVal INSTIMPRESION As String,  _
                    ByVal INSTLAMINACION As String,  _
                    ByVal INSTMANGAS As String,  _
                    ByVal INSTREFINADO As String,  _
                    ByVal INSTSELLADO As String,  _
                    ByVal OBSERVACIONES As String,  _
                    ByVal ESIMPRESO As String,  _
                    ByVal KGXMILL As Global.System.Nullable(Of Single),  _
                    ByVal MATBASEAMU As Global.System.Nullable(Of Single),  _
                    ByVal EXTIPO As String,  _
                    ByVal EXCOLOR As String,  _
                    ByVal EXTRATADO As String,  _
                    ByVal EXDINAS As String,  _
                    ByVal EXDESLIZ As String,  _
                    ByVal EXANTIESTATICA As String,  _
                    ByVal MATLAMINACIONAMU As Global.System.Nullable(Of Single),  _
                    ByVal MATTRILAMINACIONAMU As Global.System.Nullable(Of Single),  _
                    ByVal EXKG As String,  _
                    ByVal EXANCHO As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_TIPO As Global.System.Nullable(Of Short),  _
                    ByVal Original_FECHARECIBIDO As Global.System.Nullable(Of Date),  _
                    ByVal Original_OT As String,  _
                    ByVal Original_FECHAENTREGASOL As Global.System.Nullable(Of Date),  _
                    ByVal Original_CLIENTE As String,  _
                    ByVal Original_PRODUCTO As String,  _
                    ByVal Original_CANTIDAD As Global.System.Nullable(Of Single),  _
                    ByVal Original_UNIDAD As String,  _
                    ByVal Original_ANCHO As Global.System.Nullable(Of Single),  _
                    ByVal Original_ALTO As Global.System.Nullable(Of Single),  _
                    ByVal Original_SOLAPA As Global.System.Nullable(Of Single),  _
                    ByVal Original_FUELLELATERAL As Global.System.Nullable(Of Single),  _
                    ByVal Original_FUELLEFONDO As Global.System.Nullable(Of Single),  _
                    ByVal Original_COPETE As Global.System.Nullable(Of Single),  _
                    ByVal Original_AREASELLOREV As Global.System.Nullable(Of Single),  _
                    ByVal Original_AREASELLOFONDO As Global.System.Nullable(Of Single),  _
                    ByVal Original_TIPOIMPRESION As Global.System.Nullable(Of Short),  _
                    ByVal Original_TIPOTRABAJO As Global.System.Nullable(Of Short),  _
                    ByVal Original_REPEJE As Global.System.Nullable(Of Single),  _
                    ByVal Original_REPDES As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATBASE As String,  _
                    ByVal Original_MATBASECALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATBASEKG As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATLAMINACION As String,  _
                    ByVal Original_MATLAMINACIONCALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATLAMINACIONKG As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATTRILAMINACION As String,  _
                    ByVal Original_MATTRILAMINACIONCALIBRE As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATTRILAMINACIONKG As Global.System.Nullable(Of Single),  _
                    ByVal Original_CLAVEINTELISIS As String,  _
                    ByVal Original_ORDENCOMPRA As String,  _
                    ByVal Original_CLAVEPRODUCTO As String,  _
                    ByVal Original_IMPRESORA As String,  _
                    ByVal Original_RODILLO As Global.System.Nullable(Of Single),  _
                    ByVal Original_FIGURASALIDAFINAL As Global.System.Nullable(Of Short),  _
                    ByVal Original_EMPATES As String,  _
                    ByVal Original_INSTCORTE As String,  _
                    ByVal Original_INSTDOBLADO As String,  _
                    ByVal Original_INSTEMBOBINADO As String,  _
                    ByVal Original_INSTEXTRUSION As String,  _
                    ByVal Original_INSTIMPRESION As String,  _
                    ByVal Original_INSTLAMINACION As String,  _
                    ByVal Original_INSTMANGAS As String,  _
                    ByVal Original_INSTREFINADO As String,  _
                    ByVal Original_INSTSELLADO As String,  _
                    ByVal Original_OBSERVACIONES As String,  _
                    ByVal Original_ESIMPRESO As String,  _
                    ByVal Original_KGXMILL As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATBASEAMU As Global.System.Nullable(Of Single),  _
                    ByVal Original_EXTIPO As String,  _
                    ByVal Original_EXCOLOR As String,  _
                    ByVal Original_EXTRATADO As String,  _
                    ByVal Original_EXDINAS As String,  _
                    ByVal Original_EXDESLIZ As String,  _
                    ByVal Original_EXANTIESTATICA As String,  _
                    ByVal Original_MATLAMINACIONAMU As Global.System.Nullable(Of Single),  _
                    ByVal Original_MATTRILAMINACIONAMU As Global.System.Nullable(Of Single),  _
                    ByVal Original_EXKG As String,  _
                    ByVal Original_EXANCHO As String,  _
                    ByVal Original_TIPOINSTRING As String) As Integer
            Return Me.Update(Original_ID, TIPO, FECHARECIBIDO, OT, FECHAENTREGASOL, CLIENTE, PRODUCTO, CANTIDAD, UNIDAD, ANCHO, ALTO, SOLAPA, FUELLELATERAL, FUELLEFONDO, COPETE, AREASELLOREV, AREASELLOFONDO, TIPOIMPRESION, TIPOTRABAJO, REPEJE, REPDES, MATBASE, MATBASECALIBRE, MATBASEKG, MATLAMINACION, MATLAMINACIONCALIBRE, MATLAMINACIONKG, MATTRILAMINACION, MATTRILAMINACIONCALIBRE, MATTRILAMINACIONKG, CLAVEINTELISIS, ORDENCOMPRA, CLAVEPRODUCTO, IMPRESORA, RODILLO, FIGURASALIDAFINAL, EMPATES, INSTCORTE, INSTDOBLADO, INSTEMBOBINADO, INSTEXTRUSION, INSTIMPRESION, INSTLAMINACION, INSTMANGAS, INSTREFINADO, INSTSELLADO, OBSERVACIONES, ESIMPRESO, KGXMILL, MATBASEAMU, EXTIPO, EXCOLOR, EXTRATADO, EXDINAS, EXDESLIZ, EXANTIESTATICA, MATLAMINACIONAMU, MATTRILAMINACIONAMU, EXKG, EXANCHO, Original_ID, Original_TIPO, Original_FECHARECIBIDO, Original_OT, Original_FECHAENTREGASOL, Original_CLIENTE, Original_PRODUCTO, Original_CANTIDAD, Original_UNIDAD, Original_ANCHO, Original_ALTO, Original_SOLAPA, Original_FUELLELATERAL, Original_FUELLEFONDO, Original_COPETE, Original_AREASELLOREV, Original_AREASELLOFONDO, Original_TIPOIMPRESION, Original_TIPOTRABAJO, Original_REPEJE, Original_REPDES, Original_MATBASE, Original_MATBASECALIBRE, Original_MATBASEKG, Original_MATLAMINACION, Original_MATLAMINACIONCALIBRE, Original_MATLAMINACIONKG, Original_MATTRILAMINACION, Original_MATTRILAMINACIONCALIBRE, Original_MATTRILAMINACIONKG, Original_CLAVEINTELISIS, Original_ORDENCOMPRA, Original_CLAVEPRODUCTO, Original_IMPRESORA, Original_RODILLO, Original_FIGURASALIDAFINAL, Original_EMPATES, Original_INSTCORTE, Original_INSTDOBLADO, Original_INSTEMBOBINADO, Original_INSTEXTRUSION, Original_INSTIMPRESION, Original_INSTLAMINACION, Original_INSTMANGAS, Original_INSTREFINADO, Original_INSTSELLADO, Original_OBSERVACIONES, Original_ESIMPRESO, Original_KGXMILL, Original_MATBASEAMU, Original_EXTIPO, Original_EXCOLOR, Original_EXTRATADO, Original_EXDINAS, Original_EXDESLIZ, Original_EXANTIESTATICA, Original_MATLAMINACIONAMU, Original_MATTRILAMINACIONAMU, Original_EXKG, Original_EXANCHO, Original_TIPOINSTRING)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SP_ORDENTRABAJOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
        
        Private _connection As Global.FirebirdSql.Data.FirebirdClient.FbConnection
        
        Private _transaction As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
        
        Private _commandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.FirebirdSql.Data.FirebirdClient.FbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.FirebirdSql.Data.FirebirdClient.FbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.FirebirdSql.Data.FirebirdClient.FbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.FirebirdSql.Data.FirebirdClient.FbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SP_ORDENTRABAJO"
            tableMapping.ColumnMappings.Add("TIPO", "TIPO")
            tableMapping.ColumnMappings.Add("FECHARECIBIDO", "FECHARECIBIDO")
            tableMapping.ColumnMappings.Add("FECHAENTREGASOL", "FECHAENTREGASOL")
            tableMapping.ColumnMappings.Add("CLIENTE", "CLIENTE")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("CANTIDAD", "CANTIDAD")
            tableMapping.ColumnMappings.Add("UNIDAD", "UNIDAD")
            tableMapping.ColumnMappings.Add("ANCHO", "ANCHO")
            tableMapping.ColumnMappings.Add("ALTO", "ALTO")
            tableMapping.ColumnMappings.Add("SOLAPA", "SOLAPA")
            tableMapping.ColumnMappings.Add("FUELLELATERAL", "FUELLELATERAL")
            tableMapping.ColumnMappings.Add("FUELLEFONDO", "FUELLEFONDO")
            tableMapping.ColumnMappings.Add("COPETE", "COPETE")
            tableMapping.ColumnMappings.Add("AREASELLOREV", "AREASELLOREV")
            tableMapping.ColumnMappings.Add("AREASELLOFONDO", "AREASELLOFONDO")
            tableMapping.ColumnMappings.Add("TIPOIMPRESION", "TIPOIMPRESION")
            tableMapping.ColumnMappings.Add("TIPOTRABAJO", "TIPOTRABAJO")
            tableMapping.ColumnMappings.Add("REPEJE", "REPEJE")
            tableMapping.ColumnMappings.Add("REPDES", "REPDES")
            tableMapping.ColumnMappings.Add("MATBASE", "MATBASE")
            tableMapping.ColumnMappings.Add("MATBASECALIBRE", "MATBASECALIBRE")
            tableMapping.ColumnMappings.Add("MATBASEKG", "MATBASEKG")
            tableMapping.ColumnMappings.Add("MATLAMINACION", "MATLAMINACION")
            tableMapping.ColumnMappings.Add("MATLAMINACIONCALIBRE", "MATLAMINACIONCALIBRE")
            tableMapping.ColumnMappings.Add("MATLAMINACIONKG", "MATLAMINACIONKG")
            tableMapping.ColumnMappings.Add("MATTRILAMINACION", "MATTRILAMINACION")
            tableMapping.ColumnMappings.Add("MATTRILAMINACIONCALIBRE", "MATTRILAMINACIONCALIBRE")
            tableMapping.ColumnMappings.Add("MATTRILAMINACIONKG", "MATTRILAMINACIONKG")
            tableMapping.ColumnMappings.Add("CLAVEINTELISIS", "CLAVEINTELISIS")
            tableMapping.ColumnMappings.Add("ORDENCOMPRA", "ORDENCOMPRA")
            tableMapping.ColumnMappings.Add("CLAVEPRODUCTO", "CLAVEPRODUCTO")
            tableMapping.ColumnMappings.Add("IMPRESORA", "IMPRESORA")
            tableMapping.ColumnMappings.Add("RODILLO", "RODILLO")
            tableMapping.ColumnMappings.Add("FIGURASALIDAFINAL", "FIGURASALIDAFINAL")
            tableMapping.ColumnMappings.Add("EMPATES", "EMPATES")
            tableMapping.ColumnMappings.Add("INSTCORTE", "INSTCORTE")
            tableMapping.ColumnMappings.Add("INSTDOBLADO", "INSTDOBLADO")
            tableMapping.ColumnMappings.Add("INSTEMBOBINADO", "INSTEMBOBINADO")
            tableMapping.ColumnMappings.Add("INSTEXTRUSION", "INSTEXTRUSION")
            tableMapping.ColumnMappings.Add("INSTIMPRESION", "INSTIMPRESION")
            tableMapping.ColumnMappings.Add("INSTLAMINACION", "INSTLAMINACION")
            tableMapping.ColumnMappings.Add("INSTMANGAS", "INSTMANGAS")
            tableMapping.ColumnMappings.Add("INSTREFINADO", "INSTREFINADO")
            tableMapping.ColumnMappings.Add("INSTSELLADO", "INSTSELLADO")
            tableMapping.ColumnMappings.Add("OBSERVACIONES", "OBSERVACIONES")
            tableMapping.ColumnMappings.Add("ESIMPRESO", "ESIMPRESO")
            tableMapping.ColumnMappings.Add("KGXMILL", "KGXMILL")
            tableMapping.ColumnMappings.Add("MATBASEAMU", "MATBASEAMU")
            tableMapping.ColumnMappings.Add("EXTIPO", "EXTIPO")
            tableMapping.ColumnMappings.Add("EXCOLOR", "EXCOLOR")
            tableMapping.ColumnMappings.Add("EXTRATADO", "EXTRATADO")
            tableMapping.ColumnMappings.Add("EXDINAS", "EXDINAS")
            tableMapping.ColumnMappings.Add("EXDESLIZ", "EXDESLIZ")
            tableMapping.ColumnMappings.Add("EXANTIESTATICA", "EXANTIESTATICA")
            tableMapping.ColumnMappings.Add("MATLAMINACIONAMU", "MATLAMINACIONAMU")
            tableMapping.ColumnMappings.Add("MATTRILAMINACIONAMU", "MATTRILAMINACIONAMU")
            tableMapping.ColumnMappings.Add("EXKG", "EXKG")
            tableMapping.ColumnMappings.Add("EXANCHO", "EXANCHO")
            tableMapping.ColumnMappings.Add("ENABLED", "ENABLED")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.FirebirdSql.Data.FirebirdClient.FbConnection()
            Me._connection.ConnectionString = Global.OTS.MySettings.Default.ProduccionOts
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.FirebirdSql.Data.FirebirdClient.FbCommand(0) {}
            Me._commandCollection(0) = New Global.FirebirdSql.Data.FirebirdClient.FbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = """SP_ORDENTRABAJO"""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Dim param As Global.FirebirdSql.Data.FirebirdClient.FbParameter = New Global.FirebirdSql.Data.FirebirdClient.FbParameter()
            param.ParameterName = "OT"
            param.Size = 10
            param.IsNullable = true
            param.SourceColumn = Nothing
            Me._commandCollection(0).Parameters.Add(param)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DataSet1.SP_ORDENTRABAJODataTable, ByVal OT As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (OT Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(OT,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal OT As String) As DataSet1.SP_ORDENTRABAJODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (OT Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(OT,String)
            End If
            Dim dataTable As DataSet1.SP_ORDENTRABAJODataTable = New DataSet1.SP_ORDENTRABAJODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _lINEASTableAdapter As LINEASTableAdapter
        
        Private _mAQUINASTableAdapter As MAQUINASTableAdapter
        
        Private _oRDENTRABAJOTableAdapter As ORDENTRABAJOTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property LINEASTableAdapter() As LINEASTableAdapter
            Get
                Return Me._lINEASTableAdapter
            End Get
            Set
                Me._lINEASTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MAQUINASTableAdapter() As MAQUINASTableAdapter
            Get
                Return Me._mAQUINASTableAdapter
            End Get
            Set
                Me._mAQUINASTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ORDENTRABAJOTableAdapter() As ORDENTRABAJOTableAdapter
            Get
                Return Me._oRDENTRABAJOTableAdapter
            End Get
            Set
                Me._oRDENTRABAJOTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._lINEASTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._lINEASTableAdapter.Connection) Is Nothing)) Then
                    Return Me._lINEASTableAdapter.Connection
                End If
                If ((Not (Me._mAQUINASTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mAQUINASTableAdapter.Connection) Is Nothing)) Then
                    Return Me._mAQUINASTableAdapter.Connection
                End If
                If ((Not (Me._oRDENTRABAJOTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._oRDENTRABAJOTableAdapter.Connection) Is Nothing)) Then
                    Return Me._oRDENTRABAJOTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._lINEASTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mAQUINASTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._oRDENTRABAJOTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._lINEASTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.LINEAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._lINEASTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._mAQUINASTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MAQUINAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mAQUINASTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._oRDENTRABAJOTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ORDENTRABAJO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._oRDENTRABAJOTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DataSet1, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._lINEASTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.LINEAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._lINEASTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._mAQUINASTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MAQUINAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mAQUINASTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._oRDENTRABAJOTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ORDENTRABAJO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._oRDENTRABAJOTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DataSet1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._oRDENTRABAJOTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ORDENTRABAJO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._oRDENTRABAJOTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._mAQUINASTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MAQUINAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mAQUINASTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._lINEASTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.LINEAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._lINEASTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DataSet1) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._lINEASTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._lINEASTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._mAQUINASTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mAQUINASTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._oRDENTRABAJOTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._oRDENTRABAJOTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._lINEASTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._lINEASTableAdapter, Me._lINEASTableAdapter.Connection)
                    Me._lINEASTableAdapter.Connection = CType(workConnection,Global.FirebirdSql.Data.FirebirdClient.FbConnection)
                    Me._lINEASTableAdapter.Transaction = CType(workTransaction,Global.FirebirdSql.Data.FirebirdClient.FbTransaction)
                    If Me._lINEASTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._lINEASTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._lINEASTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mAQUINASTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mAQUINASTableAdapter, Me._mAQUINASTableAdapter.Connection)
                    Me._mAQUINASTableAdapter.Connection = CType(workConnection,Global.FirebirdSql.Data.FirebirdClient.FbConnection)
                    Me._mAQUINASTableAdapter.Transaction = CType(workTransaction,Global.FirebirdSql.Data.FirebirdClient.FbTransaction)
                    If Me._mAQUINASTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mAQUINASTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mAQUINASTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._oRDENTRABAJOTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._oRDENTRABAJOTableAdapter, Me._oRDENTRABAJOTableAdapter.Connection)
                    Me._oRDENTRABAJOTableAdapter.Connection = CType(workConnection,Global.FirebirdSql.Data.FirebirdClient.FbConnection)
                    Me._oRDENTRABAJOTableAdapter.Transaction = CType(workTransaction,Global.FirebirdSql.Data.FirebirdClient.FbTransaction)
                    If Me._oRDENTRABAJOTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._oRDENTRABAJOTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._oRDENTRABAJOTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._lINEASTableAdapter) Is Nothing) Then
                    Me._lINEASTableAdapter.Connection = CType(revertConnections(Me._lINEASTableAdapter),Global.FirebirdSql.Data.FirebirdClient.FbConnection)
                    Me._lINEASTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mAQUINASTableAdapter) Is Nothing) Then
                    Me._mAQUINASTableAdapter.Connection = CType(revertConnections(Me._mAQUINASTableAdapter),Global.FirebirdSql.Data.FirebirdClient.FbConnection)
                    Me._mAQUINASTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._oRDENTRABAJOTableAdapter) Is Nothing) Then
                    Me._oRDENTRABAJOTableAdapter.Connection = CType(revertConnections(Me._oRDENTRABAJOTableAdapter),Global.FirebirdSql.Data.FirebirdClient.FbConnection)
                    Me._oRDENTRABAJOTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
