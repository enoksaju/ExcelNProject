{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/catalogos/catalogos.component.html","webpack:///./src/app/catalogos/catalogos.component.scss","webpack:///./src/app/catalogos/catalogos.component.ts","webpack:///./src/app/dialog.component.ts","webpack:///./src/app/dialog.service.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/mat-paginator-intl-cro.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/token-interceptor.ts","webpack:///./src/app/usuarios.service.ts","webpack:///./src/app/usuarios/agregar-usuario.component.ts","webpack:///./src/app/usuarios/manage-roles.component.ts","webpack:///./src/app/usuarios/usuarios.component.html","webpack:///./src/app/usuarios/usuarios.component.scss","webpack:///./src/app/usuarios/usuarios.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { UsuariosComponent } from './usuarios/usuarios.component';\nimport { CatalogosComponent } from './catalogos/catalogos.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'usuarios', component: UsuariosComponent },\n  {\n    path: 'catalogos', children: [\n      { path: '', component: CatalogosComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<mat-sidenav-container class=\\\"main-container mat-typography\\\">\\r\\n  <!-- SideNav -->\\r\\n  <mat-sidenav *ngIf=\\\"usuariosService.hasToken()\\\" #sideNav class=\\\"mat-elevation-z1\\\" style=\\\"width: 300px;\\\" fxLayout=\\\"column\\\"\\r\\n    [opened]=\\\"sideNavOpend() ? false: true\\\" [mode]=\\\"sideNavOpend() ? 'overlay' : 'side'\\\">\\r\\n\\r\\n    <!-- Barra de navegacion del side nav bar -->\\r\\n    <mat-toolbar fxFlex=\\\"60px\\\" color=\\\"primary\\\">\\r\\n      <span class=\\\"relleno\\\"></span>\\r\\n      <!-- Botón de apertura del menu MoreOptions -->\\r\\n      <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n        <mat-icon>more_vert</mat-icon>\\r\\n      </button>\\r\\n      <!-- Menu de mas opciones -->\\r\\n      <mat-menu #menu=\\\"matMenu\\\">\\r\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"themes\\\">\\r\\n          <mat-icon>color_lens</mat-icon>\\r\\n          <span>Temas</span>\\r\\n        </button>\\r\\n        <button mat-menu-item (click)=\\\"signOut()\\\" [routerLink]=\\\"'../login'\\\">\\r\\n          <mat-icon>close</mat-icon>\\r\\n          <span>Cerrar Sesión</span>\\r\\n        </button>\\r\\n      </mat-menu>\\r\\n\\r\\n      <!-- Menu de Temas -->\\r\\n      <mat-menu #themes=\\\"matMenu\\\">\\r\\n        <button mat-menu-item (click)=\\\"darkTheme = true\\\">\\r\\n          <span>Oscuro</span>\\r\\n        </button>\\r\\n        <button mat-menu-item (click)=\\\"darkTheme = false\\\">\\r\\n          <span>Claro</span>\\r\\n        </button>\\r\\n      </mat-menu>\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <!-- Menu de Navegacion -->\\r\\n    <!-- Con sesion iniciada -->\\r\\n    <div>\\r\\n      <mat-nav-list>\\r\\n        <mat-list-item [routerLink]=\\\"''\\\">\\r\\n          <fa-icon mat-list-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"['fas', 'home']\\\"></fa-icon>\\r\\n          <h4 mat-line>Inicio</h4>\\r\\n        </mat-list-item>\\r\\n        <mat-accordion>\\r\\n          <!-- Control de Usuarios -->\\r\\n          <mat-expansion-panel class=\\\"plain\\\" displayMode=\\\"flat\\\" *ngIf=\\\"usuariosService.CurrentIsInRol('Administrador,Develop,Sistemas')\\\">\\r\\n            <mat-expansion-panel-header>\\r\\n                <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"['fas', 'users']\\\"></fa-icon>\\r\\n                <h4>Administrador</h4>\\r\\n            </mat-expansion-panel-header>\\r\\n            <mat-nav-list>\\r\\n              <mat-list-item [routerLink]=\\\"'../usuarios'\\\">\\r\\n                <fa-icon mat-list-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"['fas', 'users']\\\"></fa-icon>\\r\\n                <h4 mat-line>Usuarios</h4>\\r\\n              </mat-list-item>\\r\\n            </mat-nav-list>\\r\\n          </mat-expansion-panel>\\r\\n          <!-- Catalogos -->\\r\\n          <mat-list-item [routerLink]=\\\"'../catalogos'\\\">\\r\\n            <fa-icon mat-list-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"['fas', 'book']\\\"></fa-icon>\\r\\n            <h4 mat-line>Catalogos</h4>\\r\\n          </mat-list-item>\\r\\n        </mat-accordion>\\r\\n      </mat-nav-list>\\r\\n    </div>\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <!-- Contenido principal de la pagina -->\\r\\n  <mat-sidenav-content fxLayout=\\\"column\\\">\\r\\n    <!-- ToolBar de la aplicacion en modo Movil -->\\r\\n    <mat-toolbar fxFlex=\\\"60px\\\" style=\\\"position:fixed; z-index: 999;\\\" color=\\\"primary\\\" *ngIf=\\\"sideNavOpend()\\\">\\r\\n\\r\\n      <!-- Control de apertura del SideNav -->\\r\\n      <button mat-icon-button (click)=\\\"OpenSideNav( sideNav )\\\">\\r\\n        <mat-icon>menu</mat-icon>\\r\\n      </button>\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <!-- Contendor de Componentes Navegables -->\\r\\n    <div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </mat-sidenav-content>\\r\\n\\r\\n</mat-sidenav-container>\\r\\n\"","module.exports = \".main-container {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0; }\\n\\n.plain {\\n  box-shadow: 0 0 0 0 !important; }\\n\\nmat-expansion-panel-header {\\n  padding-left: 16px; }\\n\\nmat-expansion-panel-header fa-icon {\\n    flex-shrink: 0;\\n    width: 24px;\\n    height: 24px;\\n    font-size: 24px !important;\\n    box-sizing: content-box;\\n    border-radius: 50%;\\n    padding: 4px; }\\n\\nmat-expansion-panel-header h4 {\\n    padding-left: 16px;\\n    padding-right: 0px;\\n    margin-top: auto;\\n    margin-bottom: auto; }\\n\"","import { Component, OnInit, Renderer2 } from '@angular/core';\nimport { MatSidenav, MatDrawer } from '@angular/material';\nimport { ObservableMedia } from '@angular/flex-layout';\nimport { state, trigger, transition, animate, style } from '@angular/animations';\nimport { UsuariosService } from './usuarios.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [\n    trigger('darkness', [\n      transition('* => *', [\n        style({\n          opacity: 0.1\n        }),\n        animate('800ms cubic-bezier(.92,.78,.75,.99)')\n      ])\n    ])\n  ]\n})\nexport class AppComponent implements OnInit {\n  _darkTheme: boolean;\n\n  // Declaracion de la propiedad darkTheme\n  set darkTheme(val: boolean) {\n    this._darkTheme = val;\n    localStorage.setItem('theme', val ? 'dark' : 'light');\n    if (val) {\n      this.render.removeClass(document.body, 'lt');\n    } else {\n      this.render.addClass(document.body, 'lt');\n    }\n  }\n  get darkTheme() {\n    return this._darkTheme;\n  }\n\n  constructor(private media: ObservableMedia, private render: Renderer2, public usuariosService: UsuariosService) { }\n\n  ngOnInit() {\n    this.darkTheme = localStorage.getItem('theme') === 'dark' ? true : false;\n    if (!this.usuariosService.hasToken()) { this.usuariosService.goToRoute('../login'); }\n  }\n\n  sideNavOpend() {\n    return this.media.isActive('lt-md');\n  }\n\n  signOut() {\n    this.usuariosService.signOut();\n  }\n\n  OpenSideNav(drawer: MatDrawer) {\n    drawer.open();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, Inject } from '@angular/core';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './/material.module';\r\nimport { TokenInterceptor } from './token-interceptor';\r\nimport { MatPaginatorIntlCro } from './mat-paginator-intl-cro';\r\nimport { MatPaginatorIntl } from '@angular/material';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UsuariosComponent } from './usuarios/usuarios.component';\r\nimport { CatalogosComponent } from './catalogos/catalogos.component';\r\nimport { AgregarUsuarioComponent } from './usuarios/agregar-usuario.component';\nimport { DialogComponent } from './dialog.component';\nimport { ManageRolesComponent } from './usuarios/manage-roles.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    UsuariosComponent,\r\n    CatalogosComponent,\r\n    AgregarUsuarioComponent,\r\n    DialogComponent,\r\n    ManageRolesComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    { provide: APP_BASE_HREF, useValue: '/' },\r\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\r\n    { provide: MatPaginatorIntl, useClass: MatPaginatorIntlCro }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [AgregarUsuarioComponent, DialogComponent, ManageRolesComponent]\r\n})\r\nexport class AppModule {\r\n  constructor(@Inject(APP_BASE_HREF) private baseHref: string) {\r\n    console.log(`El HREF base es : ${ this.baseHref }.` );\r\n  }\r\n}\r\n","module.exports = \"<p>\\n  catalogos works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-catalogos',\n  templateUrl: './catalogos.component.html',\n  styleUrls: ['./catalogos.component.scss']\n})\nexport class CatalogosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '../../node_modules/@angular/material';\n\nexport enum DialogIcons {\n  None,\n  Success,\n  Error,\n  Info,\n  Question\n}\n\nexport enum DialogButtonsFlags {\n  none = 0,\n  Ok = 1 << 0,\n  Cancel = 1 << 1,\n  Yes = 1 << 2,\n  No = 1 << 3\n}\n\nexport interface DialogData {\n  Message: string;\n  Title: string;\n  Icon: DialogIcons;\n  buttons: DialogButtonsFlags;\n}\n\nexport enum DialogResults {\n  Ok,\n  Cancel,\n  Yes,\n  No\n}\n\n\n@Component({\n  selector: 'app-dialog',\n  template: `\n  <div style=\"position: relative\" fxLayout=\"row\" fxLayoutGap=\"15px\" class=\"mat-typography\">\n  <!-- CloseButton -->\n  <button class=\"closeButton\"  tabIndex=\"3\" color=\"warn\" mat-icon-button (click)=\"CancelResult()\">\n    <mat-icon>close</mat-icon>\n  </button>\n  <!-- DialogIcon -->\n  <div fxFlex=\"80px\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <fa-icon [fixedWidth]=\"true\" [style.color]=\"ColorIcon\" [icon]=\"DialogIcon\" size=\"4x\"></fa-icon>\n  </div>\n  <!-- DialogContent -->\n  <div fxFlex=\"100%\">\n\n    <h2 mat-dialog-title>{{data.Title}}</h2>\n    <div mat-dialog-content [innerHTML]=\"data.Message\">\n    </div>\n\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <button *ngIf=\"HasFlag(data.buttons, DialogButtons.No)\" tabIndex=\"0\" (click)=\"NoResult()\" color=\"warn\" mat-stroked-button>No</button>\n      <button *ngIf=\"HasFlag(data.buttons, DialogButtons.Yes)\"  tabIndex=\"1\" (click)=\"YesResult()\" color=\"primary\" mat-stroked-button>Si</button>\n      <button *ngIf=\"HasFlag(data.buttons, DialogButtons.Cancel)\"  tabIndex=\"0\" (click)=\"CancelResult()\" color=\"warn\" mat-stroked-button>Cancelar</button>\n      <button *ngIf=\"HasFlag(data.buttons, DialogButtons.Ok)\"  tabIndex=\"1\" (click)=\"OkResult()\" color=\"primary\" mat-stroked-button>Ok</button>\n    </div>\n\n  </div>\n\n</div>\n  `,\n  styles: []\n})\nexport class DialogComponent implements OnInit {\n  DialogButtons = DialogButtonsFlags;\n\n  constructor(public dialogRef: MatDialogRef<DialogComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n    this.data.buttons = data.buttons === null || data.buttons === 0 ? DialogButtonsFlags.Ok : data.buttons;\n  }\n\n  ngOnInit() {\n  }\n\n  HasFlag(value: DialogButtonsFlags, compare: DialogButtonsFlags) {\n    if (value & compare) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  get DialogIcon() {\n    switch (this.data.Icon) {\n      case DialogIcons.Error:\n        return ['fas', 'times-circle'];\n      case DialogIcons.Info:\n        return ['fas', 'info-circle'];\n      case DialogIcons.Question:\n        return ['fas', 'question-circle'];\n      case DialogIcons.Success:\n        return ['fas', 'check-circle'];\n      default:\n        return ['fas', 'info-circle'];\n    }\n  }\n\n  get ColorIcon() {\n    switch (this.data.Icon) {\n      case DialogIcons.Error:\n        return '#f44336';\n      case DialogIcons.Info:\n        return '#03a9f4';\n      case DialogIcons.Question:\n        return '#304ffe';\n      case DialogIcons.Success:\n        return '#4caf50';\n      default:\n        return '#03a9f4';\n    }\n  }\n\n  OkResult() {\n    this.dialogRef.close(DialogResults.Ok);\n  }\n  CancelResult() {\n    this.dialogRef.close(DialogResults.Cancel);\n  }\n  YesResult() {\n    this.dialogRef.close(DialogResults.Yes);\n  }\n  NoResult() {\n    this.dialogRef.close(DialogResults.No);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '../../node_modules/@angular/material';\nimport { DialogComponent, DialogButtonsFlags, DialogIcons, DialogResults } from './dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  constructor(private dialog: MatDialog) { }\n    /**\n   * Controlador de los dialogos.\n   * @param Title Titulo del dialogo\n   * @param Message Mensaje que se mostrara en el dialogo\n   * @param options buttons: Botones del cuadro de dialogo, Icon: Icono que se mostrara\n   */\n  showDialog(\n    Title: string,\n    Message: string,\n    options?: { buttons?: DialogButtonsFlags, Icon?: DialogIcons }): Promise<DialogResults> {\n\n    const defaults_ = {\n      buttons: DialogButtonsFlags.Ok,\n      Icon: DialogIcons.Info,\n      affterClose: result => console.log(result)\n    };\n    const options_ = Object.assign(defaults_, options );\n    const dialogRef = this.dialog.open(DialogComponent, {\n      disableClose: true,\n      data: {\n        Message: Message,\n        Title: Title,\n        buttons: options_.buttons,\n        Icon: options_.Icon\n      }\n    });\n\n    return new Promise<DialogResults>((resolve, rejected) => {\n      dialogRef.afterClosed().subscribe((res: DialogResults) => resolve(res));\n    });\n\n  }\n}\n","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" fxFlexFill fxLayoutAlign=\\\"center center\\\">\\r\\n  <mat-card fxLayout=\\\"column\\\" class=\\\"mat-elevation-z20 card\\\">\\r\\n\\r\\n    <div class=\\\"logo\\\">\\r\\n      <img mat-card-image class=\\\"excel\\\" src=\\\"assets/logo.png\\\" alt=\\\"Logo de ExcelNobleza\\\">\\r\\n      <img mat-card-image class=\\\"guala\\\" src=\\\"assets/guala.png\\\" alt=\\\"Logo de Gualapack\\\">\\r\\n      <span>MIEMBRO DE GRUPO</span>\\r\\n    </div>\\r\\n\\r\\n    <mat-card-content fxLayout=\\\"column\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput [(ngModel)]=\\\"userLogin.username\\\" placeholder=\\\"Correo Electronico\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input type=\\\"password\\\" [(ngModel)]=\\\"userLogin.password\\\" matInput placeholder=\\\"Contraseña\\\">\\r\\n      </mat-form-field>\\r\\n    </mat-card-content>\\r\\n\\r\\n    <mat-card-actions fxLayoutAlign=\\\"space-around center\\\">\\r\\n      <button color=\\\"primary\\\" (click)=\\\"login()\\\" mat-raised-button>\\r\\n        <fa-icon [icon]=\\\"['fas', 'user']\\\"></fa-icon>\\r\\n        Entrar\\r\\n      </button>\\r\\n    </mat-card-actions>\\r\\n\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \":host {\\n  height: 100%; }\\n  :host.myClass {\\n    flex: 1 1 100%; }\\n  .card {\\n  max-width: 300px; }\\n  .logo {\\n  padding-left: 20px;\\n  padding-right: 20px;\\n  padding-top: 30px;\\n  padding-bottom: 30px;\\n  position: relative;\\n  height: 50px;\\n  width: 280px; }\\n  .logo > .excel {\\n    position: absolute;\\n    top: 30px;\\n    left: 30px;\\n    width: 250px; }\\n  .logo > .guala {\\n    position: absolute;\\n    bottom: 30px;\\n    right: 90px;\\n    width: 120px; }\\n  .logo > span {\\n    position: absolute;\\n    top: 50px;\\n    left: 5px;\\n    width: 250px;\\n    font-size: 10px; }\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UserLogin, UsuariosService } from '../usuarios.service';\nimport { Router, ActivatedRoute } from '../../../node_modules/@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  toRoute: string;\n  userLogin: UserLogin = { username: '', password: '', grant_type: 'password' };\n  sub: any;\n\n\n  constructor(private usuariosService: UsuariosService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.sub = this.route.queryParams.subscribe(v => { this.toRoute = v.toRoute; });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  login() {\n    const promiseLogin = this.usuariosService.login(this.userLogin, this.toRoute);\n  }\n}\n","﻿import { MatPaginatorIntl } from '@angular/material';\r\n\r\nexport class MatPaginatorIntlCro extends MatPaginatorIntl {\r\n  itemsPerPageLabel = 'Tamaño:';\r\n  nextPageLabel = 'Siguiente';\r\n  previousPageLabel = 'Anterior';\r\n\r\n  getRangeLabel = function (page, pageSize, length) {\r\n    if (length === 0 || pageSize === 0) {\r\n      return '0-' + length;\r\n    }\r\n    length = Math.max(length, 0);\r\n    const startIndex = page * pageSize;\r\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\r\n    const endIndex = startIndex < length ?\r\n      Math.min(startIndex + pageSize, length) :\r\n      startIndex + pageSize;\r\n    return startIndex + 1 + '-' + endIndex + ':' + length;\r\n  };\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {\n  faUserPlus, faCoffee, faTimes, faInfoCircle, faUsers,\n  faCheck, faTimesCircle, faQuestionCircle, faCheckCircle,\n  faEdit, faPlusCircle, faHome, faCogs, faCubes, faTint,\n  faUser, faClone, faBox, faBook, faObjectGroup, faDotCircle, faSignOutAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  MatAutocompleteModule, MatBadgeModule, MatBottomSheetModule, MatButtonModule,\n  MatButtonToggleModule, MatCardModule, MatCheckboxModule, MatChipsModule,\n  MatDatepickerModule, MatDialogModule, MatDividerModule, MatExpansionModule,\n  MatGridListModule, MatIconModule, MatInputModule, MatListModule, MatMenuModule,\n  MatNativeDateModule, MatPaginatorModule, MatProgressBarModule, MatProgressSpinnerModule,\n  MatRadioModule, MatRippleModule, MatSelectModule, MatSidenavModule, MatSliderModule,\n  MatSlideToggleModule, MatSnackBarModule, MatSortModule, MatStepperModule,\n  MatTableModule, MatTabsModule, MatToolbarModule, MatTooltipModule,\n  MatTreeModule\n} from '@angular/material';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nlibrary.add(\n  faUserPlus, faCoffee, faTimes, faTimesCircle,\n  faInfoCircle, faQuestionCircle, faCheckCircle,\n  faUsers, faCheck, faEdit, faPlusCircle, faHome,\n  faCogs, faCubes, faTint, faUser, faClone,\n  faObjectGroup, faDotCircle, faBox, faBook, faSignOutAlt\n);\n\n\n@NgModule({\n  imports: [\n    FontAwesomeModule, FlexLayoutModule, FormsModule, ReactiveFormsModule,\n    CommonModule, RouterModule, MatAutocompleteModule, MatBadgeModule,\n    MatBottomSheetModule, MatButtonModule, MatButtonToggleModule, MatCardModule,\n    MatCheckboxModule, MatChipsModule, MatDatepickerModule, MatDialogModule,\n    MatDividerModule, MatExpansionModule, MatGridListModule, MatIconModule,\n    MatInputModule, MatListModule, MatMenuModule, MatNativeDateModule,\n    MatPaginatorModule, MatProgressBarModule, MatProgressSpinnerModule, MatRadioModule,\n    MatRippleModule, MatSelectModule, MatSidenavModule, MatSliderModule,\n    MatSlideToggleModule, MatSnackBarModule, MatSortModule, MatStepperModule,\n    MatTableModule, MatTabsModule, MatToolbarModule, MatTooltipModule,\n    MatTreeModule, BrowserAnimationsModule, CommonModule\n  ],\n  exports: [\n    FontAwesomeModule, CdkTableModule, CdkTreeModule, MatAutocompleteModule,\n    MatBadgeModule, MatBottomSheetModule, MatButtonModule, MatButtonToggleModule,\n    MatCardModule, MatCheckboxModule, MatChipsModule, MatStepperModule,\n    MatDatepickerModule, MatDialogModule, MatDividerModule, MatExpansionModule,\n    MatGridListModule, MatIconModule, MatInputModule, MatListModule,\n    MatMenuModule, MatNativeDateModule, MatPaginatorModule, MatProgressBarModule,\n    MatProgressSpinnerModule, MatRadioModule, MatRippleModule, MatSelectModule,\n    MatSidenavModule, MatSliderModule, MatSlideToggleModule, MatSnackBarModule,\n    MatSortModule, MatTableModule, MatTabsModule, MatToolbarModule,\n    MatTooltipModule, MatTreeModule, FlexLayoutModule, BrowserAnimationsModule,\n    FormsModule, ReactiveFormsModule\n  ],\n  declarations: []\n})\nexport class MaterialModule { }\n","﻿import { Injectable, NgZone } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse,\n  HttpResponseBase\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap, filter, map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router, private ngZone: NgZone) { }\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const started = Date.now();\n\n    request = request.clone({\n      setHeaders: {\n        Authorization: 'Bearer ' + sessionStorage.getItem('accessToken')\n      }\n    });\n\n    return next.handle(request).pipe(tap(event => {\n      if (event instanceof HttpResponse) {\n        const elapsed = Date.now() - started;\n        console.log(`La respuesta desde ${request.urlWithParams} tomó ${elapsed} ms.`);\n      }\n    }, (error: HttpErrorResponse) => {\n      console.log(error);\n\n      if (error.status === 401) {\n        this.ngZone.run(() => {\n          this.router.navigate(['./main/login'], { queryParams: { toRoute: './main' } });\n        });\n      }\n    }));\n  }\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nexport enum Actions { Add, Remove }\n\n/**\n * Clase  que contiene los datos de inicio de sesión\n */\nexport class UserLogin {\n  grant_type: 'password';\n  username: string;\n  password: string;\n}\n\nexport interface UserInfo {\n  Email: string;\n  Password: string;\n  ConfirmPassword: string;\n  Nombre: string;\n  ApellidoPaterno: string;\n  ApellidoMaterno: string;\n  Clave: number;\n}\n\nexport interface BasicInfoUser {\n  Nombre: string;\n  Email: string;\n  EmailConfirmaed: boolean;\n  Id: string;\n  Roles: string[];\n}\n\nexport interface AddRemoveUserRoleModel {\n  Role: string;\n  Action: Actions;\n  UserId: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuariosService {\n  public UserRoles: string[] = [];\n  constructor(private http: HttpClient, private router: Router, private ngZone: NgZone) {\n    this.Initialice();\n  }\n\n  public Initialice() {\n    this.Roles()\n      .then(val => this.UserRoles = val)\n      .catch(err => console.log(err.error.Message));\n  }\n\n  public Roles(UsuarioId: number = null) {\n    return this.http.post<string[]>('api/Account/UserRoles', UsuarioId).toPromise();\n  }\n  /**\n  * Registra un usuario nuevo en la App\n  */\n  public registrar(userInfo: UserInfo) {\n    return this.http.post('/api/Account/Register', userInfo);\n  }\n\n  /**\n   * Regresa la lista de usuarios disponibles\n   */\n  public GetUsers() {\n    return this.http.get<BasicInfoUser[]>('/api/Account/users');\n  }\n\n  /**\n  * Genera el Token de credenciales\n  * @param userLogin Credenciales de incio de sesión\n  */\n  public login(userLogin: UserLogin, toRoute: string = '') {\n    this.http.post('/TOKEN',\n      'username=' + userLogin.username + '&password=' + userLogin.password + '&grant_type=password',\n      { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } })\n      .subscribe(\n        (resp: any) => {\n          sessionStorage.setItem('userName', resp.userName);\n          sessionStorage.setItem('accessToken', resp.access_token);\n          sessionStorage.setItem('refreshToken', resp.refresh_token);\n          this.Initialice();\n          this.goToRoute(toRoute);\n        }, error => {\n          console.log(error);\n        },\n    );\n  }\n\n  public CurrentIsInRol(role: string): boolean {\n    const roles = role.split(',');\n    let ret: boolean;\n\n    for (const v of roles) {\n      ret = this.UserRoles.includes(v.replace(' ', ''));\n      if (ret) {\n        break;\n      }\n    }\n\n    return ret;\n  }\n\n  public ManageRoles(data: AddRemoveUserRoleModel) {\n    return this.http.post('/api/Account/ManageRoles', data)\n      .toPromise();\n  }\n\n  /**\n  * Cierra la sesión actual\n  */\n  public signOut() {\n    sessionStorage.removeItem('accessToken');\n    sessionStorage.removeItem('refreshToken');\n    sessionStorage.removeItem('userName');\n  }\n\n  /**\n  * Indica si existe el Token de autenticación en el almacenanmiento de sesión.\n  */\n  public hasToken(): boolean {\n    return sessionStorage.getItem('accessToken') ? true : false;\n  }\n\n  /**\n  * Direcciona la ruta actual a la ruta en el parametro\n  * @param route Ruta de destino\n  */\n  public goToRoute(route: string = 'main') {\n    this.ngZone.run(() => {\n      this.router.navigate([route]);\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '../../../node_modules/@angular/forms';\nimport { MatDialogRef } from '../../../node_modules/@angular/material';\nimport { UsuariosService } from '../usuarios.service';\nimport { DialogIcons } from '../dialog.component';\nimport { DialogService } from '../dialog.service';\n\n@Component({\n  selector: 'app-agregar-usuario',\n  template: `\n  <div style=\"position:relative;\" fxLayout=\"column\">\n  <mat-dialog-content>\n      <form [formGroup]=\"userForm\" fxLayout=\"column\" fxLayoutAlign=\"center center\" (ngSubmit)=\"onSubmit()\" fxFlexFill>\n          <div fxLayout=\"column\">\n              <mat-form-field>\n                  <input formControlName=\"Nombre\" matInput placeholder=\"Nombre\">\n                  <mat-error *ngIf=\"userForm.controls.Nombre.hasError('required')\">\n                      El Nombre del usuario es requerido.\n                  </mat-error>\n              </mat-form-field>\n\n              <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"5px\">\n                  <mat-form-field fxFlex=\"100%\" fxFlex.gt-sm=\"48%\">\n                      <input formControlName=\"ApellidoPaterno\" matInput placeholder=\"Apellido Paterno\">\n                      <mat-error *ngIf=\"userForm.controls.ApellidoPaterno.hasError('required')\">\n                          El Apellido Paterno es requerido.\n                      </mat-error>\n                  </mat-form-field>\n                  <mat-form-field fxFlex=\"100%\" fxFlex.gt-sm=\"48%\">\n                      <input formControlName=\"ApellidoMaterno\" matInput placeholder=\"Apellido Materno\">\n                      <mat-error *ngIf=\"userForm.controls.ApellidoMaterno.hasError('required')\">\n                          El Apellido Materno es requerido.\n                      </mat-error>\n                  </mat-form-field>\n              </div>\n\n              <mat-form-field>\n                  <input type=\"number\" formControlName=\"Clave\" matInput placeholder=\"Clave de Trabajador\">\n                  <mat-error *ngIf=\"userForm.controls.Clave.hasError('required')\">\n                    La clave es requerida.\n                  </mat-error>\n                  <mat-error *ngIf=\"userForm.controls.Clave.hasError('pattern')\">\n                    El valor debe ser numerico y contener al menos 4 digitos.\n                  </mat-error>\n              </mat-form-field>\n\n              <mat-form-field>\n                  <input type=\"email\" formControlName=\"Email\" matInput placeholder=\"Correo Electronico\">\n                  <mat-error *ngIf=\"userForm.controls.Email.hasError('email')\">\n                      El Email no es valido.\n                  </mat-error>\n                  <mat-error *ngIf=\"userForm.controls.Email.hasError('required')\">\n                      El Email es requerido.\n                  </mat-error>\n              </mat-form-field>\n\n              <mat-form-field>\n                  <input type=\"password\" formControlName=\"Password\" matInput placeholder=\"Contraseña\">\n                  <mat-error *ngIf=\"userForm.controls.Password.hasError('required')\">\n                      La contraseña es requerida.\n                  </mat-error>\n                  <mat-error *ngIf=\"userForm.controls.Password.hasError('pattern')\">\n                      La contraseña debe contener al menos un digito y una letra Mayuscula y debe ser de mas de 8 caracteres de largo.\n                  </mat-error>\n              </mat-form-field>\n\n              <mat-form-field>\n                  <input type=\"password\" formControlName=\"ConfirmPassword\" matInput placeholder=\"Confirme Contraseña\">\n                  <mat-error *ngIf=\"userForm.controls.ConfirmPassword.hasError('required')\">\n                      El confirmacion de la contraseña es requerida.\n                  </mat-error>\n                  <mat-error *ngIf=\"userForm.controls.ConfirmPassword.hasError('MatchPassword')\">\n                      Las contraseñas no coinciden\n                  </mat-error>\n              </mat-form-field>\n              <button type=\"submit\" mat-raised-button color=\"primary\">Registrar</button>\n          </div>\n      </form>\n  </mat-dialog-content>\n  <!-- CloseButton -->\n  <button class=\"closeButton\" mat-dialog-close tabIndex=\"3\" color=\"warn\" mat-icon-button>\n      <mat-icon>close</mat-icon>\n  </button>\n</div>\n  `,\n  styles: []\n})\nexport class AgregarUsuarioComponent implements OnInit {\n\n  userForm: FormGroup;\n  constructor(\n    public dialogRef: MatDialogRef<AgregarUsuarioComponent>,\n    private fb: FormBuilder,\n    private dialogService: DialogService,\n    private usuariosService: UsuariosService) {\n    this.createForm();\n  }\n  ngOnInit() {\n  }\n  /**\n   * Crea el formulario para agregar un usuario\n   */\n  createForm() {\n    this.userForm = this.fb.group({\n      Nombre: ['', Validators.required],\n      ApellidoPaterno: ['', Validators.required],\n      ApellidoMaterno: ['', Validators.required],\n      Email: ['', [Validators.email, Validators.required]],\n      Password: ['', [Validators.required, Validators.pattern('^(?=.*\\\\d)[A-Za-z\\\\d#$@!%&*?]{8,}$')]],\n      ConfirmPassword: ['', Validators.required],\n      Clave: ['', [Validators.required, Validators.pattern('^[0-9]{4,}$')]]\n    }, {\n        validator: PasswordValidation.MatchPassword\n      });\n  }\n\n  /**\n * Envia a la API los datos de registro del usuario\n */\n  onSubmit() {\n    if (this.userForm.valid) {\n      this.usuariosService.registrar(this.userForm.value)\n        .subscribe(success => { this.dialogService.showDialog('Correcto...', 'Se agrego correctamente el usuario, <br />Por favor, confirme el registro mediante el correo electronico que hemos enviado.', { Icon: DialogIcons.Success }); },\n          error => {\n            let errormsg = '<dl>';\n            const errors: object = error.error.ModelState;\n            const errorMsg: string = error.error.Message;\n\n            if (errors) {\n\n              for (const i in errors) {\n                if (errors.hasOwnProperty(i)) {\n                  if (Array.isArray(errors[i])) {\n                    errormsg += `<dt>${i}:</dt>`;\n                    errors[i].forEach(v => {\n                      errormsg += `<dd>${v}</dd>`;\n                    });\n                  }\n                }\n              }\n            } else if (errorMsg) {\n              errormsg += `<dt>${errorMsg}</dt>`;\n            } else {\n              errormsg += `<dt>Operación no valida</dt>`;\n            }\n            errormsg += '</dl>';\n            this.dialogService.showDialog('Error en los Datos', errormsg, { Icon: DialogIcons.Error });\n          }\n        );\n\n    } else {\n      this.dialogService.showDialog('Error en los Datos', 'Por favor, complete los campos adecuadamente', { Icon: DialogIcons.Error });\n    }\n  }\n}\n\n/**\n * Clase para comprobar que los password sean correctos\n */\nexport class PasswordValidation {\n  static MatchPassword(AC: AbstractControl) {\n    const password = AC.get('Password').value; // to get value in input tag\n    const confirmPassword = AC.get('ConfirmPassword').value; // to get value in input tag\n    if (password !== confirmPassword) {\n      AC.get('ConfirmPassword').setErrors({ MatchPassword: true });\n    } else {\n      return null;\n    }\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { BasicInfoUser, UsuariosService, Actions } from '../usuarios.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { DialogService } from '../dialog.service';\nimport { DialogIcons, DialogButtonsFlags, DialogResults } from '../dialog.component';\n\n@Component({\n  selector: 'app-manage-roles',\n  template: `\n  <div fxLayout=\"column\" class=\"mat-typography\">\n  <h3>Usuario: {{User.Nombre}}</h3>\n  <h3>Email: {{User.Email}}</h3>\n  <mat-divider></mat-divider>\n  <div mat-dialog-content fxFlex=\"100%\">\n      <p>Roles del usuario:</p>\n      <mat-chip-list #chipList class=\"mat-chip-list-stacked\" aria-orientation=\"vertical\">\n\n          <ng-container *ngFor=\"let itm of User.Roles\">\n\n              <mat-chip color=\"accent\" selected (removed)=\"removeRol(itm)\" [removable]=\"true\">\n                  {{itm}}\n                  <span style=\"flex: 1 1 100%\"></span>\n                  <mat-icon matChipRemove>cancel</mat-icon>\n              </mat-chip>\n\n          </ng-container>\n\n\n      </mat-chip-list>\n      <br />\n      <div fxLayout=\"row\">\n          <p>El rol \"Usuario\" no puede ser removido.</p>\n      </div>\n  </div>\n  <mat-divider></mat-divider>\n  <div matDialogActions fxLayout=\"column\">\n      <div fxLayout=\"row\" style=\"font-size: 18px;\" fxLayoutGap=\"5px\">\n          <mat-form-field fxFlex>\n              <input #rolInput name=\"rol\" matInput placeholder=\"Rol\">\n          </mat-form-field>\n          <div fxLayoutAlign=\"center center\" >\n              <button [disabled]=\"!rolInput.value\" mat-mini-fab  (click)=\"addRole(rolInput.value)\" color=\"primary\">\n                  <mat-icon>add</mat-icon>\n              </button>\n          </div>\n      </div>\n      <button mat-stroked-button mat-dialog-close color=\"warn\">Cerrar</button>\n  </div>\n</div>\n  `,\n  styles: []\n})\nexport class ManageRolesComponent {\n  User: BasicInfoUser;\n  constructor(\n    public dialogRef: MatDialogRef<ManageRolesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: BasicInfoUser,\n    private usuariosService: UsuariosService,\n    private dialogService: DialogService\n  ) {\n    this.User = this.data;\n  }\n\n  addRole(role: string) {\n    if (!this.User.Roles.includes(role)) {\n      this.usuariosService.ManageRoles({ UserId: this.User.Id, Action: Actions.Add, Role: role })\n        .then(\n          val => {\n            console.log(val);\n            this.User.Roles.push(role);\n          },\n          err => this.dialogService.showDialog('Error', err.error.Message, { Icon: DialogIcons.Error }));\n    }\n  }\n\n  removeRol(role: string) {\n    if (role !== 'Usuario') {\n      this.dialogService.showDialog(\n        'Confirmar',\n        'Deasea remover el rol ' + role,\n        { Icon: DialogIcons.Question, buttons: DialogButtonsFlags.Yes | DialogButtonsFlags.No })\n        .then((resp) => {\n          if (resp === DialogResults.Yes) {\n            this.usuariosService.ManageRoles({ UserId: this.User.Id, Action: Actions.Remove, Role: role })\n              .then(\n                val => {\n                  console.log(val);\n                  const idx = this.User.Roles.indexOf(role);\n                  if (idx > -1) {\n                    this.User.Roles.splice(idx, 1);\n                  }\n                },\n                err => this.dialogService.showDialog('Error', err.error.Message, { Icon: DialogIcons.Error }));\n          }\n        });\n\n    } else {\n      this.dialogService.showDialog('Error', 'El rol Usuario no se puede eliminar', { Icon: DialogIcons.Error });\n    }\n  }\n}\n","module.exports = \"<div style=\\\"position:relative\\\">\\n    <mat-card class=\\\"mat-card-theme mat-primary\\\">\\n      <mat-card-header>\\n        <div mat-card-avatar>\\n          <fa-icon [icon]=\\\"['fas', 'users']\\\" size=\\\"2x\\\"></fa-icon>\\n        </div>\\n        <mat-card-title>Usuarios</mat-card-title>\\n        <mat-card-subtitle>Se muestra la lista de todos los usuarios registrados en la aplicacion</mat-card-subtitle>\\n        <button mat-fab class=\\\"mat-card-action-button\\\" color=\\\"accent\\\" (click)=\\\"addUser()\\\">\\n          <mat-icon>person_add</mat-icon>\\n        </button>\\n      </mat-card-header>\\n      <mat-card-content style=\\\"overflow: auto;\\\">\\n\\n        <mat-table #table [dataSource]=\\\"Usuarios\\\" style=\\\"min-width: 800px;\\\">\\n          <ng-container cdkColumnDef=\\\"Nombre\\\">\\n            <mat-header-cell *cdkHeaderCellDef> Nombre </mat-header-cell>\\n            <mat-cell *cdkCellDef=\\\"let row\\\"> {{row.Nombre}} </mat-cell>\\n          </ng-container>\\n\\n          <ng-container cdkColumnDef=\\\"Email\\\">\\n            <mat-header-cell *cdkHeaderCellDef> Correo </mat-header-cell>\\n            <mat-cell *cdkCellDef=\\\"let row\\\"> {{row.Email}} </mat-cell>\\n          </ng-container>\\n\\n          <ng-container cdkColumnDef=\\\"EmailConfirmed\\\">\\n            <mat-header-cell *cdkHeaderCellDef fxFlex=\\\"120px\\\"> Email Confirmado </mat-header-cell>\\n            <mat-cell *cdkCellDef=\\\"let row\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"120px\\\">\\n              <fa-icon [style.color]=\\\"row.EmailConfirmed ? '#4caf50': '#f44336'\\\" [icon]=\\\"['fas', row.EmailConfirmed ? 'check': 'times' ]\\\"></fa-icon>\\n              <!-- <mat-checkbox disabled=\\\"true\\\" [checked]=\\\"row.EmailConfirmed\\\"></mat-checkbox> -->\\n            </mat-cell>\\n          </ng-container>\\n          <ng-container cdkColumnDef=\\\"Roles\\\">\\n            <mat-header-cell *cdkHeaderCellDef fxFlex=\\\"250px\\\" fxLayoutAlign=\\\"center center\\\"> Roles </mat-header-cell>\\n            <mat-cell *cdkCellDef=\\\"let row\\\" fxFlex=\\\"250px\\\" fxLayoutAlign=\\\"center center\\\">\\n              <ul style=\\\"list-style: none;\\\" fxFlex=\\\"200px\\\">\\n                <li *ngFor=\\\"let itm of row.Roles\\\">{{itm}}</li>\\n              </ul>\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"editRoles(row)\\\">\\n                <fa-icon [icon]=\\\"['fas','edit']\\\"></fa-icon>\\n              </button>\\n            </mat-cell>\\n          </ng-container>\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let row; columns:displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { BasicInfoUser, UsuariosService, UserInfo } from '../usuarios.service';\nimport { MatDialog } from '@angular/material';\nimport { AgregarUsuarioComponent } from './agregar-usuario.component';\nimport { ManageRolesComponent } from './manage-roles.component';\n\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.scss']\n})\nexport class UsuariosComponent implements OnInit {\n  Usuarios: BasicInfoUser[];\n  displayedColumns: string[] = ['Nombre', 'Email', 'EmailConfirmed', 'Roles'];\n  constructor(private usuarioService: UsuariosService, private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.refreshUsers();\n  }\n  private async refreshUsers() {\n    this.Usuarios = await this.usuarioService.GetUsers().toPromise();\n  }\n  addUser() {\n    const ref = this.dialog.open(AgregarUsuarioComponent, { disableClose: true });\n    ref.afterClosed().subscribe(() => {\n      this.refreshUsers();\n    });\n  }\n  editRoles(user: UserInfo) {\n    const ref = this.dialog.open(ManageRolesComponent, { disableClose: true, data: user });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}