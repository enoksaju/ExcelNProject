{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/catalogos.service.ts","webpack:///./src/app/catalogos/catalogos.component.html","webpack:///./src/app/catalogos/catalogos.component.scss","webpack:///./src/app/catalogos/catalogos.component.ts","webpack:///./src/app/catalogos/clientes/add-cliente.component.ts","webpack:///./src/app/catalogos/clientes/clientes.component.html","webpack:///./src/app/catalogos/clientes/clientes.component.scss","webpack:///./src/app/catalogos/clientes/clientes.component.ts","webpack:///./src/app/catalogos/familias-materiales/familias-materiales.component.html","webpack:///./src/app/catalogos/familias-materiales/familias-materiales.component.scss","webpack:///./src/app/catalogos/familias-materiales/familias-materiales.component.ts","webpack:///./src/app/common/my-card/my-card.component.html","webpack:///./src/app/common/my-card/my-card.component.scss","webpack:///./src/app/common/my-card/my-card.component.ts","webpack:///./src/app/common/wrap-inputs/wrap-inputs.component.ts","webpack:///./src/app/dialog.component.ts","webpack:///./src/app/dialog.service.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/mat-paginator-intl-cro.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/token-interceptor.ts","webpack:///./src/app/usuarios.service.ts","webpack:///./src/app/usuarios/agregar-usuario.component.ts","webpack:///./src/app/usuarios/manage-roles.component.ts","webpack:///./src/app/usuarios/usuarios.component.html","webpack:///./src/app/usuarios/usuarios.component.scss","webpack:///./src/app/usuarios/usuarios.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UsuariosComponent } from './usuarios/usuarios.component';\r\nimport { CatalogosComponent } from './catalogos/catalogos.component';\r\nimport { ClientesComponent } from './catalogos/clientes/clientes.component';\r\nimport { FamiliasMaterialesComponent } from './catalogos/familias-materiales/familias-materiales.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'usuarios', component: UsuariosComponent },\r\n  {\r\n    path: 'catalogos',\r\n    children: [\r\n      { path: '', component: CatalogosComponent },\r\n      { path: 'Clientes', component: ClientesComponent },\r\n      { path: 'FamiliasMateriales', component: FamiliasMaterialesComponent },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<mat-sidenav-container class=\\\"main-container mat-typography\\\">\\r\\n  <!-- SideNav -->\\r\\n  <mat-sidenav #sidenav class=\\\"mat-elevation-z15\\\" style=\\\"width: 300px;\\\" fxLayout=\\\"column\\\" [opened]=\\\"!sideNavOpend() && usuariosService.hasToken()\\\"\\r\\n    [mode]=\\\"sideNavOpend() ? 'overlay' : 'side'\\\">\\r\\n\\r\\n    <!-- Barra de navegacion del side nav bar -->\\r\\n    <mat-toolbar fxFlex=\\\"60px\\\" color=\\\"primary\\\">\\r\\n      <span class=\\\"relleno\\\"></span>\\r\\n      <!-- Botón de apertura del menu MoreOptions -->\\r\\n      <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n        <mat-icon>more_vert</mat-icon>\\r\\n      </button>\\r\\n      <!-- Menu de mas opciones -->\\r\\n      <mat-menu #menu=\\\"matMenu\\\">\\r\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"themes\\\">\\r\\n          <mat-icon>color_lens</mat-icon>\\r\\n          <span>Temas</span>\\r\\n        </button>\\r\\n        <button mat-menu-item (click)=\\\"signOut()\\\" [routerLink]=\\\"'../login'\\\">\\r\\n          <mat-icon>close</mat-icon>\\r\\n          <span>Cerrar Sesión</span>\\r\\n        </button>\\r\\n      </mat-menu>\\r\\n\\r\\n      <!-- Menu de Temas -->\\r\\n      <mat-menu #themes=\\\"matMenu\\\">\\r\\n        <button mat-menu-item (click)=\\\"darkTheme = true\\\">\\r\\n          <span>Oscuro</span>\\r\\n        </button>\\r\\n        <button mat-menu-item (click)=\\\"darkTheme = false\\\">\\r\\n          <span>Claro</span>\\r\\n        </button>\\r\\n      </mat-menu>\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <!-- Menu de Navegacion -->\\r\\n    <!-- Con sesion iniciada -->\\r\\n    <div>\\r\\n      <mat-nav-list>\\r\\n        <mat-list-item [routerLink]=\\\"''\\\">\\r\\n          <fa-icon mat-list-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"['fas', 'home']\\\"></fa-icon>\\r\\n          <h4 mat-line>Inicio</h4>\\r\\n        </mat-list-item>\\r\\n        <mat-accordion>\\r\\n          <!-- Control de Usuarios -->\\r\\n          <mat-expansion-panel class=\\\"plain\\\" displayMode=\\\"flat\\\" *ngIf=\\\"(usuariosService.CurrentIsInRol('Administrador,Develop,Sistemas') | async)\\\">\\r\\n            <mat-expansion-panel-header>\\r\\n              <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"['fas', 'users']\\\"></fa-icon>\\r\\n              <h4>Administrador</h4>\\r\\n            </mat-expansion-panel-header>\\r\\n            <mat-nav-list>\\r\\n              <mat-list-item [routerLink]=\\\"'../usuarios'\\\">\\r\\n                <fa-icon mat-list-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"['fas', 'users']\\\"></fa-icon>\\r\\n                <h4 mat-line>Usuarios</h4>\\r\\n              </mat-list-item>\\r\\n            </mat-nav-list>\\r\\n          </mat-expansion-panel>\\r\\n          <!-- Catalogos -->\\r\\n          <mat-list-item [routerLink]=\\\"'../catalogos'\\\">\\r\\n            <fa-icon mat-list-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"['fas', 'book']\\\"></fa-icon>\\r\\n            <h4 mat-line>Catalogos</h4>\\r\\n          </mat-list-item>\\r\\n        </mat-accordion>\\r\\n      </mat-nav-list>\\r\\n    </div>\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <!-- Contenido principal de la pagina -->\\r\\n  <mat-sidenav-content fxLayout=\\\"column\\\">\\r\\n    <!-- ToolBar de la aplicacion en modo Movil -->\\r\\n    <mat-toolbar fxFlex=\\\"60px\\\" style=\\\"position:fixed; z-index: 999;\\\" color=\\\"primary\\\" *ngIf=\\\"sideNavOpend() && usuariosService.hasToken()\\\">\\r\\n\\r\\n      <!-- Control de apertura del SideNav -->\\r\\n      <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n        <mat-icon>menu</mat-icon>\\r\\n      </button>\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <!-- Contendor de Componentes Navegables -->\\r\\n    <div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" [@fadeAnimation]=\\\"o.isActivated ? o.activatedRoute : ''\\\">\\r\\n\\r\\n      <router-outlet #o=\\\"outlet\\\"></router-outlet>\\r\\n      <div class=\\\"logo\\\">\\r\\n        <img mat-card-image class=\\\"excel\\\" src=\\\"assets/logo.png\\\" alt=\\\"Logo de ExcelNobleza\\\">\\r\\n        <img mat-card-image class=\\\"guala\\\" src=\\\"assets/guala.png\\\" alt=\\\"Logo de Gualapack\\\">\\r\\n        <span>MIEMBRO DE GRUPO</span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-sidenav-content>\\r\\n\\r\\n</mat-sidenav-container>\\r\\n\"","module.exports = \".main-container {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0; }\\n\\n.plain {\\n  box-shadow: 0 0 0 0 !important; }\\n\\nmat-expansion-panel-header {\\n  padding-left: 16px; }\\n\\nmat-expansion-panel-header fa-icon {\\n    flex-shrink: 0;\\n    width: 24px;\\n    height: 24px;\\n    font-size: 24px !important;\\n    box-sizing: content-box;\\n    border-radius: 50%;\\n    padding: 4px; }\\n\\nmat-expansion-panel-header h4 {\\n    padding-left: 16px;\\n    padding-right: 0px;\\n    margin-top: auto;\\n    margin-bottom: auto; }\\n\\n.logo {\\n  padding-left: 20px;\\n  padding-right: 20px;\\n  padding-top: 30px;\\n  padding-bottom: 30px;\\n  position: fixed;\\n  height: 50px;\\n  width: 280px;\\n  right: 0px;\\n  bottom: 0px;\\n  z-index: -999;\\n  -webkit-filter: opacity(60%);\\n          filter: opacity(60%); }\\n\\n.logo > .excel {\\n    position: absolute;\\n    top: 30px;\\n    left: 30px;\\n    width: 250px; }\\n\\n.logo > .guala {\\n    position: absolute;\\n    bottom: 30px;\\n    right: 90px;\\n    width: 120px; }\\n\\n.logo > span {\\n    position: absolute;\\n    top: 50px;\\n    left: 5px;\\n    width: 250px;\\n    font-size: 10px; }\\n\"","import { Component, OnInit, Renderer2 } from '@angular/core';\r\nimport { MatSidenav, MatDrawer } from '@angular/material';\r\nimport { ObservableMedia } from '@angular/flex-layout';\r\nimport { state, trigger, transition, animate, style, group, query } from '@angular/animations';\r\nimport { UsuariosService } from './usuarios.service';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\nexport const fadeAnimation = trigger('fadeAnimation', [\r\n  // The '* => *' will trigger the animation to change between any two states\r\n  transition('* => *', [\r\n    // The query function has three params.\r\n    // First is the event, so this will apply on entering or when the element is added to the DOM.\r\n    // Second is a list of styles or animations to apply.\r\n    // Third we add a config object with optional set to true, this is to signal\r\n    // angular that the animation may not apply as it may or may not be in the DOM.\r\n    query(':enter', [style({ opacity: 0 })], { optional: true }),\r\n    query(\r\n      ':leave',\r\n      // here we apply a style and use the animate function to apply the style over 0.3 seconds\r\n      [style({ opacity: 1 }), animate('0.2s ease-in-out', style({ opacity: 0 }))],\r\n      { optional: true }\r\n    ),\r\n    query(':enter', [style({ opacity: 0 }), animate('0.2s ease-in-out', style({ opacity: 1 }))], {\r\n      optional: true,\r\n    }),\r\n  ]),\r\n]);\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  animations: [\r\n    trigger('darkness', [\r\n      transition('* => *', [\r\n        style({\r\n          opacity: 0.1,\r\n        }),\r\n        animate('800ms cubic-bezier(.92,.78,.75,.99)'),\r\n      ]),\r\n    ]),\r\n    fadeAnimation,\r\n  ],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  _darkTheme: boolean;\r\n\r\n  // Declaracion de la propiedad darkTheme\r\n  set darkTheme(val: boolean) {\r\n    this._darkTheme = val;\r\n    localStorage.setItem('theme', val ? 'dark' : 'light');\r\n    if (val) {\r\n      this.render.removeClass(document.body, 'lt');\r\n    } else {\r\n      this.render.addClass(document.body, 'lt');\r\n    }\r\n  }\r\n  get darkTheme() {\r\n    return this._darkTheme;\r\n  }\r\n\r\n  getState(outletRef: RouterOutlet) {\r\n    return {\r\n      value: outletRef.activatedRoute.snapshot.params.index,\r\n    };\r\n  }\r\n\r\n  constructor(\r\n    private media: ObservableMedia,\r\n    private render: Renderer2,\r\n    public usuariosService: UsuariosService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.darkTheme = localStorage.getItem('theme') === 'dark' ? true : false;\r\n    if (!this.usuariosService.hasToken()) {\r\n      this.usuariosService.goToRoute('../login');\r\n    }\r\n  }\r\n\r\n  sideNavOpend() {\r\n    return this.media.isActive('lt-md');\r\n  }\r\n\r\n  signOut() {\r\n    this.usuariosService.signOut();\r\n  }\r\n\r\n  OpenSideNav(drawer: MatSidenav) {\r\n    drawer.open();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, Inject, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './/material.module';\r\nimport { TokenInterceptor } from './token-interceptor';\r\nimport { MatPaginatorIntlCro } from './mat-paginator-intl-cro';\r\nimport { MatPaginatorIntl } from '@angular/material';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UsuariosComponent } from './usuarios/usuarios.component';\r\nimport { CatalogosComponent } from './catalogos/catalogos.component';\r\nimport { AgregarUsuarioComponent } from './usuarios/agregar-usuario.component';\r\nimport { DialogComponent } from './dialog.component';\r\nimport { ManageRolesComponent } from './usuarios/manage-roles.component';\r\nimport { ClientesComponent } from './catalogos/clientes/clientes.component';\r\nimport { AddClienteComponent } from './catalogos/clientes/add-cliente.component';\r\nimport { WrapInputsComponent } from './common/wrap-inputs/wrap-inputs.component';\r\nimport { FamiliasMaterialesComponent } from './catalogos/familias-materiales/familias-materiales.component';\r\nimport { MyCardComponent } from './common/my-card/my-card.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    UsuariosComponent,\r\n    CatalogosComponent,\r\n    AgregarUsuarioComponent,\r\n    DialogComponent,\r\n    ManageRolesComponent,\r\n    ClientesComponent,\r\n    AddClienteComponent,\r\n    WrapInputsComponent,\r\n    FamiliasMaterialesComponent,\r\n    MyCardComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n    { provide: APP_BASE_HREF, useValue: '/' },\r\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\r\n    { provide: MatPaginatorIntl, useClass: MatPaginatorIntlCro },\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    AgregarUsuarioComponent,\r\n    DialogComponent,\r\n    ManageRolesComponent,\r\n    AddClienteComponent,\r\n  ],\r\n})\r\nexport class AppModule {\r\n  constructor(@Inject(APP_BASE_HREF) private baseHref: string) {\r\n    console.log(`El HREF base es : ${this.baseHref}.`);\r\n  }\r\n}\r\n","import { Injectable, Output, EventEmitter } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '../../node_modules/@angular/common/http';\r\nimport { UsuariosService } from './usuarios.service';\r\nimport { Observable } from '../../node_modules/rxjs';\r\nimport { PageEvent, Sort } from '@angular/material';\r\n\r\nexport enum OrderTypes {\r\n  ASC,\r\n  DESC,\r\n}\r\n\r\nconst prefixApi: string = '/api/Catalogos/';\r\nconst rEstadoCatalogos: string = 'EstadoCatalogos';\r\nconst rClientes: string = 'Clientes';\r\nconst rFamiliaMateriales: string = 'familiasmateriales';\r\n\r\n//#region Interfaces\r\n\r\n/**\r\n * Descripcion de un Elemento en el menu de catalogos.\r\n */\r\nexport interface CatalogoMenuItem {\r\n  Nombre: string;\r\n  Icono: string;\r\n  Content?: string;\r\n  Route?: string;\r\n}\r\n\r\nexport class Column {\r\n  column: string;\r\n  text: string;\r\n  db: boolean;\r\n  sortable: boolean;\r\n  flex: string;\r\n\r\n  constructor(\r\n    column: string,\r\n    text: string,\r\n    options?: { db?: boolean; sortable?: boolean; flex?: string }\r\n  ) {\r\n    const defaults_ = {\r\n      db: true,\r\n      sortable: true,\r\n      flex: '1 1 auto',\r\n    };\r\n    const options_ = Object.assign(defaults_, options);\r\n    this.column = column;\r\n    this.text = text;\r\n    this.db = options_.db;\r\n    this.flex = options_.flex;\r\n    this.sortable = options_.sortable;\r\n  }\r\n}\r\n\r\n/**\r\n * Interface con datos de paginacion y colecciones\r\n */\r\nexport interface ICatalogResponse {\r\n  TotalCount: number;\r\n  TotalPages: number;\r\n  Items: ICliente[] | IFamiliasMateriales[] | any[];\r\n}\r\n\r\n/**\r\n * Interface para la entidad Ciente\r\n */\r\nexport interface ICliente {\r\n  Id?: number;\r\n  NombreCliente?: string;\r\n  ClaveCliente?: string;\r\n  NombreContacto?: string;\r\n  Telefono?: string;\r\n  Email?: string;\r\n  Domicilio?: string;\r\n  Ciudad?: string;\r\n  Estado?: string;\r\n  AgenteId?: number;\r\n  NombreEjecutivo?: string;\r\n}\r\n\r\nexport interface IFamiliasMateriales {\r\n  Id?: number;\r\n  NombreFamilia?: string;\r\n}\r\n\r\n/**\r\n * Interface de Paginacion\r\n */\r\nexport interface IPageConfig {\r\n  pageSize: number;\r\n  pageNumber: number;\r\n  orderType: OrderTypes;\r\n  orderBy: string;\r\n  query: string;\r\n}\r\n\r\n//#endregion\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CatalogosService {\r\n  @Output()\r\n  needRefresh: EventEmitter<any> = new EventEmitter();\r\n  constructor(private http: HttpClient, private usuariosService: UsuariosService) {}\r\n\r\n  /**\r\n   * Retorna el estado de los catalogos.\r\n   */\r\n  getStatus(): Promise<CatalogoMenuItem[]> {\r\n    return this.http.get<CatalogoMenuItem[]>(`${prefixApi}${rEstadoCatalogos}`).toPromise();\r\n  }\r\n\r\n  /**\r\n   * Regresa parametros para los metodos GET de paginacion de colecciones.\r\n   * @param pageConfig Configuracion de paginacion\r\n   */\r\n  private getPageConfig(pageConfig: IPageConfig): HttpParams {\r\n    return new HttpParams({\r\n      fromObject: {\r\n        pageSize: pageConfig.pageSize.toString(),\r\n        pageNumber: pageConfig.pageNumber.toString(),\r\n        orderType: pageConfig.orderType.toString(),\r\n        orderBy: pageConfig.orderBy,\r\n        query: pageConfig.query ? pageConfig.query : '%',\r\n      },\r\n    });\r\n  }\r\n\r\n  private getEntityByIdConfig(Id: any): HttpParams {\r\n    return new HttpParams({ fromObject: { Id: Id.toString() } });\r\n  }\r\n\r\n  //#region ManagePaginator\r\n  /**\r\n   * Funcion de escucha para el evento de cambios en el paginador\r\n   * @param pageEvent Propiedades del evento del paginador\r\n   */\r\n  async emitPaginator(pageEvent: PageEvent, pagConfig: IPageConfig) {\r\n    pagConfig.pageSize = pageEvent.pageSize;\r\n    pagConfig.pageNumber = pageEvent.pageIndex + 1;\r\n    this.needRefresh.emit();\r\n  }\r\n\r\n  /**\r\n   *Funcion de escucha para el eventento de cambio de orden\r\n   * @param sort Propiedades del evento de ordenamiento\r\n   */\r\n  async emitSort(sort: Sort, pagConfig: IPageConfig) {\r\n    pagConfig.orderBy = sort.active;\r\n    pagConfig.orderType = sort.direction === 'asc' ? OrderTypes.ASC : OrderTypes.DESC;\r\n    pagConfig.pageNumber = 1;\r\n    this.needRefresh.emit();\r\n  }\r\n  //#endregion\r\n\r\n  //#region Clientes\r\n\r\n  /**\r\n   * Regresa la coleccion de entidades Cliente y los datos de paginacion actuales.\r\n   * @param pageConfig Configuracion de la paginacion\r\n   */\r\n  getClientes(pageConfig: IPageConfig, allUsers: boolean) {\r\n    return this.http\r\n      .get<ICatalogResponse>(`${prefixApi}${rClientes}`, {\r\n        params: this.getPageConfig(pageConfig).append('allUsers', String(allUsers)),\r\n      })\r\n      .toPromise();\r\n  }\r\n\r\n  getCliente(Id: number) {\r\n    return this.http\r\n      .get<ICliente>(`${prefixApi}${rClientes}`, { params: this.getEntityByIdConfig(Id) })\r\n      .toPromise();\r\n  }\r\n\r\n  postCliente(cliente: ICliente): Observable<string> {\r\n    return this.http.post<string>(`${prefixApi}${rClientes}`, cliente);\r\n  }\r\n\r\n  putCliente(cliente: ICliente): Observable<string> {\r\n    return this.http.put<string>(`${prefixApi}${rClientes}`, cliente);\r\n  }\r\n\r\n  delCliente(Id: number): Observable<string> {\r\n    return this.http.delete<string>(`${prefixApi}${rClientes}`, {\r\n      params: this.getEntityByIdConfig(Id),\r\n    });\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region FamiliaMateriales\r\n\r\n  getFamiliasMateriales(pageConfig: IPageConfig) {\r\n    return this.http\r\n      .get<ICatalogResponse>(`${prefixApi}${rFamiliaMateriales}`, {\r\n        params: this.getPageConfig(pageConfig),\r\n      })\r\n      .toPromise();\r\n  }\r\n  //#endregion\r\n}\r\n","module.exports = \"<div fxLayoutGap=\\\"20px\\\" class=\\\"end-wrap-20\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n  <mat-card *ngFor=\\\"let itm of Items\\\" fxLayout=\\\"column\\\" fxFlex=\\\"250px\\\" class=\\\"mat-card-outside-icon mat-elevation-z10\\\">\\r\\n    <div class=\\\"mat-card-icon bg-primary mat-elevation-z10\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n      <fa-icon [icon]=\\\"['fas', itm.Icono]\\\" [fixedWidth]=\\\"true\\\"  size=\\\"3x\\\"></fa-icon>    </div>\\r\\n\\r\\n    <mat-card-header fxLayoutAlign=\\\"end center\\\">\\r\\n      <mat-card-title style=\\\"font-size: 20px;\\\">{{itm.Nombre}}</mat-card-title>\\r\\n      <mat-card-subtitle>{{itm.Content}}</mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n    <span style=\\\"flex: 1 1 100%\\\"></span>\\r\\n    <mat-card-actions fxLayoutAlign=\\\"center center\\\">\\r\\n      <button mat-raised-button color=\\\"accent\\\" [routerLink]=\\\"itm.Route\\\" >Abrir Catalogo</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { CatalogosService, CatalogoMenuItem } from '../catalogos.service';\r\n\r\n@Component({\r\n  selector: 'cat-catalogos.cc',\r\n  templateUrl: './catalogos.component.html',\r\n  styleUrls: ['./catalogos.component.scss']\r\n})\r\nexport class CatalogosComponent implements OnInit {\r\n  Items: CatalogoMenuItem[];\r\n  constructor(public catalogService: CatalogosService) { }\r\n\r\n  ngOnInit() {\r\n    this.RefreshCounters();\r\n  }\r\n\r\n  async RefreshCounters() {\r\n    this.Items = await this.catalogService.getStatus();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { ICliente, CatalogosService } from '../../catalogos.service';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { DialogService } from '../../dialog.service';\r\nimport { DialogButtonsFlags, DialogIcons, DialogResults } from '../../dialog.component';\r\nimport { UsuariosService } from '../../usuarios.service';\r\nimport { ISelectOptions } from '../../common/wrap-inputs/wrap-inputs.component';\r\n\r\n@Component({\r\n  selector: 'cat-add-cliente',\r\n  template: `\r\n    <!-- spinner -->\r\n    <div *ngIf=\"isLoading\" fxLayoutAlign=\"center center\" fxFlex=\"100%\">\r\n      <mat-spinner  color=\"accent\" diameter=\"80\"></mat-spinner>\r\n    </div>\r\n    <form  *ngIf=\"!isLoading\" fxFlex=\"100%\" style=\"position:relative;\" fxLayout=\"column\" [formGroup]=\"ClienteForm\" (ngSubmit)=\"onSubmit()\" >\r\n      <h2 mat-dialog-title>{{IsNew ? 'Agregar' : 'Editar'}} Cliente</h2>\r\n      <mat-divider class=\"dialog-divider\"></mat-divider>\r\n      <!-- Contenido del dialogo -->\r\n      <div mat-dialog-content fxLayout=\"column\" class=\"mat-typography\" style=\"min-height: 300px;\">\r\n        <!-- Form -->\r\n        <div *ngIf=\"!isLoading\"  fxLayout=\"column\" fxFlex=\"100%\">\r\n          <div fxLayout=\"column\">\r\n            <wrap-inputs [controls]=\"[{name:'ClaveCliente', text:'Clave', smflex:'100%'}]\" [fGroup]=\"ClienteForm\"></wrap-inputs>\r\n            <wrap-inputs [controls]=\"[{name:'NombreCliente', text:'Nombre', smflex:'100%'}]\" [fGroup]=\"ClienteForm\"></wrap-inputs>\r\n            <wrap-inputs [controls]=\"[{name:'NombreContacto', text:'Nombre del Contacto', smflex:'100%'}]\" [fGroup]=\"ClienteForm\"></wrap-inputs>\r\n            <wrap-inputs [controls]=\"[{name:'Telefono', text:'Telefono'},{name:'Email', text: 'Email'}]\" [fGroup]=\"ClienteForm\"></wrap-inputs>\r\n            <wrap-inputs [controls]=\"[{name: 'Domicilio', text:'Dirección', smflex:'100%'}]\" [fGroup]=\"ClienteForm\"></wrap-inputs>\r\n            <wrap-inputs [controls]=\"[{name: 'Ciudad', text: 'Ciudad'},{name:'Estado', text:'Estado'}]\" [fGroup]=\"ClienteForm\"></wrap-inputs>\r\n            <wrap-inputs *ngIf=\"showSelect()\" [controls]=\"[{\r\n              name:'AgenteId',\r\n              text:'Agente',\r\n              smflex:'100%',\r\n              type:'select',\r\n              selectOptions:agentes\r\n            }]\" [fGroup]=\"ClienteForm\">\r\n            </wrap-inputs>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div mat-dialog-actions fxLayout=\"row\" fxFlex=\"80px\" fxLayoutAlign=\"center center\">\r\n        <button type=\"submit\" mat-raised-button color=\"warn\">{{IsNew ? 'Guardar' : 'Actualizar'}}</button>\r\n      </div>\r\n      <!-- CloseButton -->\r\n      <button class=\"closeButton\" mat-dialog-close tabIndex=\"3\" color=\"warn\" mat-icon-button>\r\n          <mat-icon>close</mat-icon>\r\n      </button>\r\n    </form>\r\n  `,\r\n  styles: [],\r\n})\r\nexport class AddClienteComponent implements OnInit {\r\n  Cliente: ICliente;\r\n  IdCliente_: number;\r\n  IsNew: boolean;\r\n  isLoading: boolean;\r\n  ClienteForm: FormGroup;\r\n  agentes: Array<ISelectOptions>;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddClienteComponent, DialogResults>,\r\n    @Inject(MAT_DIALOG_DATA) public data: number,\r\n    private catalogosService: CatalogosService,\r\n    private dialogService: DialogService,\r\n    private fb: FormBuilder,\r\n    private usuariosService: UsuariosService\r\n  ) {\r\n    this.IdCliente_ = data;\r\n    this.IsNew = data ? false : true;\r\n    this.isLoading = !this.IsNew;\r\n  }\r\n\r\n  showSelect() {\r\n    return this.usuariosService.CurrentIsInRol('Sistemas,Develop, Administrador');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n    this.usuariosService.GetUsers().subscribe(\r\n      users => {\r\n        this.agentes = new Array<ISelectOptions>();\r\n        users.forEach(v => {\r\n          this.agentes.push({ display: v.Nombre, value: v.Id });\r\n        });\r\n        if (this.ClienteForm) {\r\n          this.isLoading = false;\r\n        }\r\n      },\r\n      err => {\r\n        this.agentes = new Array<ISelectOptions>({\r\n          display: 'Ninguno',\r\n          value: 0,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  async onSubmit() {\r\n    if (this.ClienteForm.valid) {\r\n      this.isLoading = true;\r\n      const c = () => (this.isLoading = false);\r\n\r\n      if (this.IsNew) {\r\n        this.catalogosService.postCliente(this.ClienteForm.value).subscribe(\r\n          success =>\r\n            this.dialogService\r\n              .showDialog('Correcto...', success, {\r\n                Icon: DialogIcons.Success,\r\n              })\r\n              .then(() => this.dialogRef.close(DialogResults.Ok)),\r\n          error =>\r\n            this.dialogService\r\n              .showDialog('Error!!', this.dialogService.getModelError(error), {\r\n                buttons: DialogButtonsFlags.Ok,\r\n                Icon: DialogIcons.Error,\r\n              })\r\n              .then(c),\r\n          c\r\n        );\r\n      } else {\r\n        this.catalogosService.putCliente(this.ClienteForm.value).subscribe(\r\n          success =>\r\n            this.dialogService\r\n              .showDialog('Correcto...', success, {\r\n                Icon: DialogIcons.Success,\r\n              })\r\n              .then(() => this.dialogRef.close(DialogResults.Ok)),\r\n          error =>\r\n            this.dialogService\r\n              .showDialog('Error!!', this.dialogService.getModelError(error), {\r\n                buttons: DialogButtonsFlags.Ok,\r\n                Icon: DialogIcons.Error,\r\n              })\r\n              .then(c),\r\n          c\r\n        );\r\n      }\r\n    } else {\r\n      this.dialogService.showDialog(\r\n        'Error!!',\r\n        'Por Favor, complete correctamente los campos del formulario',\r\n        { buttons: DialogButtonsFlags.Ok, Icon: DialogIcons.Error }\r\n      );\r\n    }\r\n  }\r\n\r\n  async createForm() {\r\n    const MyId: number = +sessionStorage.getItem('userId');\r\n    this.Cliente = this.IdCliente_\r\n      ? await this.catalogosService.getCliente(this.IdCliente_)\r\n      : {\r\n          ClaveCliente: '',\r\n          NombreCliente: '',\r\n          NombreContacto: '',\r\n          Telefono: '',\r\n          Email: '',\r\n          Domicilio: '',\r\n          Ciudad: '',\r\n          Estado: '',\r\n          AgenteId: MyId,\r\n          NombreEjecutivo: '',\r\n        };\r\n\r\n    this.ClienteForm = this.fb.group({\r\n      ClaveCliente: [\r\n        this.Cliente.ClaveCliente,\r\n        [Validators.required, Validators.pattern('[0-9A-Za-z-]{6,}')],\r\n      ],\r\n      NombreCliente: [this.Cliente.NombreCliente, Validators.required],\r\n      NombreContacto: [this.Cliente.NombreContacto, Validators.required],\r\n      Telefono: [this.Cliente.Telefono, Validators.pattern('[0-9+]{0,3}[0-9]{3,3}[0-9]{7,7}')],\r\n      Email: [this.Cliente.Email, Validators.email],\r\n      Domicilio: [this.Cliente.Domicilio],\r\n      Ciudad: [this.Cliente.Ciudad],\r\n      Estado: [this.Cliente.Estado],\r\n      AgenteId: [this.Cliente.AgenteId],\r\n      Id: [this.Cliente.Id],\r\n    });\r\n\r\n    if (this.agentes) {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<button color=\\\"primary\\\" matTooltip=\\\"Regresar\\\" mat-icon-button [routerLink]=\\\"'../'\\\">\\r\\n  <mat-icon>\\r\\n    arrow_back\\r\\n  </mat-icon>\\r\\n</button>\\r\\n\\r\\n<my-card CardColor=\\\"primary\\\" [Titulo]=\\\"'Clientes'\\\" [Descripcion]=\\\"'Se muestran los clientes disponibles en la base de datos'\\\"\\r\\n  Icono=\\\"users\\\" [HasFontawesomeIcon]=\\\"true\\\" [ShowAdd]=\\\"true\\\" (ClickAdd)=\\\"add()\\\">\\r\\n\\r\\n  <div my-card-body fxLayout=\\\"row\\\" style=\\\"padding: 10px;\\\">\\r\\n    <div>\\r\\n      <span fxFlex=\\\"30px\\\"></span>\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Buscar\\\" [formControl]=\\\"searchControl\\\">\\r\\n        <mat-icon matSuffix>search</mat-icon>\\r\\n      </mat-form-field>\\r\\n      <mat-checkbox style=\\\"margin-left: 20px;\\\" [(ngModel)]=\\\"searchAll\\\" (change)=\\\"getClientesPage()\\\">Todos</mat-checkbox>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div my-card-content>\\r\\n    <mat-progress-bar color=\\\"accent\\\" *ngIf=\\\"loading\\\" mode=\\\"query\\\"></mat-progress-bar>\\r\\n    <mat-table [dataSource]=\\\"clientes\\\" style=\\\"min-width: 800px;\\\" matSort (matSortChange)=\\\"emitSort($event)\\\">\\r\\n      <ng-container matColumnDef=\\\"ClaveCliente\\\">\\r\\n        <mat-header-cell *matHeaderCellDef fxFlex=\\\"100px\\\" mat-sort-header> Clave </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\" fxFlex=\\\"100px\\\"> {{row.ClaveCliente}} </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"NombreCliente\\\">\\r\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.NombreCliente}} </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"AgenteId\\\">\\r\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Agente </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\"><span [ngClass]=\\\"{'orange-700' : row.AgenteId !== usuariosService.getUserId(), 'green-700': row.AgenteId === usuariosService.getUserId()}\\\">{{row.NombreEjecutivo}}</span>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"NombreContacto\\\">\\r\\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Nombre del Contacto </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\"> {{row.NombreContacto}} </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"ActionsContact\\\">\\r\\n        <mat-header-cell *matHeaderCellDef fxFlex=\\\"140px\\\"> Contacto </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\" fxFlex=\\\"140px\\\">\\r\\n          <a mat-icon-button color=\\\"warn\\\" [href]=\\\"'tel:'+row.Telefono\\\">\\r\\n            <mat-icon>phone</mat-icon>\\r\\n          </a>\\r\\n          <a mat-icon-button color=\\\"accent\\\" [href]=\\\"'mailto:'+row.Email\\\">\\r\\n            <mat-icon>mail</mat-icon>\\r\\n          </a>\\r\\n          <a mat-icon-button class=\\\"pink\\\" target=\\\"_blank\\\" [href]=\\\"getURLLocation(row)\\\">\\r\\n            <mat-icon>location_on</mat-icon>\\r\\n          </a>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"ActionEdit\\\">\\r\\n        <mat-header-cell *matHeaderCellDef fxFlex=\\\"100px\\\"> Acciones </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\" fxFlex=\\\"100px\\\">\\r\\n          <ng-container *ngIf=\\\"!isAdmin && row.AgenteId !== usuariosService.getUserId()\\\">\\r\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n              <mat-icon color=\\\"warn\\\">block</mat-icon>\\r\\n            </div>\\r\\n          </ng-container>\\r\\n          <ng-container *ngIf=\\\"isAdmin || row.AgenteId === usuariosService.getUserId()\\\">\\r\\n            <button class=\\\"blue-700\\\" mat-icon-button (click)=\\\"edit(row.Id)\\\">\\r\\n              <mat-icon>edit</mat-icon>\\r\\n            </button>\\r\\n            <button class=\\\"red-700\\\" mat-icon-button (click)=\\\"delete(row.Id)\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n          </ng-container>\\r\\n\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <mat-header-row *matHeaderRowDef=\\\"columsToView()\\\"></mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: columsToView();\\\"></mat-row>\\r\\n    </mat-table>\\r\\n  </div>\\r\\n  <div my-card-footer>\\r\\n    <mat-paginator [length]=\\\"clientesPage.TotalCount\\\" [pageIndex]=\\\"pagConfig.pageNumber - 1\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[10,25,50,75,100]\\\"\\r\\n      (page)=\\\"emitPaginator($event)\\\">\\r\\n    </mat-paginator>\\r\\n  </div>\\r\\n</my-card>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  ICatalogResponse,\r\n  ICliente,\r\n  IPageConfig,\r\n  CatalogosService,\r\n  OrderTypes,\r\n} from '../../catalogos.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialog, PageEvent, Sort } from '@angular/material';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { AddClienteComponent } from './add-cliente.component';\r\nimport { HttpParams } from '../../../../node_modules/@angular/common/http';\r\nimport { DialogService } from '../../dialog.service';\r\nimport { DialogButtonsFlags, DialogIcons, DialogResults } from '../../dialog.component';\r\nimport { UsuariosService } from '../../usuarios.service';\r\n\r\n@Component({\r\n  selector: 'cat-clientes.cc',\r\n  templateUrl: './clientes.component.html',\r\n  styleUrls: ['./clientes.component.scss'],\r\n})\r\nexport class ClientesComponent implements OnInit {\r\n  clientesPage: ICatalogResponse = {\r\n    TotalCount: 0,\r\n    TotalPages: 0,\r\n    Items: null,\r\n  };\r\n  clientes: ICliente[] = new Array<ICliente>();\r\n  pagConfig: IPageConfig;\r\n  searchControl: FormControl = new FormControl('');\r\n  searchAll: boolean = false;\r\n  loading: boolean = false;\r\n  isAdmin: boolean = false;\r\n\r\n  constructor(\r\n    private catalogosService: CatalogosService,\r\n    private dialog: MatDialog,\r\n    private dialogServices: DialogService,\r\n    public usuariosService: UsuariosService\r\n  ) {\r\n    this.pagConfig = {\r\n      pageSize: 10,\r\n      pageNumber: 1,\r\n      orderType: OrderTypes.ASC,\r\n      orderBy: 'Id',\r\n      query: '',\r\n    };\r\n\r\n    this.searchControl.valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(query => {\r\n        this.pagConfig.query = query;\r\n        this.pagConfig.pageNumber = 1;\r\n        this.getClientesPage();\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.usuariosService.CurrentIsInRol('Administrador,Sistemas,Develop').subscribe(p => {\r\n      this.isAdmin = p;\r\n      this.searchAll = this.isAdmin;\r\n      this.getClientesPage();\r\n    });\r\n  }\r\n\r\n  columsToView(): string[] {\r\n    if (this.isAdmin || this.searchAll) {\r\n      return [\r\n        'ClaveCliente',\r\n        'NombreCliente',\r\n        'AgenteId',\r\n        'NombreContacto',\r\n        'ActionsContact',\r\n        'ActionEdit',\r\n      ];\r\n    } else {\r\n      return ['ClaveCliente', 'NombreCliente', 'NombreContacto', 'ActionsContact', 'ActionEdit'];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Solicita la informacion al servicio.\r\n   */\r\n  async getClientesPage() {\r\n    this.loading = true;\r\n    this.catalogosService.getClientes(this.pagConfig, this.searchAll).then(o => {\r\n      this.clientesPage = o;\r\n      this.clientes = o.Items;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Funcion de escucha para el evento de cambios en el paginador\r\n   * @param pageEvent Propiedades del evento del paginador\r\n   */\r\n  async emitPaginator(pageEvent: PageEvent) {\r\n    this.pagConfig.pageSize = pageEvent.pageSize;\r\n    this.pagConfig.pageNumber = pageEvent.pageIndex + 1;\r\n    this.getClientesPage();\r\n  }\r\n\r\n  /**\r\n   *Funcion de escucha para el eventento de cambio de orden\r\n   * @param sort Propiedades del evento de ordenamiento\r\n   */\r\n  async emitSort(sort: Sort) {\r\n    this.pagConfig.orderBy = sort.active;\r\n    this.pagConfig.orderType = sort.direction === 'asc' ? OrderTypes.ASC : OrderTypes.DESC;\r\n    this.pagConfig.pageNumber = 1;\r\n    this.getClientesPage();\r\n  }\r\n\r\n  /**\r\n   * Muestra el cuadro de dialogo para agregar\r\n   */\r\n  add() {\r\n    const ref = this.dialog.open<AddClienteComponent, any, DialogResults>(AddClienteComponent, {\r\n      disableClose: true,\r\n      width: '450px',\r\n    });\r\n    ref.afterClosed().subscribe(m => {\r\n      if (m === DialogResults.Ok) {\r\n        this.getClientesPage();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Muestra el cuadro de dialogo para editar\r\n   */\r\n  edit(id: number) {\r\n    const ref = this.dialog.open<AddClienteComponent, number, DialogResults>(AddClienteComponent, {\r\n      disableClose: true,\r\n      data: id,\r\n      width: '450px',\r\n    });\r\n    ref.afterClosed().subscribe(m => {\r\n      if (m === DialogResults.Ok) {\r\n        this.getClientesPage();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Elimina un cliente la Base de Datos.\r\n   * @param id Id del cliente que se eliminara\r\n   */\r\n  delete(id: number) {\r\n    this.dialogServices\r\n      .showDialog('Eliminar!!', 'Realmente desea Eliminar al cliente?', {\r\n        buttons: DialogButtonsFlags.Yes | DialogButtonsFlags.No,\r\n        Icon: DialogIcons.Question,\r\n      })\r\n      .then(r => {\r\n        if (r === DialogResults.Yes) {\r\n          this.catalogosService\r\n            .delCliente(id)\r\n            .toPromise()\r\n            .then(v =>\r\n              this.dialogServices\r\n                .showDialog('Correcto!!', v, { Icon: DialogIcons.Success })\r\n                .then(() => this.getClientesPage())\r\n            )\r\n            .catch(e =>\r\n              this.dialogServices.showDialog('Error!!', e, {\r\n                Icon: DialogIcons.Error,\r\n              })\r\n            );\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Devuelve la url de busqueda de la direccion del cliente en google maps\r\n   * @param v Cliente del que se obtendra la informacion\r\n   */\r\n  getURLLocation(v: ICliente): string {\r\n    return `https://www.google.com/maps/search/?${new HttpParams()\r\n      .set('api', '1')\r\n      .set('query', `${v.Domicilio}, ${v.Ciudad}, ${v.Estado}`)\r\n      .toString()}`;\r\n  }\r\n}\r\n","module.exports = \"<button color=\\\"primary\\\" matTooltip=\\\"Regresar\\\" mat-icon-button [routerLink]=\\\"'../'\\\">\\n  <mat-icon>\\n    arrow_back\\n  </mat-icon>\\n</button>\\n\\n<my-card CardColor=\\\"primary\\\" [Titulo]=\\\"'Familias de Materiales'\\\" [Descripcion]=\\\"'Se muestran las familias de materiales disponibles en la base de datos'\\\"\\n  Icono=\\\"layer-group\\\" [HasFontawesomeIcon]=\\\"true\\\" [ShowAdd]=\\\"true\\\" (ClickAdd)=\\\"add()\\\">\\n\\n  <div my-card-content>\\n    <mat-progress-bar color=\\\"accent\\\" *ngIf=\\\"isLoading\\\" mode=\\\"query\\\"></mat-progress-bar>\\n    <mat-table [dataSource]=\\\"catalogPage.Items\\\" style=\\\"min-width: 800px;\\\" matSort (matSortChange)=\\\"catalogosService.emitSort($event, this.pagConfig);\\\">\\n\\n      <!-- <ng-container matColumnDef=\\\"NombreFamilia\\\">\\n        <mat-header-cell *matHeaderCellDef fxFlex=\\\"100%\\\" mat-sort-header> Nombre </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" fxFlex=\\\"100%\\\"> {{row.NombreFamilia}} </mat-cell>\\n      </ng-container> -->\\n\\n      <ng-container *ngFor=\\\"let column of columsToView()\\\">\\n\\n        <ng-container *ngIf=\\\"column.db && !column.sortable\\\" matColumnDef=\\\"{{column.column}}\\\">\\n          <mat-header-cell *matHeaderCellDef [fxFlex]=\\\"column.flex\\\"> {{column.text}} </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\" [fxFlex]=\\\"column.flex\\\"> {{element[column.column]}}</mat-cell>\\n        </ng-container>\\n\\n        <ng-container *ngIf=\\\"column.db && column.sortable\\\" matColumnDef=\\\"{{column.column}}\\\">\\n          <mat-header-cell mat-sort-header *matHeaderCellDef [fxFlex]=\\\"column.flex\\\"> {{column.text}} </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\" [fxFlex]=\\\"column.flex\\\"> {{element[column.column]}}</mat-cell>\\n        </ng-container>\\n\\n      </ng-container>\\n\\n      <!-- Control de acciones -->\\n      <ng-container matColumnDef=\\\"ActionEdit\\\">\\n        <mat-header-cell *matHeaderCellDef fxFlex=\\\"100px\\\"> Acciones </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" fxFlex=\\\"100px\\\">\\n\\n          <ng-container *ngIf=\\\"!isAdmin\\\">\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"center center\\\">\\n              <mat-icon color=\\\"warn\\\">block</mat-icon>\\n            </div>\\n          </ng-container>\\n\\n          <ng-container *ngIf=\\\"isAdmin\\\">\\n            <button class=\\\"blue-700\\\" mat-icon-button (click)=\\\"edit(row.Id)\\\">\\n              <mat-icon>edit</mat-icon>\\n            </button>\\n          </ng-container>\\n\\n        </mat-cell>\\n      </ng-container>\\n\\n      <!-- Definicion de filas y columnas -->\\n      <mat-header-row *matHeaderRowDef=\\\"columns()\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: columns();\\\"></mat-row>\\n    </mat-table>\\n  </div>\\n\\n  <div my-card-footer>\\n    <mat-paginator [length]=\\\"catalogPage.TotalCount\\\" [pageIndex]=\\\"pagConfig.pageNumber - 1\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[10,25,50,75,100]\\\"\\n      (page)=\\\"catalogosService.emitPaginator($event, pagConfig)\\\">\\n    </mat-paginator>\\n  </div>\\n</my-card>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport {\n  CatalogosService,\n  ICatalogResponse,\n  IPageConfig,\n  OrderTypes,\n  Column,\n} from '../../catalogos.service';\nimport { UsuariosService } from '../../usuarios.service';\n\n@Component({\n  selector: 'cat-familias-materiales.cc',\n  templateUrl: './familias-materiales.component.html',\n  styleUrls: ['./familias-materiales.component.scss'],\n})\nexport class FamiliasMaterialesComponent implements OnInit {\n  /**\n   * Contenido del Catalogo\n   */\n  catalogPage: ICatalogResponse = {\n    TotalCount: 0,\n    TotalPages: 0,\n    Items: null,\n  };\n  /**\n   * Configuracion del Paginador\n   */\n  pagConfig: IPageConfig = {\n    pageSize: 10,\n    pageNumber: 1,\n    orderType: OrderTypes.ASC,\n    orderBy: 'Id',\n    query: '',\n  };\n\n  isLoading: boolean = false;\n  isAdmin: boolean = false;\n\n  /**\n   * Constructor del componente\n   * @param catalogosService\n   * @param usuariosService\n   */\n  constructor(public catalogosService: CatalogosService, private usuariosService: UsuariosService) {\n    this.catalogosService.needRefresh.subscribe(p => {\n      this.fillCatalog();\n    });\n\n    this.usuariosService.CurrentIsInRol('Administrador,Sistemas,Develop').subscribe(p => {\n      this.isAdmin = p;\n      this.fillCatalog();\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Llena el catalogo\n   */\n  fillCatalog() {\n    this.isLoading = true;\n    this.catalogosService.getFamiliasMateriales(this.pagConfig).then(result => {\n      this.catalogPage = result;\n      this.isLoading = false;\n    });\n  }\n\n  /**\n   * Define la coleccion de las columnas\n   */\n  columsToView(): Column[] {\n    return [\n      new Column('Id', 'Id', { flex: '100px' }),\n      new Column('NombreFamilia', 'Nombre de la Familia'),\n      new Column('ActionEdit', 'Acciones', { sortable: false, db: false }),\n    ];\n  }\n\n  /**\n   * Regresa el nombre de las columnas a mostrar\n   */\n  columns() {\n    return this.columsToView().map(p => p.column);\n  }\n\n  add() {\n    console.log('you press add button');\n  }\n\n  edit(id: number) {\n    console.log('you press edit button on ' + id);\n  }\n  delete(id: number) {\n    console.log('you press delete button on ' + id);\n  }\n}\n","module.exports = \"<div style=\\\"position:relative\\\">\\n  <mat-card [ngClass]=\\\"getColor()\\\" class=\\\"mat-elevation-z10\\\">\\n    <mat-card-header>\\n      <div *ngIf=\\\"Icono\\\" mat-card-avatar fxFlex=\\\"60px\\\" fxLayoutAlign=\\\"center center\\\">\\n        <ng-container *ngIf=\\\"HasFontawesomeIcon\\\">\\n          <fa-icon [icon]=\\\"['fas', Icono]\\\" size=\\\"3x\\\"></fa-icon>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"!HasFontawesomeIcon\\\">\\n          <mat-icon class=\\\"icon-large\\\">{{Icono}}</mat-icon>\\n        </ng-container>\\n      </div>\\n      <mat-card-title>{{Titulo}}</mat-card-title>\\n      <mat-card-subtitle>{{Descripcion}}</mat-card-subtitle>\\n      <button *ngIf=\\\"ShowAdd\\\" matTooltip=\\\"Agregar\\\" mat-fab class=\\\"mat-card-action-button bg\\\" [ngClass]=\\\"addBtnClass\\\" (click)=\\\"clickAdd()\\\">\\n        <mat-icon>add</mat-icon>\\n      </button>\\n    </mat-card-header>\\n    <ng-content select=\\\"[my-card-body]\\\"></ng-content>\\n    <mat-card-content style=\\\"overflow: auto;\\\">\\n      <ng-content select=\\\"[my-card-content]\\\"></ng-content>\\n    </mat-card-content>\\n    <mat-card-footer #myCardFooter [ngClass]=\\\"{'hideElement':!showFooter}\\\">\\n      <ng-content select=\\\"[my-card-footer]\\\"></ng-content>\\n    </mat-card-footer>\\n  </mat-card>\\n</div>\\n\"","module.exports = \".hideElement {\\n  display: none; }\\n\\n:host .mat-icon.icon-large {\\n  width: 54px;\\n  height: 54px;\\n  font-size: 54px; }\\n\"","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  AfterViewInit,\n  ChangeDetectorRef,\n} from '@angular/core';\n\nexport enum ClassIcons {\n  Mi,\n  Fa,\n}\nexport interface IMyCardIcon {\n  iconName: string;\n  iconType?: ClassIcons;\n}\n\n@Component({\n  selector: 'my-card',\n  templateUrl: './my-card.component.html',\n  styleUrls: ['./my-card.component.scss'],\n})\nexport class MyCardComponent implements OnInit, AfterViewInit {\n  @Input()\n  Titulo: string = 'Card';\n  @Input()\n  Descripcion: string = '';\n  @Input()\n  Icono: string;\n  @Input()\n  HasFontawesomeIcon: boolean = false;\n  @Input()\n  CardColor: string = 'primary';\n  @Input()\n  ShowAdd: boolean = false;\n  @Input()\n  addBtnClass: string = 'grey-200';\n  @Output()\n  ClickAdd: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('myCardFooter')\n  myCardFooter;\n\n  showFooter: boolean = false;\n\n  getColor() {\n    return 'mat-card-theme mat-' + this.CardColor;\n  }\n\n  ngAfterViewInit() {\n    this.showFooter =\n      this.myCardFooter.nativeElement && this.myCardFooter.nativeElement.children.length > 0;\n    this.cdRef.detectChanges();\n  }\n\n  clickAdd() {\n    this.ClickAdd.emit();\n  }\n\n  constructor(private cdRef: ChangeDetectorRef) {}\n\n  ngOnInit() {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators, ValidatorFn } from '../../../../node_modules/@angular/forms';\r\n@Component({\r\n  selector: 'wrap-inputs',\r\n  template: `\r\n  <div fxLayout=\"row wrap\" [formGroup]=\"fGroup\" fxLayoutAlign=\"space-between start\"  fxFlexFill fxLayoutGap=\"5px\">\r\n      <ng-container *ngFor=\"let ctl of controls\" [ngSwitch]=\"ctl.type\">\r\n        <mat-form-field fxFlex=\"{{(ctl.flex ? ctl.flex : '100%')}}\" fxFlex.gt-sm=\"{{(ctl.smflex ? ctl.smflex : '48%')}}\" *ngSwitchCase=\"'select'\">\r\n          <mat-select formControlName=\"{{ctl.name}}\" placeholder=\"{{ctl.text}}\">\r\n            <mat-option *ngFor=\"let item of ctl.selectOptions\" [value]=\"item.value\">\r\n              {{item.display}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field fxFlex=\"{{(ctl.flex ? ctl.flex : '100%')}}\" fxFlex.gt-sm=\"{{(ctl.smflex ? ctl.smflex : '48%')}}\" *ngSwitchDefault>\r\n          <input  [type]=\"ctl.type ? ctl.type : 'textbox'\" matInput formControlName=\"{{ctl.name}}\" placeholder=\"{{ctl.text}}\"  >\r\n          <mat-error *ngIf=\"fGroup.controls[ctl.name].invalid\">\r\n          {{getErrorMessage(ctl.name, ctl.text)}}\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </ng-container>\r\n  </div>\r\n  `,\r\n  styles: []\r\n})\r\n\r\nexport class WrapInputsComponent implements OnInit {\r\n  @Input() controls: Array<IInputConfig>;\r\n  @Input() fGroup: FormGroup;\r\n\r\n  getErrorMessage(controlName: string, text: string) {\r\n    const ctl = this.fGroup.controls[controlName];\r\n    if (ctl.hasError('required')) {\r\n      return `El campo \"${text}\" es requerido`;\r\n    } else if (ctl.hasError('email')) {\r\n      return 'El formato de Email no es valido';\r\n    } else if (ctl.hasError('min')) {\r\n      return 'El valor minimo es ' + ctl.getError('min').min;\r\n    } else if (ctl.hasError('max')) {\r\n      return 'El valor minimo es ' + ctl.getError('max').max;\r\n    } else if (ctl.hasError('minlength')) {\r\n      return 'El largo minimo es de ' + ctl.getError('minlength').requiredLength;\r\n    } else if (ctl.hasError('maxlength')) {\r\n      return 'El maximo es de ' + ctl.getError('maxlength').requiredLength;\r\n    } else if (ctl.hasError('pattern')) {\r\n      return `Valor invalido para ${text} `;\r\n    }\r\n  }\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n\r\nexport interface IInputConfig {\r\n  name: string;\r\n  text: string;\r\n  flex?: string;\r\n  smflex?: string;\r\n  type?: string;\r\n  selectOptions?: Array<ISelectOptions>;\r\n}\r\nexport interface ISelectOptions {\r\n  display: string;\r\n  value: any;\r\n}\r\n\r\n\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '../../node_modules/@angular/material';\n\nexport enum DialogIcons {\n  None,\n  Success,\n  Error,\n  Info,\n  Question\n}\n\nexport enum DialogButtonsFlags {\n  none = 0,\n  Ok = 1 << 0,\n  Cancel = 1 << 1,\n  Yes = 1 << 2,\n  No = 1 << 3\n}\n\nexport interface DialogData {\n  Message: string;\n  Title: string;\n  Icon: DialogIcons;\n  buttons: DialogButtonsFlags;\n}\n\nexport enum DialogResults {\n  Ok,\n  Cancel,\n  Yes,\n  No\n}\n\n\n@Component({\n  selector: 'app-dialog',\n  template: `\n  <div style=\"position: relative\" fxLayout=\"row\" fxLayoutGap=\"15px\" class=\"mat-typography\">\n  <!-- CloseButton -->\n  <button class=\"closeButton\"  tabIndex=\"3\" color=\"warn\" mat-icon-button (click)=\"CancelResult()\">\n    <mat-icon>close</mat-icon>\n  </button>\n  <!-- DialogIcon -->\n  <div fxFlex=\"80px\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <fa-icon [fixedWidth]=\"true\" [style.color]=\"ColorIcon\" [icon]=\"DialogIcon\" size=\"4x\"></fa-icon>\n  </div>\n  <!-- DialogContent -->\n  <div fxFlex=\"100%\">\n\n    <h2 mat-dialog-title>{{data.Title}}</h2>\n    <div mat-dialog-content [innerHTML]=\"data.Message\">\n    </div>\n\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <button *ngIf=\"HasFlag(data.buttons, DialogButtons.No)\" tabIndex=\"0\" (click)=\"NoResult()\" color=\"warn\" mat-stroked-button>No</button>\n      <button *ngIf=\"HasFlag(data.buttons, DialogButtons.Yes)\"  tabIndex=\"1\" (click)=\"YesResult()\" color=\"primary\" mat-stroked-button>Si</button>\n      <button *ngIf=\"HasFlag(data.buttons, DialogButtons.Cancel)\"  tabIndex=\"0\" (click)=\"CancelResult()\" color=\"warn\" mat-stroked-button>Cancelar</button>\n      <button *ngIf=\"HasFlag(data.buttons, DialogButtons.Ok)\"  tabIndex=\"1\" (click)=\"OkResult()\" color=\"primary\" mat-stroked-button>Ok</button>\n    </div>\n\n  </div>\n\n</div>\n  `,\n  styles: []\n})\nexport class DialogComponent implements OnInit {\n  DialogButtons = DialogButtonsFlags;\n\n  constructor(public dialogRef: MatDialogRef<DialogComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n    this.data.buttons = data.buttons === null || data.buttons === 0 ? DialogButtonsFlags.Ok : data.buttons;\n  }\n\n  ngOnInit() {\n  }\n\n  HasFlag(value: DialogButtonsFlags, compare: DialogButtonsFlags) {\n    if (value & compare) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  get DialogIcon() {\n    switch (this.data.Icon) {\n      case DialogIcons.Error:\n        return ['fas', 'times-circle'];\n      case DialogIcons.Info:\n        return ['fas', 'info-circle'];\n      case DialogIcons.Question:\n        return ['fas', 'question-circle'];\n      case DialogIcons.Success:\n        return ['fas', 'check-circle'];\n      default:\n        return ['fas', 'info-circle'];\n    }\n  }\n\n  get ColorIcon() {\n    switch (this.data.Icon) {\n      case DialogIcons.Error:\n        return '#f44336';\n      case DialogIcons.Info:\n        return '#03a9f4';\n      case DialogIcons.Question:\n        return '#304ffe';\n      case DialogIcons.Success:\n        return '#4caf50';\n      default:\n        return '#03a9f4';\n    }\n  }\n\n  OkResult() {\n    this.dialogRef.close(DialogResults.Ok);\n  }\n  CancelResult() {\n    this.dialogRef.close(DialogResults.Cancel);\n  }\n  YesResult() {\n    this.dialogRef.close(DialogResults.Yes);\n  }\n  NoResult() {\n    this.dialogRef.close(DialogResults.No);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '../../node_modules/@angular/material';\r\nimport { DialogComponent, DialogButtonsFlags, DialogIcons, DialogResults } from './dialog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DialogService {\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n  /**\r\n * Controlador de los dialogos.\r\n * @param Title Titulo del dialogo\r\n * @param Message Mensaje que se mostrara en el dialogo\r\n * @param options buttons: Botones del cuadro de dialogo, Icon: Icono que se mostrara\r\n */\r\n  showDialog(\r\n    Title: string,\r\n    Message: string,\r\n    options?: { buttons?: DialogButtonsFlags, Icon?: DialogIcons }): Promise<DialogResults> {\r\n\r\n    const defaults_ = {\r\n      buttons: DialogButtonsFlags.Ok,\r\n      Icon: DialogIcons.Info,\r\n      affterClose: result => console.log(result)\r\n    };\r\n    const options_ = Object.assign(defaults_, options);\r\n    const dialogRef = this.dialog.open(DialogComponent, {\r\n      disableClose: true,\r\n      data: {\r\n        Message: Message,\r\n        Title: Title,\r\n        buttons: options_.buttons,\r\n        Icon: options_.Icon\r\n      }\r\n    });\r\n\r\n    return new Promise<DialogResults>((resolve, rejected) => {\r\n      dialogRef.afterClosed().subscribe((res: DialogResults) => resolve(res));\r\n    });\r\n\r\n  }\r\n\r\n  getModelError(error: any): string {\r\n    let errormsg = '<dl>';\r\n    const errors: object = error.error.ModelState;\r\n    const errorMsg: string = error.error.Message;\r\n\r\n    if (errors) {\r\n\r\n      for (const i in errors) {\r\n        if (errors.hasOwnProperty(i)) {\r\n          if (Array.isArray(errors[i])) {\r\n            errormsg += `<dt>${i.replace('model.', '')}:</dt>`;\r\n            errors[i].forEach(v => {\r\n              errormsg += `<dd>${v}</dd>`;\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } else if (errorMsg) {\r\n      errormsg += `<dt>${errorMsg}</dt>`;\r\n    } else {\r\n      errormsg += `<dt>Operación no valida</dt>`;\r\n    }\r\n    errormsg += '</dl>';\r\n    return errormsg;\r\n  }\r\n}\r\n","module.exports = \"<div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" fxFlexFill fxLayoutAlign=\\\"center center\\\">\\r\\n\\r\\n  <mat-spinner *ngIf=\\\"loading\\\"  [mode]=\\\"'indeterminate'\\\"></mat-spinner>\\r\\n  <mat-card *ngIf=\\\"!loading\\\" fxLayout=\\\"column\\\" class=\\\"mat-elevation-z20 card\\\">\\r\\n    <div class=\\\"logo\\\">\\r\\n      <img mat-card-image class=\\\"excel\\\" src=\\\"assets/logo.png\\\" alt=\\\"Logo de ExcelNobleza\\\">\\r\\n      <img mat-card-image class=\\\"guala\\\" src=\\\"assets/guala.png\\\" alt=\\\"Logo de Gualapack\\\">\\r\\n      <span>MIEMBRO DE GRUPO</span>\\r\\n    </div>\\r\\n\\r\\n    <mat-card-content fxLayout=\\\"column\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput [(ngModel)]=\\\"userLogin.username\\\" placeholder=\\\"Correo Electronico\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input type=\\\"password\\\" [(ngModel)]=\\\"userLogin.password\\\" matInput placeholder=\\\"Contraseña\\\">\\r\\n      </mat-form-field>\\r\\n    </mat-card-content>\\r\\n\\r\\n    <mat-card-actions fxLayoutAlign=\\\"space-around center\\\">\\r\\n      <button color=\\\"primary\\\" (click)=\\\"login()\\\" mat-raised-button>\\r\\n        <fa-icon [icon]=\\\"['fas', 'user']\\\"></fa-icon>\\r\\n        Entrar\\r\\n      </button>\\r\\n    </mat-card-actions>\\r\\n\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \":host {\\n  height: 100%; }\\n  :host.myClass {\\n    flex: 1 1 100%; }\\n  .card {\\n  max-width: 300px; }\\n  .logo {\\n  padding-left: 20px;\\n  padding-right: 20px;\\n  padding-top: 30px;\\n  padding-bottom: 30px;\\n  position: relative;\\n  height: 50px;\\n  width: 280px; }\\n  .logo > .excel {\\n    position: absolute;\\n    top: 30px;\\n    left: 30px;\\n    width: 250px; }\\n  .logo > .guala {\\n    position: absolute;\\n    bottom: 30px;\\n    right: 90px;\\n    width: 120px; }\\n  .logo > span {\\n    position: absolute;\\n    top: 50px;\\n    left: 5px;\\n    width: 250px;\\n    font-size: 10px; }\\n\"","import { DialogIcons } from './../dialog.component';\r\nimport { DialogService } from './../dialog.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { UserLogin, UsuariosService } from '../usuarios.service';\r\nimport { Router, ActivatedRoute } from '../../../node_modules/@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  loading: boolean = false;\r\n  toRoute: string;\r\n  userLogin: UserLogin = { username: '', password: '', grant_type: 'password' };\r\n  sub: any;\r\n\r\n  constructor(\r\n    private usuariosService: UsuariosService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private dialogService: DialogService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.route.queryParams.subscribe(v => {\r\n      this.toRoute = v.toRoute;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  login() {\r\n    this.loading = true;\r\n    const promiseLogin = this.usuariosService.login(\r\n      this.userLogin,\r\n      this.toRoute,\r\n      () => {\r\n        this.loading = false;\r\n      },\r\n      e => {\r\n        this.dialogService.showDialog('Error...', e.error.error_description, {\r\n          Icon: DialogIcons.Error\r\n        });\r\n        this.loading = false;\r\n      }\r\n    );\r\n  }\r\n}\r\n","﻿import { MatPaginatorIntl } from '@angular/material';\r\n\r\nexport class MatPaginatorIntlCro extends MatPaginatorIntl {\r\n  itemsPerPageLabel = 'Tamaño:';\r\n  nextPageLabel = 'Siguiente';\r\n  previousPageLabel = 'Anterior';\r\n\r\n  getRangeLabel = function (page, pageSize, length) {\r\n    if (length === 0 || pageSize === 0) {\r\n      return '0-' + length;\r\n    }\r\n    length = Math.max(length, 0);\r\n    const startIndex = page * pageSize;\r\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\r\n    const endIndex = startIndex < length ?\r\n      Math.min(startIndex + pageSize, length) :\r\n      startIndex + pageSize;\r\n    return startIndex + 1 + '-' + endIndex + ':' + length;\r\n  };\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {\n  faUserPlus,\n  faCoffee,\n  faTimes,\n  faInfoCircle,\n  faUsers,\n  faCheck,\n  faTimesCircle,\n  faQuestionCircle,\n  faCheckCircle,\n  faEdit,\n  faPlusCircle,\n  faHome,\n  faCogs,\n  faCubes,\n  faTint,\n  faUser,\n  faClone,\n  faBox,\n  faBook,\n  faObjectGroup,\n  faDotCircle,\n  faSignOutAlt,\n  faLayerGroup,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nlibrary.add(\n  faUserPlus,\n  faCoffee,\n  faTimes,\n  faTimesCircle,\n  faInfoCircle,\n  faQuestionCircle,\n  faCheckCircle,\n  faUsers,\n  faCheck,\n  faEdit,\n  faPlusCircle,\n  faHome,\n  faCogs,\n  faCubes,\n  faTint,\n  faUser,\n  faClone,\n  faObjectGroup,\n  faDotCircle,\n  faBox,\n  faBook,\n  faSignOutAlt,\n  faLayerGroup\n);\n\n@NgModule({\n  imports: [\n    FontAwesomeModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    RouterModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    BrowserAnimationsModule,\n    CommonModule,\n  ],\n  exports: [\n    FontAwesomeModule,\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    FlexLayoutModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [],\n})\nexport class MaterialModule {}\n","﻿import { Injectable, NgZone } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpResponse,\r\n  HttpErrorResponse,\r\n  HttpResponseBase\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, filter, map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private router: Router, private ngZone: NgZone) { }\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const started = Date.now();\r\n\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('accessToken')\r\n      }\r\n    });\r\n\r\n    return next.handle(request).pipe(tap(event => {\r\n      if (event instanceof HttpResponse) {\r\n        const elapsed = Date.now() - started;\r\n        console.log(`La respuesta desde ${request.urlWithParams} tomó ${elapsed} ms.`);\r\n      }\r\n    }));\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, observable } from '../../node_modules/rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { async } from '../../node_modules/@types/q';\r\n\r\nexport enum Actions {\r\n  Add,\r\n  Remove,\r\n}\r\n\r\n/**\r\n * Clase  que contiene los datos de inicio de sesión\r\n */\r\nexport class UserLogin {\r\n  grant_type: 'password';\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport interface UserInfo {\r\n  Email: string;\r\n  Password: string;\r\n  ConfirmPassword: string;\r\n  Nombre: string;\r\n  ApellidoPaterno: string;\r\n  ApellidoMaterno: string;\r\n  Clave: number;\r\n}\r\n\r\nexport interface BasicInfoUser {\r\n  Nombre: string;\r\n  Email: string;\r\n  EmailConfirmaed: boolean;\r\n  Id: string;\r\n  Roles: string[];\r\n}\r\n\r\nexport interface AddRemoveUserRoleModel {\r\n  Role: string;\r\n  Action: Actions;\r\n  UserId: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UsuariosService {\r\n  public myRoles: string[];\r\n\r\n  // public UserRoles: string[] = [];\r\n  constructor(private http: HttpClient, private router: Router, private ngZone: NgZone) {\r\n    this.Initialice();\r\n  }\r\n\r\n  public Initialice() {\r\n    this.getUserRoles().subscribe(r => (this.myRoles = r));\r\n  }\r\n\r\n  public getUserRoles(UsuarioId: number = null) {\r\n    return this.http.post<string[]>('api/Account/UserRoles', UsuarioId);\r\n  }\r\n  /**\r\n   * Registra un usuario nuevo en la App\r\n   */\r\n  public registrar(userInfo: UserInfo) {\r\n    return this.http.post('/api/Account/Register', userInfo);\r\n  }\r\n\r\n  /**\r\n   * Regresa la lista de usuarios disponibles\r\n   */\r\n  public GetUsers() {\r\n    return this.http.get<BasicInfoUser[]>('/api/Account/users');\r\n  }\r\n\r\n  /**\r\n   * Genera el Token de credenciales\r\n   * @param userLogin Credenciales de incio de sesión\r\n   */\r\n  public login(\r\n    userLogin: UserLogin,\r\n    toRoute: string = '',\r\n    successCallback: Function = () => {},\r\n    errorCallback: (error: HttpErrorResponse) => void\r\n  ) {\r\n    this.http\r\n      .post(\r\n        '/TOKEN',\r\n        'username=' +\r\n          userLogin.username +\r\n          '&password=' +\r\n          userLogin.password +\r\n          '&grant_type=password',\r\n        { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n      )\r\n      .subscribe(\r\n        (resp: any) => {\r\n          sessionStorage.setItem('userName', resp.userName);\r\n          sessionStorage.setItem('userId', resp.userId);\r\n          sessionStorage.setItem('accessToken', resp.access_token);\r\n          sessionStorage.setItem('refreshToken', resp.refresh_token);\r\n          this.Initialice();\r\n          this.goToRoute(toRoute);\r\n          successCallback();\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          console.log(error);\r\n          errorCallback(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  public getRolesAvailables(): Observable<string[]> {\r\n    return this.http.get<string[]>('/api/Account/Roles');\r\n  }\r\n\r\n  public CurrentIsInRol(role: string): Observable<boolean> {\r\n    return new Observable<boolean>(observer => {\r\n      const roles = role.split(',');\r\n      let ret: boolean = false;\r\n\r\n      const resolve = function(myRoles_: string[]) {\r\n        for (const v of roles) {\r\n          if (myRoles_ != null && myRoles_.includes(v.replace('', ''))) {\r\n            ret = true;\r\n          }\r\n        }\r\n        observer.next(ret);\r\n        observer.complete();\r\n      };\r\n\r\n      if (!this.myRoles) {\r\n        this.getUserRoles()\r\n          .toPromise()\r\n          .then(rols => {\r\n            this.myRoles = rols;\r\n            resolve(this.myRoles);\r\n          });\r\n      } else {\r\n        resolve(this.myRoles);\r\n      }\r\n    });\r\n  }\r\n\r\n  public ManageRoles(data: AddRemoveUserRoleModel) {\r\n    return this.http.post('/api/Account/ManageRoles', data).toPromise();\r\n  }\r\n\r\n  /**\r\n   * Cierra la sesión actual\r\n   */\r\n  public signOut() {\r\n    sessionStorage.removeItem('accessToken');\r\n    sessionStorage.removeItem('refreshToken');\r\n    sessionStorage.removeItem('userName');\r\n    sessionStorage.removeItem('userId');\r\n  }\r\n\r\n  public getUserId(): number {\r\n    return +sessionStorage.getItem('userId');\r\n  }\r\n\r\n  /**\r\n   * Indica si existe el Token de autenticación en el almacenanmiento de sesión.\r\n   */\r\n  public hasToken(): boolean {\r\n    return sessionStorage.getItem('accessToken') ? true : false;\r\n  }\r\n\r\n  /**\r\n   * Direcciona la ruta actual a la ruta en el parametro\r\n   * @param route Ruta de destino\r\n   */\r\n  public goToRoute(route: string = '') {\r\n    this.ngZone.run(() => {\r\n      this.router.navigate([route]);\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '../../../node_modules/@angular/forms';\r\nimport { MatDialogRef } from '../../../node_modules/@angular/material';\r\nimport { UsuariosService } from '../usuarios.service';\r\nimport { DialogIcons } from '../dialog.component';\r\nimport { DialogService } from '../dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-agregar-usuario',\r\n  template: `\r\n  <div style=\"position:relative;\" fxLayout=\"column\">\r\n  <mat-dialog-content>\r\n      <form [formGroup]=\"userForm\" fxLayout=\"column\" fxLayoutAlign=\"center center\" (ngSubmit)=\"onSubmit()\" fxFlexFill>\r\n          <div fxLayout=\"column\">\r\n              <mat-form-field>\r\n                  <input formControlName=\"Nombre\" matInput placeholder=\"Nombre\">\r\n                  <mat-error *ngIf=\"userForm.controls.Nombre.hasError('required')\">\r\n                      El Nombre del usuario es requerido.\r\n                  </mat-error>\r\n              </mat-form-field>\r\n\r\n              <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"5px\">\r\n                  <mat-form-field fxFlex=\"100%\" fxFlex.gt-sm=\"48%\">\r\n                      <input formControlName=\"ApellidoPaterno\" matInput placeholder=\"Apellido Paterno\">\r\n                      <mat-error *ngIf=\"userForm.controls.ApellidoPaterno.hasError('required')\">\r\n                          El Apellido Paterno es requerido.\r\n                      </mat-error>\r\n                  </mat-form-field>\r\n                  <mat-form-field fxFlex=\"100%\" fxFlex.gt-sm=\"48%\">\r\n                      <input formControlName=\"ApellidoMaterno\" matInput placeholder=\"Apellido Materno\">\r\n                      <mat-error *ngIf=\"userForm.controls.ApellidoMaterno.hasError('required')\">\r\n                          El Apellido Materno es requerido.\r\n                      </mat-error>\r\n                  </mat-form-field>\r\n              </div>\r\n\r\n              <mat-form-field>\r\n                  <input type=\"number\" formControlName=\"Clave\" matInput placeholder=\"Clave de Trabajador\">\r\n                  <mat-error *ngIf=\"userForm.controls.Clave.hasError('required')\">\r\n                    La clave es requerida.\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"userForm.controls.Clave.hasError('pattern')\">\r\n                    El valor debe ser numerico y contener al menos 4 digitos.\r\n                  </mat-error>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field>\r\n                  <input type=\"email\" formControlName=\"Email\" matInput placeholder=\"Correo Electronico\">\r\n                  <mat-error *ngIf=\"userForm.controls.Email.hasError('email')\">\r\n                      El Email no es valido.\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"userForm.controls.Email.hasError('required')\">\r\n                      El Email es requerido.\r\n                  </mat-error>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field>\r\n                  <input type=\"password\" formControlName=\"Password\" matInput placeholder=\"Contraseña\">\r\n                  <mat-error *ngIf=\"userForm.controls.Password.hasError('required')\">\r\n                      La contraseña es requerida.\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"userForm.controls.Password.hasError('pattern')\">\r\n                      La contraseña debe contener al menos un digito y una letra Mayuscula y debe ser de mas de 8 caracteres de largo.\r\n                  </mat-error>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field>\r\n                  <input type=\"password\" formControlName=\"ConfirmPassword\" matInput placeholder=\"Confirme Contraseña\">\r\n                  <mat-error *ngIf=\"userForm.controls.ConfirmPassword.hasError('required')\">\r\n                      El confirmacion de la contraseña es requerida.\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"userForm.controls.ConfirmPassword.hasError('MatchPassword')\">\r\n                      Las contraseñas no coinciden\r\n                  </mat-error>\r\n              </mat-form-field>\r\n              <button type=\"submit\" mat-raised-button color=\"primary\">Registrar</button>\r\n          </div>\r\n      </form>\r\n  </mat-dialog-content>\r\n  <!-- CloseButton -->\r\n  <button class=\"closeButton\" mat-dialog-close tabIndex=\"3\" color=\"warn\" mat-icon-button>\r\n      <mat-icon>close</mat-icon>\r\n  </button>\r\n</div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class AgregarUsuarioComponent implements OnInit {\r\n\r\n  userForm: FormGroup;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AgregarUsuarioComponent>,\r\n    private fb: FormBuilder,\r\n    private dialogService: DialogService,\r\n    private usuariosService: UsuariosService) {\r\n    this.createForm();\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  /**\r\n   * Crea el formulario para agregar un usuario\r\n   */\r\n  createForm() {\r\n    this.userForm = this.fb.group({\r\n      Nombre: ['', Validators.required],\r\n      ApellidoPaterno: ['', Validators.required],\r\n      ApellidoMaterno: ['', Validators.required],\r\n      Email: ['', [Validators.email, Validators.required]],\r\n      Password: ['', [Validators.required, Validators.pattern('^(?=.*\\\\d)[A-Za-z\\\\d#$@!%&*?]{8,}$')]],\r\n      ConfirmPassword: ['', Validators.required],\r\n      Clave: ['', [Validators.required, Validators.pattern('^[0-9]{4,}$')]]\r\n    }, {\r\n        validator: PasswordValidation.MatchPassword\r\n      });\r\n  }\r\n\r\n  /**\r\n * Envia a la API los datos de registro del usuario\r\n */\r\n  onSubmit() {\r\n    if (this.userForm.valid) {\r\n      this.usuariosService.registrar(this.userForm.value)\r\n        .subscribe(success => { this.dialogService.showDialog('Correcto...', 'Se agrego correctamente el usuario, <br />Por favor, confirme el registro mediante el correo electronico que hemos enviado.', { Icon: DialogIcons.Success }); },\r\n          error => {\r\n            this.dialogService.showDialog('Error en los Datos', this.dialogService.getModelError(error), { Icon: DialogIcons.Error });\r\n          }\r\n        );\r\n\r\n    } else {\r\n      this.dialogService.showDialog('Error en los Datos', 'Por favor, complete los campos adecuadamente', { Icon: DialogIcons.Error });\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Clase para comprobar que los password sean correctos\r\n */\r\nexport class PasswordValidation {\r\n  static MatchPassword(AC: AbstractControl) {\r\n    const password = AC.get('Password').value; // to get value in input tag\r\n    const confirmPassword = AC.get('ConfirmPassword').value; // to get value in input tag\r\n    if (password !== confirmPassword) {\r\n      AC.get('ConfirmPassword').setErrors({ MatchPassword: true });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { BasicInfoUser, UsuariosService, Actions } from '../usuarios.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { DialogService } from '../dialog.service';\r\nimport { DialogIcons, DialogButtonsFlags, DialogResults } from '../dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-manage-roles',\r\n  template: `\r\n  <div fxLayout=\"column\" class=\"mat-typography\">\r\n  <h3>Usuario: {{User.Nombre}}</h3>\r\n  <h3>Email: {{User.Email}}</h3>\r\n  <mat-divider></mat-divider>\r\n  <div mat-dialog-content fxFlex=\"100%\">\r\n      <p>Roles del usuario:</p>\r\n      <mat-chip-list #chipList class=\"mat-chip-list-stacked\" aria-orientation=\"vertical\">\r\n\r\n          <ng-container *ngFor=\"let itm of User.Roles\">\r\n\r\n              <mat-chip color=\"accent\" selected (removed)=\"removeRol(itm)\" [removable]=\"true\">\r\n                  {{itm}}\r\n                  <span style=\"flex: 1 1 100%\"></span>\r\n                  <mat-icon matChipRemove>cancel</mat-icon>\r\n              </mat-chip>\r\n          </ng-container>\r\n      </mat-chip-list>\r\n      <br />\r\n      <div fxLayout=\"row\">\r\n          <p>El rol \"Usuario\" no puede ser removido.</p>\r\n      </div>\r\n  </div>\r\n  <mat-divider></mat-divider>\r\n  <div matDialogActions fxLayout=\"column\">\r\n      <div fxLayout=\"row\" style=\"font-size: 18px;\" fxLayoutGap=\"5px\">\r\n\r\n          <mat-form-field fxFlex>\r\n             <mat-select #rolInput placeholder=\"Rol\"  name=\"rol\">\r\n               <mat-option *ngFor=\"let item of Roles\" [value]=\"item\">\r\n                 {{item}}\r\n               </mat-option>\r\n             </mat-select>\r\n          </mat-form-field>\r\n\r\n          <div fxLayoutAlign=\"center center\" >\r\n              <button [disabled]=\"!rolInput.value\" mat-mini-fab  (click)=\"addRole(rolInput.value)\" color=\"primary\">\r\n                  <mat-icon>add</mat-icon>\r\n              </button>\r\n          </div>\r\n      </div>\r\n      <button mat-stroked-button mat-dialog-close color=\"warn\">Cerrar</button>\r\n  </div>\r\n</div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class ManageRolesComponent implements OnInit {\r\n  User: BasicInfoUser;\r\n  Roles: string[];\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ManageRolesComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: BasicInfoUser,\r\n    private usuariosService: UsuariosService,\r\n    private dialogService: DialogService\r\n  ) {\r\n    this.User = this.data;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.usuariosService.getRolesAvailables().subscribe(u => this.Roles = u);\r\n  }\r\n\r\n  addRole(role: string) {\r\n    if (!this.User.Roles.includes(role)) {\r\n      this.usuariosService.ManageRoles({ UserId: this.User.Id, Action: Actions.Add, Role: role })\r\n        .then(\r\n          val => {\r\n            console.log(val);\r\n            this.User.Roles.push(role);\r\n          },\r\n          err => this.dialogService.showDialog('Error', err.error.Message, { Icon: DialogIcons.Error }));\r\n    }\r\n  }\r\n\r\n  removeRol(role: string) {\r\n    if (role !== 'Usuario') {\r\n      this.dialogService.showDialog(\r\n        'Confirmar',\r\n        'Deasea remover el rol ' + role,\r\n        { Icon: DialogIcons.Question, buttons: DialogButtonsFlags.Yes | DialogButtonsFlags.No })\r\n        .then((resp) => {\r\n          if (resp === DialogResults.Yes) {\r\n            this.usuariosService.ManageRoles({ UserId: this.User.Id, Action: Actions.Remove, Role: role })\r\n              .then(\r\n                val => {\r\n                  console.log(val);\r\n                  const idx = this.User.Roles.indexOf(role);\r\n                  if (idx > -1) {\r\n                    this.User.Roles.splice(idx, 1);\r\n                  }\r\n                },\r\n                err => this.dialogService.showDialog('Error', err.error.Message, { Icon: DialogIcons.Error }));\r\n          }\r\n        });\r\n\r\n    } else {\r\n      this.dialogService.showDialog('Error', 'El rol Usuario no se puede eliminar', { Icon: DialogIcons.Error });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div style=\\\"position:relative\\\">\\n    <mat-card class=\\\"mat-card-theme mat-primary\\\">\\n      <mat-card-header>\\n        <div mat-card-avatar>\\n          <fa-icon [icon]=\\\"['fas', 'users']\\\" size=\\\"2x\\\"></fa-icon>\\n        </div>\\n        <mat-card-title>Usuarios</mat-card-title>\\n        <mat-card-subtitle>Se muestra la lista de todos los usuarios registrados en la aplicacion</mat-card-subtitle>\\n        <button mat-fab class=\\\"mat-card-action-button\\\" color=\\\"accent\\\" (click)=\\\"addUser()\\\">\\n          <mat-icon>person_add</mat-icon>\\n        </button>\\n      </mat-card-header>\\n      <mat-card-content style=\\\"overflow: auto;\\\">\\n\\n        <mat-table #table [dataSource]=\\\"Usuarios\\\" style=\\\"min-width: 800px;\\\">\\n          <ng-container cdkColumnDef=\\\"Nombre\\\">\\n            <mat-header-cell *cdkHeaderCellDef> Nombre </mat-header-cell>\\n            <mat-cell *cdkCellDef=\\\"let row\\\"> {{row.Nombre}} </mat-cell>\\n          </ng-container>\\n\\n          <ng-container cdkColumnDef=\\\"Email\\\">\\n            <mat-header-cell *cdkHeaderCellDef> Correo </mat-header-cell>\\n            <mat-cell *cdkCellDef=\\\"let row\\\"> {{row.Email}} </mat-cell>\\n          </ng-container>\\n\\n          <ng-container cdkColumnDef=\\\"EmailConfirmed\\\">\\n            <mat-header-cell *cdkHeaderCellDef fxFlex=\\\"120px\\\"> Email Confirmado </mat-header-cell>\\n            <mat-cell *cdkCellDef=\\\"let row\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"120px\\\">\\n              <fa-icon [style.color]=\\\"row.EmailConfirmed ? '#4caf50': '#f44336'\\\" [icon]=\\\"['fas', row.EmailConfirmed ? 'check': 'times' ]\\\"></fa-icon>\\n              <!-- <mat-checkbox disabled=\\\"true\\\" [checked]=\\\"row.EmailConfirmed\\\"></mat-checkbox> -->\\n            </mat-cell>\\n          </ng-container>\\n          <ng-container cdkColumnDef=\\\"Roles\\\">\\n            <mat-header-cell *cdkHeaderCellDef fxFlex=\\\"250px\\\" fxLayoutAlign=\\\"center center\\\"> Roles </mat-header-cell>\\n            <mat-cell *cdkCellDef=\\\"let row\\\" fxFlex=\\\"250px\\\" fxLayoutAlign=\\\"center center\\\">\\n              <ul style=\\\"list-style: none;\\\" fxFlex=\\\"200px\\\">\\n                <li *ngFor=\\\"let itm of row.Roles\\\">{{itm}}</li>\\n              </ul>\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"editRoles(row)\\\">\\n                <fa-icon [icon]=\\\"['fas','edit']\\\"></fa-icon>\\n              </button>\\n            </mat-cell>\\n          </ng-container>\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let row; columns:displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { BasicInfoUser, UsuariosService, UserInfo } from '../usuarios.service';\r\nimport { MatDialog } from '@angular/material';\r\nimport { AgregarUsuarioComponent } from './agregar-usuario.component';\r\nimport { ManageRolesComponent } from './manage-roles.component';\r\n\r\n@Component({\r\n  selector: 'adm-usuarios.cc',\r\n  templateUrl: './usuarios.component.html',\r\n  styleUrls: ['./usuarios.component.scss'],\r\n})\r\nexport class UsuariosComponent implements OnInit {\r\n  Usuarios: BasicInfoUser[];\r\n  displayedColumns: string[] = ['Nombre', 'Email', 'EmailConfirmed', 'Roles'];\r\n  constructor(private usuarioService: UsuariosService, private dialog: MatDialog) {}\r\n\r\n  ngOnInit() {\r\n    this.usuarioService\r\n      .CurrentIsInRol('Administrador,Sistemas,Develop')\r\n      .toPromise()\r\n      .then(isAdmin => {\r\n        if (isAdmin) {\r\n          this.refreshUsers();\r\n        } else {\r\n          this.usuarioService.goToRoute();\r\n        }\r\n      });\r\n  }\r\n\r\n  private async refreshUsers() {\r\n    this.Usuarios = await this.usuarioService.GetUsers().toPromise();\r\n  }\r\n  addUser() {\r\n    const ref = this.dialog.open(AgregarUsuarioComponent, { disableClose: true });\r\n    ref.afterClosed().subscribe(() => {\r\n      this.refreshUsers();\r\n    });\r\n  }\r\n  editRoles(user: UserInfo) {\r\n    const ref = this.dialog.open(ManageRolesComponent, { disableClose: true, data: user });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}