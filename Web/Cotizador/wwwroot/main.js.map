{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/catalogos.service.ts","webpack:///./src/app/catalogos/catalogos.component.html","webpack:///./src/app/catalogos/catalogos.component.scss","webpack:///./src/app/catalogos/catalogos.component.ts","webpack:///./src/app/catalogos/clientes/add-cliente.component.ts","webpack:///./src/app/catalogos/clientes/clientes.component.html","webpack:///./src/app/catalogos/clientes/clientes.component.scss","webpack:///./src/app/catalogos/clientes/clientes.component.ts","webpack:///./src/app/catalogos/familias-materiales/add-edit-familia-materiales.component.ts","webpack:///./src/app/catalogos/familias-materiales/add-movimientos-familias-materiales.component.ts","webpack:///./src/app/catalogos/familias-materiales/familias-materiales.component.html","webpack:///./src/app/catalogos/familias-materiales/familias-materiales.component.scss","webpack:///./src/app/catalogos/familias-materiales/familias-materiales.component.ts","webpack:///./src/app/catalogos/familias-materiales/movimientos-familias-materiales.component.html","webpack:///./src/app/catalogos/familias-materiales/movimientos-familias-materiales.component.ts","webpack:///./src/app/catalogos/impresoras/add-edit-impresora/add-config-tinta.component.ts","webpack:///./src/app/catalogos/impresoras/add-edit-impresora/add-edit-impresora.component.html","webpack:///./src/app/catalogos/impresoras/add-edit-impresora/add-edit-impresora.component.ts","webpack:///./src/app/catalogos/impresoras/add-edit-impresora/add-rodillo.component.ts","webpack:///./src/app/catalogos/impresoras/detail-impresora/detail-impresora.component.html","webpack:///./src/app/catalogos/impresoras/detail-impresora/detail-impresora.component.scss","webpack:///./src/app/catalogos/impresoras/detail-impresora/detail-impresora.component.ts","webpack:///./src/app/catalogos/impresoras/impresoras.component.html","webpack:///./src/app/catalogos/impresoras/impresoras.component.scss","webpack:///./src/app/catalogos/impresoras/impresoras.component.ts","webpack:///./src/app/catalogos/materiales/add-edit-material.component.html","webpack:///./src/app/catalogos/materiales/add-edit-material.component.ts","webpack:///./src/app/catalogos/materiales/detail-material/detail-material.component.html","webpack:///./src/app/catalogos/materiales/detail-material/detail-material.component.scss","webpack:///./src/app/catalogos/materiales/detail-material/detail-material.component.ts","webpack:///./src/app/catalogos/materiales/materiales.component.html","webpack:///./src/app/catalogos/materiales/materiales.component.ts","webpack:///./src/app/common/my-card/bottom-actions-my-card.component.html","webpack:///./src/app/common/my-card/bottom-actions-my-card.component.ts","webpack:///./src/app/common/my-card/my-card.component.html","webpack:///./src/app/common/my-card/my-card.component.scss","webpack:///./src/app/common/my-card/my-card.component.ts","webpack:///./src/app/common/wrap-inputs/wrap-inputs.component.ts","webpack:///./src/app/custom-breackpoints.ts","webpack:///./src/app/dialog.component.ts","webpack:///./src/app/dialog.service.ts","webpack:///./src/app/initial-page/initial-page.component.html","webpack:///./src/app/initial-page/initial-page.component.scss","webpack:///./src/app/initial-page/initial-page.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/mat-paginator-intl-cro.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/token-interceptor.ts","webpack:///./src/app/usuarios.service.ts","webpack:///./src/app/usuarios/agregar-usuario.component.ts","webpack:///./src/app/usuarios/manage-roles.component.ts","webpack:///./src/app/usuarios/usuarios.component.html","webpack:///./src/app/usuarios/usuarios.component.scss","webpack:///./src/app/usuarios/usuarios.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UsuariosComponent } from './usuarios/usuarios.component';\r\nimport { CatalogosComponent } from './catalogos/catalogos.component';\r\nimport { ClientesComponent } from './catalogos/clientes/clientes.component';\r\nimport { FamiliasMaterialesComponent } from './catalogos/familias-materiales/familias-materiales.component';\r\nimport { MaterialesComponent } from './catalogos/materiales/materiales.component';\r\nimport { DetailMaterialComponent } from './catalogos/materiales/detail-material/detail-material.component';\r\nimport { ImpresorasComponent } from './catalogos/impresoras/impresoras.component';\r\nimport { DetailImpresoraComponent } from './catalogos/impresoras/detail-impresora/detail-impresora.component';\r\nimport { InitialPageComponent } from './initial-page/initial-page.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: InitialPageComponent},\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'usuarios', component: UsuariosComponent },\r\n  {\r\n    path: 'catalogos',\r\n    children: [\r\n      { path: '', component: CatalogosComponent },\r\n      { path: 'Clientes', component: ClientesComponent },\r\n      { path: 'FamiliasMateriales', component: FamiliasMaterialesComponent },\r\n      {\r\n        path: 'Materiales',\r\n        children: [\r\n          { path: '', component: MaterialesComponent },\r\n          { path: ':Id', component: DetailMaterialComponent }\r\n        ]\r\n      },\r\n      {\r\n        path: 'Impresoras',\r\n        children: [\r\n          { path: '', component: ImpresorasComponent },\r\n          { path: ':Id', component: DetailImpresoraComponent }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<mat-sidenav-container class=\\\"main-container mat-typography\\\">\\r\\n  <!-- SideNav -->\\r\\n  <mat-sidenav #sidenav class=\\\"mat-elevation-z15 noprinted\\\" style=\\\"width: 300px;\\\" fxLayout=\\\"column\\\" [opened]=\\\"!sideNavOpend() && usuariosService.hasToken()\\\"\\r\\n    [mode]=\\\"sideNavOpend() ? 'overlay' : 'side'\\\">\\r\\n\\r\\n    <!-- Barra de navegacion del side nav bar -->\\r\\n    <div class=\\\"mat-elevation-z3 card-user\\\" *ngIf=\\\"user\\\" fxFlex=\\\"200px\\\" fxLayout=\\\"column\\\">\\r\\n      <div [style.background-image]=\\\"'url(assets/bkImage.png)'\\\" class=\\\"card-user-background\\\"> </div>\\r\\n      <img class=\\\"card-user-profile-image mat-elevation-z10\\\" src=\\\"assets/img_avatar.png\\\">\\r\\n      <span class=\\\"mat-body-2 card-user-text\\\" [style.font-size]=\\\"'18px'\\\">{{user.Nombre}}</span>\\r\\n      <span class=\\\"mat-caption card-user-text\\\" [style.font-size]=\\\"'16px'\\\">{{user.Email}}</span>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- Menu de Navegacion -->\\r\\n    <!-- Con sesion iniciada -->\\r\\n    <div>\\r\\n      <mat-nav-list>\\r\\n        <mat-list-item [routerLink]=\\\"''\\\">\\r\\n          <fa-icon mat-list-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"['fas', 'home']\\\"></fa-icon>\\r\\n          <h4 mat-line>Inicio</h4>\\r\\n        </mat-list-item>\\r\\n        <mat-accordion>\\r\\n          <!-- Control de Usuarios -->\\r\\n          <mat-expansion-panel class=\\\"plain\\\" displayMode=\\\"flat\\\" *ngIf=\\\"isAdmin | async\\\">\\r\\n            <mat-expansion-panel-header>\\r\\n              <fa-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"['fas', 'users']\\\"></fa-icon>\\r\\n              <h4>Administrador</h4>\\r\\n            </mat-expansion-panel-header>\\r\\n            <mat-nav-list>\\r\\n              <mat-list-item [routerLink]=\\\"'../usuarios'\\\">\\r\\n                <fa-icon mat-list-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"['fas', 'users']\\\"></fa-icon>\\r\\n                <h4 mat-line>Usuarios</h4>\\r\\n              </mat-list-item>\\r\\n            </mat-nav-list>\\r\\n          </mat-expansion-panel>\\r\\n          <!-- Catalogos -->\\r\\n          <mat-list-item [routerLink]=\\\"'../catalogos'\\\">\\r\\n            <fa-icon mat-list-icon [fixedWidth]=\\\"true\\\" [icon]=\\\"['fas', 'book']\\\"></fa-icon>\\r\\n            <h4 mat-line>Catalogos</h4>\\r\\n          </mat-list-item>\\r\\n        </mat-accordion>\\r\\n      </mat-nav-list>\\r\\n    </div>\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <!-- Contenido principal de la pagina -->\\r\\n  <mat-sidenav-content fxLayout=\\\"column\\\" fxFlex>\\r\\n    <!-- ToolBar de la aplicacion en modo Movil -->\\r\\n    <mat-toolbar fxFlex=\\\"60px\\\" class=\\\"noprinted\\\" class=\\\"mat-elevation-z10\\\" style=\\\"position:sticky; top: 0px; z-index: 999;\\\" color=\\\"primary\\\" *ngIf=\\\"usuariosService.hasToken()\\\">\\r\\n\\r\\n      <!-- Control de apertura del SideNav -->\\r\\n      <button mat-icon-button *ngIf=\\\"sideNavOpend()\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n        <mat-icon>menu</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <button mat-icon-button *ngIf=\\\"prevRoute !== '/'\\\" matTooltip=\\\"Regresar\\\" [routerLink]=\\\"prevRoute\\\">\\r\\n        <mat-icon>arrow_back</mat-icon>\\r\\n      </button>\\r\\n\\r\\n      <span class=\\\"relleno\\\"></span>\\r\\n      <!-- Botón de apertura del menu MoreOptions -->\\r\\n      <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\">\\r\\n        <mat-icon>more_vert</mat-icon>\\r\\n      </button>\\r\\n      <!-- Menu de mas opciones -->\\r\\n      <mat-menu #menu=\\\"matMenu\\\">\\r\\n        <button mat-menu-item [matMenuTriggerFor]=\\\"themes\\\">\\r\\n          <mat-icon>color_lens</mat-icon>\\r\\n          <span>Temas</span>\\r\\n        </button>\\r\\n        <button mat-menu-item (click)=\\\"signOut()\\\" [routerLink]=\\\"'../login'\\\">\\r\\n          <mat-icon>close</mat-icon>\\r\\n          <span>Cerrar Sesión</span>\\r\\n        </button>\\r\\n      </mat-menu>\\r\\n\\r\\n      <!-- Menu de Temas -->\\r\\n      <mat-menu #themes=\\\"matMenu\\\">\\r\\n        <button mat-menu-item (click)=\\\"darkTheme = true\\\">\\r\\n          <span>Oscuro</span>\\r\\n        </button>\\r\\n        <button mat-menu-item (click)=\\\"darkTheme = false\\\">\\r\\n          <span>Claro</span>\\r\\n        </button>\\r\\n      </mat-menu>\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <!-- Contendor de Componentes Navegables -->\\r\\n    <div fxLayout=\\\"column\\\" style=\\\"position: relative;\\\" [@fadeAnimation]=\\\"o.isActivated ? o.activatedRoute : ''\\\">\\r\\n      <router-outlet #o=\\\"outlet\\\"></router-outlet>\\r\\n      <img src=\\\"assets/logocol.svg\\\" class=\\\"logo\\\">\\r\\n    </div>\\r\\n  </mat-sidenav-content>\\r\\n\\r\\n</mat-sidenav-container>\\r\\n\"","module.exports = \".main-container {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0; }\\n\\n.plain {\\n  box-shadow: 0 0 0 0 !important; }\\n\\nmat-expansion-panel-header {\\n  padding-left: 16px; }\\n\\nmat-expansion-panel-header fa-icon {\\n    flex-shrink: 0;\\n    width: 24px;\\n    height: 24px;\\n    font-size: 24px !important;\\n    box-sizing: content-box;\\n    border-radius: 50%;\\n    padding: 4px; }\\n\\nmat-expansion-panel-header h4 {\\n    padding-left: 16px;\\n    padding-right: 0px;\\n    margin-top: auto;\\n    margin-bottom: auto; }\\n\\n.card-user {\\n  margin: 0px;\\n  padding: 20px;\\n  position: relative; }\\n\\n.card-user .card-user-text {\\n    text-align: start; }\\n\\n.card-user .card-user-background {\\n    background-size: cover;\\n    height: 100%;\\n    width: 100%;\\n    position: absolute;\\n    z-index: -9;\\n    top: 0px;\\n    left: 0px; }\\n\\n.card-user .card-user-profile-image {\\n    border-radius: 50%;\\n    width: 80px;\\n    height: 80px; }\\n\"","import { Component, OnInit, Renderer2, OnDestroy } from '@angular/core';\r\nimport { MatSidenav, MatDrawer } from '@angular/material';\r\nimport { ObservableMedia } from '@angular/flex-layout';\r\nimport {\r\n  state,\r\n  trigger,\r\n  transition,\r\n  animate,\r\n  style,\r\n  group,\r\n  query\r\n} from '@angular/animations';\r\nimport { UsuariosService, BasicInfoUser } from './usuarios.service';\r\nimport {\r\n  RouterOutlet,\r\n  ActivatedRoute,\r\n  Route,\r\n  Router,\r\n  NavigationEnd\r\n} from '@angular/router';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { delay, filter } from 'rxjs/operators';\r\n\r\nexport const fadeAnimation = trigger('fadeAnimation', [\r\n  transition('* => *', [\r\n    query(':enter', [style({ opacity: 0 })], { optional: true }),\r\n    query(\r\n      ':leave',\r\n      [\r\n        style({ opacity: 1 }),\r\n        animate('0.2s ease-in-out', style({ opacity: 0 }))\r\n      ],\r\n      { optional: true }\r\n    ),\r\n    query(\r\n      ':enter',\r\n      [\r\n        style({ opacity: 0 }),\r\n        animate('0.2s ease-in-out', style({ opacity: 1 }))\r\n      ],\r\n      {\r\n        optional: true\r\n      }\r\n    )\r\n  ])\r\n]);\r\n\r\nconst PRINT = 'print';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  animations: [\r\n    trigger('darkness', [\r\n      transition('* => *', [\r\n        style({\r\n          opacity: 0.1\r\n        }),\r\n        animate('800ms cubic-bezier(.92,.78,.75,.99)')\r\n      ])\r\n    ]),\r\n    fadeAnimation\r\n  ]\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  _darkTheme: boolean;\r\n  isAdmin: Observable<boolean>;\r\n  subIAdmin$: Subscription;\r\n  private previusDark: boolean;\r\n  prevRoute: string;\r\n  user: BasicInfoUser;\r\n\r\n  // Declaracion de la propiedad darkTheme\r\n  set darkTheme(val: boolean) {\r\n    this._darkTheme = val;\r\n    localStorage.setItem('theme', val ? 'dark' : 'light');\r\n\r\n    if (val) {\r\n      this.render.removeClass(document.body, 'lt');\r\n    } else {\r\n      this.render.addClass(document.body, 'lt');\r\n    }\r\n  }\r\n  get darkTheme() {\r\n    return this.media.isActive(PRINT) ? false : this._darkTheme;\r\n  }\r\n\r\n  getState(outletRef: RouterOutlet) {\r\n    return {\r\n      value: outletRef.activatedRoute.snapshot.params.index\r\n    };\r\n  }\r\n\r\n  constructor(\r\n    private media: ObservableMedia,\r\n    private render: Renderer2,\r\n    public usuariosService: UsuariosService,\r\n    public route: Router\r\n  ) {\r\n    this.isAdmin = this.usuariosService.isAdmin();\r\n    this.route.events\r\n      .pipe(filter(e => e instanceof NavigationEnd))\r\n      .subscribe((u: NavigationEnd) => {\r\n        const parts = u.url.split('/');\r\n        let r: string = '';\r\n        for (let i = 0; i < parts.length - 1; i++) {\r\n          r += parts[i] === '' ? '' : '/' + parts[i];\r\n        }\r\n        this.prevRoute = r === '' ? '/' : r;\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.darkTheme = localStorage.getItem('theme') === 'dark' ? true : false;\r\n\r\n    if (!this.usuariosService.hasToken()) {\r\n      this.usuariosService.goToRoute('../login');\r\n    }\r\n\r\n    this.media.asObservable().subscribe(u => {\r\n      if (this.media.isActive(PRINT)) {\r\n        this.render.addClass(document.body, 'lt');\r\n        setTimeout(\r\n          () =>\r\n            (this.darkTheme =\r\n              localStorage.getItem('theme') === 'dark' ? true : false),\r\n          1\r\n        );\r\n      }\r\n    });\r\n\r\n    this.usuariosService.getUserInfo().subscribe(\r\n      u => (this.user = u),\r\n      () =>\r\n        (this.user = {\r\n          Nombre: 'Desconocido',\r\n          Email: '--',\r\n          EmailConfirmaed: false,\r\n          Roles: [],\r\n          Id: '0'\r\n        })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.subIAdmin$.unsubscribe();\r\n  }\r\n\r\n  sideNavOpend() {\r\n    return this.media.isActive('lt-md');\r\n  }\r\n\r\n  signOut() {\r\n    this.usuariosService.signOut();\r\n  }\r\n\r\n  OpenSideNav(drawer: MatSidenav) {\r\n    drawer.open();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, Inject, CUSTOM_ELEMENTS_SCHEMA, LOCALE_ID } from '@angular/core';\r\nimport {\r\n  APP_BASE_HREF,\r\n  HashLocationStrategy,\r\n  LocationStrategy,\r\n  registerLocaleData,\r\n} from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { CustomBreakPointsProvider } from './custom-breackpoints';\r\nimport localeMx from '@angular/common/locales/es-MX';\r\nimport { DeviceDetectorModule } from 'ngx-device-detector';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './/material.module';\r\nimport { TokenInterceptor } from './token-interceptor';\r\nimport { MatPaginatorIntlCro } from './mat-paginator-intl-cro';\r\nimport { MatPaginatorIntl } from '@angular/material';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UsuariosComponent } from './usuarios/usuarios.component';\r\nimport { CatalogosComponent } from './catalogos/catalogos.component';\r\nimport { AgregarUsuarioComponent } from './usuarios/agregar-usuario.component';\r\nimport { DialogComponent } from './dialog.component';\r\nimport { ManageRolesComponent } from './usuarios/manage-roles.component';\r\nimport { ClientesComponent } from './catalogos/clientes/clientes.component';\r\nimport { AddClienteComponent } from './catalogos/clientes/add-cliente.component';\r\nimport {\r\n  WrapInputsComponent,\r\n  WrapInputsContainerComponent,\r\n} from './common/wrap-inputs/wrap-inputs.component';\r\nimport { FamiliasMaterialesComponent } from './catalogos/familias-materiales/familias-materiales.component';\r\nimport { MyCardComponent } from './common/my-card/my-card.component';\r\nimport { AddEditFamiliaMaterialesComponent } from './catalogos/familias-materiales/add-edit-familia-materiales.component';\r\nimport { MovimientosFamiliasMaterialesComponent } from './catalogos/familias-materiales/movimientos-familias-materiales.component';\r\nimport { BottomActionsMyCardComponent } from './common/my-card/bottom-actions-my-card.component';\r\nimport { AddMovimientosFamiliasMaterialesComponent } from './catalogos/familias-materiales/add-movimientos-familias-materiales.component';\r\nimport { MaterialesComponent } from './catalogos/materiales/materiales.component';\r\nimport { AddEditMaterialComponent } from './catalogos/materiales/add-edit-material.component';\r\nimport { DetailMaterialComponent } from './catalogos/materiales/detail-material/detail-material.component';\r\nimport { ImpresorasComponent } from './catalogos/impresoras/impresoras.component';\r\nimport { DetailImpresoraComponent } from './catalogos/impresoras/detail-impresora/detail-impresora.component';\r\nimport { AddEditImpresoraComponent } from './catalogos/impresoras/add-edit-impresora/add-edit-impresora.component';\nimport { AddRodilloComponent } from './catalogos/impresoras/add-edit-impresora/add-rodillo.component';\nimport { AddConfigTintaComponent } from './catalogos/impresoras/add-edit-impresora/add-config-tinta.component';\nimport { InitialPageComponent } from './initial-page/initial-page.component';\r\n\r\nregisterLocaleData(localeMx, 'es-MX');\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    UsuariosComponent,\r\n    CatalogosComponent,\r\n    AgregarUsuarioComponent,\r\n    DialogComponent,\r\n    ManageRolesComponent,\r\n    ClientesComponent,\r\n    AddClienteComponent,\r\n    WrapInputsComponent,\r\n    WrapInputsContainerComponent,\r\n    FamiliasMaterialesComponent,\r\n    MyCardComponent,\r\n    AddEditFamiliaMaterialesComponent,\r\n    MovimientosFamiliasMaterialesComponent,\r\n    BottomActionsMyCardComponent,\r\n    AddMovimientosFamiliasMaterialesComponent,\r\n    MaterialesComponent,\r\n    AddEditMaterialComponent,\r\n    DetailMaterialComponent,\r\n    ImpresorasComponent,\r\n    DetailImpresoraComponent,\r\n    AddEditImpresoraComponent,\r\n    AddRodilloComponent,\r\n    AddConfigTintaComponent,\r\n    InitialPageComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    DeviceDetectorModule.forRoot()\r\n  ],\r\n  providers: [\r\n    CustomBreakPointsProvider,\r\n    { provide: LOCALE_ID, useValue: 'es-MX' },\r\n    { provide: APP_BASE_HREF, useValue: '/' },\r\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\r\n    { provide: MatPaginatorIntl, useClass: MatPaginatorIntlCro },\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    AgregarUsuarioComponent,\r\n    DialogComponent,\r\n    ManageRolesComponent,\r\n    AddClienteComponent,\r\n    AddEditFamiliaMaterialesComponent,\r\n    MovimientosFamiliasMaterialesComponent,\r\n    BottomActionsMyCardComponent,\r\n    AddMovimientosFamiliasMaterialesComponent,\r\n    AddEditMaterialComponent,\r\n    AddEditImpresoraComponent,\r\n    AddRodilloComponent,\r\n    AddConfigTintaComponent,\r\n  ],\r\n})\r\nexport class AppModule {\r\n  constructor(@Inject(APP_BASE_HREF) private baseHref: string) {\r\n    console.log(`El HREF base es : ${this.baseHref}.`);\r\n  }\r\n}\r\n","import { Injectable, Output, EventEmitter } from '@angular/core';\r\nimport {\r\n  HttpClient,\r\n  HttpParams,\r\n  HttpErrorResponse\r\n} from '../../node_modules/@angular/common/http';\r\nimport { UsuariosService } from './usuarios.service';\r\nimport { Observable, BehaviorSubject } from '../../node_modules/rxjs';\r\nimport { PageEvent, Sort } from '@angular/material';\r\n\r\nexport enum OrderTypes {\r\n  ASC,\r\n  DESC\r\n}\r\n\r\nexport const prefixApi: string = '/api/Catalogos/';\r\nexport const rEstadoCatalogos: string = 'EstadoCatalogos';\r\nexport const rClientes: string = 'Clientes';\r\nexport const ROUTE_FAMILIA_MATERIALES: string = 'familiasmateriales';\r\nexport const ROUTE_MOVIMIENTOS_PRECIO_FAMILIA_MATERIALES: string =\r\n  'familiasmateriales/mov';\r\nexport const ROUTE_MOVIMIENTOS_PRECIO_FAMILIA_MATERIALES_CHARTS: string =\r\n  'familiasmateriales/mov/chartdata';\r\nexport const ROUTE_MATERIALES: string = 'materiales';\r\n\r\nexport const ROUTE_IMPRESORAS: string = 'impresoras';\r\n\r\n//#region Interfaces\r\n\r\n/**\r\n * Descripcion de un Elemento en el menu de catalogos.\r\n */\r\nexport interface CatalogoMenuItem {\r\n  Nombre: string;\r\n  Icono: string;\r\n  Content?: string;\r\n  Route?: string;\r\n}\r\n\r\nexport class Column {\r\n  column: string;\r\n  text: string;\r\n  db: boolean;\r\n  sortable: boolean;\r\n  flex: string;\r\n  columnToShow: string;\r\n  type: string;\r\n\r\n  constructor(\r\n    column: string,\r\n    text: string,\r\n    options?: {\r\n      db?: boolean;\r\n      sortable?: boolean;\r\n      flex?: string;\r\n      columnToShow?: string;\r\n      type?: string;\r\n    }\r\n  ) {\r\n    const defaults_ = {\r\n      db: true,\r\n      sortable: true,\r\n      flex: '1 1 100%',\r\n      columnToShow: column,\r\n      type: 'default'\r\n    };\r\n    const options_ = Object.assign(defaults_, options);\r\n    this.column = column;\r\n    this.text = text;\r\n    this.db = options_.db;\r\n    this.flex = options_.flex;\r\n    this.sortable = options_.sortable;\r\n    this.columnToShow = options_.columnToShow;\r\n    this.type = options_.type;\r\n  }\r\n}\r\n\r\n/**\r\n * Interface con datos de paginacion y colecciones\r\n */\r\nexport interface ICatalogResponse<t> {\r\n  TotalCount: number;\r\n  TotalPages: number;\r\n  Items: t[];\r\n}\r\n\r\n/**\r\n * Interface para la entidad Ciente\r\n */\r\nexport interface ICliente {\r\n  Id?: number;\r\n  NombreCliente?: string;\r\n  ClaveCliente?: string;\r\n  NombreContacto?: string;\r\n  Telefono?: string;\r\n  Email?: string;\r\n  Domicilio?: string;\r\n  Ciudad?: string;\r\n  Estado?: string;\r\n  AgenteId?: number;\r\n  NombreEjecutivo?: string;\r\n}\r\n\r\nexport interface IFamiliasMateriales {\r\n  Id?: number;\r\n  NombreFamilia?: string;\r\n}\r\n\r\nexport enum UnidadesMaterial {\r\n  Micras,\r\n  CI\r\n}\r\n\r\nexport interface IMaterial {\r\n  Id?: number;\r\n  FamiliaMateriales_Id?: number;\r\n  Apariencia?: string;\r\n  Caracteristicas?: string;\r\n  Unidad?: UnidadesMaterial;\r\n  FactorDensidad?: number;\r\n  PrecioInicial?: number;\r\n  CostoInicial?: number;\r\n  Metalizado?: boolean;\r\n  Convenio?: boolean;\r\n  FechaRegistro?: Date;\r\n  FechaOperacion?: Date;\r\n  Calibres?: ICalibre[];\r\n  PrecioActual?: number;\r\n  NombreFamilia?: string;\r\n}\r\n\r\nexport interface ICalibre {\r\n  MaterialId: number;\r\n  Valor: number;\r\n}\r\n\r\nexport interface IImpresora {\r\n  Id?: number;\r\n  NombreMaquina?: string;\r\n  ModeloMaquina?: string;\r\n  CostoArranque?: number;\r\n  CostoTurno?: number;\r\n  PorcentajeDesperdicio?: number;\r\n  MinutosTurno?: number;\r\n  AnchoMinimoImpresion?: number;\r\n  AnchoMaximoImpresion?: number;\r\n  AnchoMinimoMaterial?: number;\r\n  AnchoMaximoMaterial?: number;\r\n  Velocidad?: number;\r\n  Decks?: number;\r\n  Linea_Id?: number;\r\n  LineaNombre?: string;\r\n\r\n  ConfiguracionTintas?: IConfigTintaMaquina[];\r\n  Rodillos?: IRodillo[];\r\n}\r\n\r\nexport interface IRodillo {\r\n  Id?: number;\r\n  Medida?: number;\r\n  Cantidad?: number;\r\n}\r\n\r\nexport interface IConfigTintaMaquina {\r\n  Cantidad?: number;\r\n  MinimoMetros?: number;\r\n}\r\n\r\nexport interface ILinea {\r\n  Id: number;\r\n  Nombre: string;\r\n  Responsable: string;\r\n  EmailResponsable: string;\r\n}\r\n\r\n/**\r\n * Interface de Paginacion\r\n */\r\nexport interface IPageConfig {\r\n  pageSize: number;\r\n  pageNumber: number;\r\n  orderType: OrderTypes;\r\n  orderBy: string;\r\n  query: string;\r\n}\r\n\r\n//#endregion\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CatalogosService {\r\n  @Output()\r\n  needRefresh: EventEmitter<any> = new EventEmitter(true);\r\n\r\n  @Output()\r\n  onHttpComplete: EventEmitter<string> = new EventEmitter(true);\r\n\r\n  @Output()\r\n  onHttpError: EventEmitter<HttpErrorResponse> = new EventEmitter(true);\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private usuariosService: UsuariosService\r\n  ) {}\r\n\r\n  /**\r\n   * Retorna el estado de los catalogos.\r\n   */\r\n  getStatus(): Promise<CatalogoMenuItem[]> {\r\n    return this.http\r\n      .get<CatalogoMenuItem[]>(`${prefixApi}${rEstadoCatalogos}`)\r\n      .toPromise();\r\n  }\r\n\r\n  /**\r\n   * Regresa parametros para los metodos GET de paginacion de colecciones.\r\n   * @param pageConfig Configuracion de paginacion\r\n   */\r\n  private getPageConfig(pageConfig: IPageConfig): HttpParams {\r\n    return new HttpParams({\r\n      fromObject: {\r\n        pageSize: pageConfig.pageSize.toString(),\r\n        pageNumber: pageConfig.pageNumber.toString(),\r\n        orderType: pageConfig.orderType.toString(),\r\n        orderBy: pageConfig.orderBy,\r\n        query: pageConfig.query ? pageConfig.query : '%'\r\n      }\r\n    });\r\n  }\r\n\r\n  private getEntityByIdConfig(Id: any): HttpParams {\r\n    return new HttpParams({ fromObject: { Id: Id.toString() } });\r\n  }\r\n\r\n  //#region ManagePaginator\r\n  /**\r\n   * Funcion de escucha para el evento de cambios en el paginador\r\n   * @param pageEvent Propiedades del evento del paginador\r\n   */\r\n  async emitPaginator(pageEvent: PageEvent, pagConfig: IPageConfig) {\r\n    pagConfig.pageSize = pageEvent.pageSize;\r\n    pagConfig.pageNumber = pageEvent.pageIndex + 1;\r\n    this.needRefresh.emit();\r\n  }\r\n\r\n  /**\r\n   *Funcion de escucha para el eventento de cambio de orden\r\n   * @param sort Propiedades del evento de ordenamiento\r\n   */\r\n  async emitSort(sort: Sort, pagConfig: IPageConfig) {\r\n    pagConfig.orderBy = sort.active;\r\n    pagConfig.orderType =\r\n      sort.direction === 'asc' ? OrderTypes.ASC : OrderTypes.DESC;\r\n    pagConfig.pageNumber = 1;\r\n    this.needRefresh.emit();\r\n  }\r\n  //#endregion\r\n\r\n  //#region Clientes\r\n\r\n  /**\r\n   * Regresa la coleccion de entidades Cliente y los datos de paginacion actuales.\r\n   * @param pageConfig Configuracion de la paginacion\r\n   */\r\n  getClientes(pageConfig: IPageConfig, allUsers: boolean) {\r\n    return this.http\r\n      .get<ICatalogResponse<ICliente>>(`${prefixApi}${rClientes}`, {\r\n        params: this.getPageConfig(pageConfig).append(\r\n          'allUsers',\r\n          String(allUsers)\r\n        )\r\n      })\r\n      .toPromise();\r\n  }\r\n\r\n  getCliente(Id: number) {\r\n    return this.http\r\n      .get<ICliente>(`${prefixApi}${rClientes}`, {\r\n        params: this.getEntityByIdConfig(Id)\r\n      })\r\n      .toPromise();\r\n  }\r\n\r\n  postCliente(cliente: ICliente): Observable<string> {\r\n    return this.http.post<string>(`${prefixApi}${rClientes}`, cliente);\r\n  }\r\n\r\n  putCliente(cliente: ICliente): Observable<string> {\r\n    return this.http.put<string>(`${prefixApi}${rClientes}`, cliente);\r\n  }\r\n\r\n  delCliente(Id: number): Observable<string> {\r\n    return this.http.delete<string>(`${prefixApi}${rClientes}`, {\r\n      params: this.getEntityByIdConfig(Id)\r\n    });\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region General Collections\r\n  getCollection<t>(pageConfig: IPageConfig, apiRoute: string) {\r\n    return this.http\r\n      .get<ICatalogResponse<t>>(`${prefixApi}${apiRoute}`, {\r\n        params: this.getPageConfig(pageConfig)\r\n      })\r\n      .toPromise();\r\n\r\n    /* pageSize: number;\r\npageNumber: number;\r\norderType: OrderTypes;\r\norderBy: string;\r\nquery: string; */\r\n  }\r\n\r\n  getAllCollection<t>(\r\n    apiRoute: string,\r\n    _orderType: OrderTypes = OrderTypes.ASC,\r\n    _orderBy: string = 'Id'\r\n  ) {\r\n    return this.http.get<ICatalogResponse<t>>(`${prefixApi}${apiRoute}`, {\r\n      params: this.getPageConfig({\r\n        pageSize: 4000000,\r\n        pageNumber: 1,\r\n        orderType: _orderType,\r\n        orderBy: _orderBy,\r\n        query: '%'\r\n      })\r\n    });\r\n  }\r\n\r\n  getCollectionsOfEntity(Id: number, apiRoute: string) {\r\n    return this.http.get<any>(`${prefixApi}${apiRoute}/${Id}`);\r\n  }\r\n\r\n  getEntity<t>(Id: number, apiRoute: string) {\r\n    return this.http\r\n      .get<t>(`${prefixApi}${apiRoute}`, {\r\n        params: this.getEntityByIdConfig(Id)\r\n      })\r\n      .toPromise();\r\n  }\r\n\r\n  postEntity<t>(entidad: t, apiRoute: string) {\r\n    return new Observable<string>(observer => {\r\n      this.http\r\n        .post<string>(`${prefixApi}${apiRoute}`, entidad)\r\n        .toPromise()\r\n        .then(u => {\r\n          observer.next(u);\r\n          this.onHttpComplete.emit(u);\r\n          observer.complete();\r\n        })\r\n        .catch((e: HttpErrorResponse) => {\r\n          observer.error(e);\r\n          this.onHttpError.emit(e);\r\n          observer.complete();\r\n        });\r\n    }).toPromise();\r\n  }\r\n  putEntity<t>(entidad: t, apiRoute: string) {\r\n    return new Observable<string>(observer => {\r\n      this.http\r\n        .put<string>(`${prefixApi}${apiRoute}`, entidad)\r\n        .toPromise()\r\n        .then(u => {\r\n          observer.next(u);\r\n          this.onHttpComplete.emit();\r\n          observer.complete();\r\n        })\r\n        .catch((e: HttpErrorResponse) => {\r\n          observer.error(e);\r\n          observer.complete();\r\n        });\r\n    }).toPromise();\r\n  }\r\n\r\n  delEntity(Id: number, apiRoute: string) {\r\n    return new Observable<string>(observer => {\r\n      this.http\r\n        .delete<string>(`${prefixApi}${apiRoute}`)\r\n        .toPromise()\r\n        .then(u => {\r\n          observer.next(u);\r\n          this.onHttpComplete.emit();\r\n          observer.complete();\r\n        })\r\n        .catch((e: HttpErrorResponse) => {\r\n          observer.error(e);\r\n          observer.complete();\r\n        });\r\n    }).toPromise();\r\n  }\r\n  //#endregion\r\n}\r\n","module.exports = \"<div fxLayoutGap=\\\"20px\\\" fxFlex=\\\"1 1 auto\\\" class=\\\"end-wrap-20\\\" fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center start\\\">\\r\\n  <mat-card *ngFor=\\\"let itm of Items\\\" fxLayout=\\\"column\\\" fxFlex=\\\"250px\\\" class=\\\"mat-card-outside-icon mat-elevation-z10\\\">\\r\\n    <div class=\\\"mat-card-icon bg-primary mat-elevation-z10\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n      <fa-icon [icon]=\\\"['fas', itm.Icono]\\\" [fixedWidth]=\\\"true\\\" size=\\\"3x\\\"></fa-icon>\\r\\n    </div>\\r\\n\\r\\n    <mat-card-header fxLayoutAlign=\\\"end center\\\">\\r\\n      <mat-card-title class=\\\"right\\\" style=\\\"font-size: 20px;\\\">{{itm.Nombre}}</mat-card-title>\\r\\n      <mat-card-subtitle class=\\\"right\\\">{{itm.Content}}</mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n    <span style=\\\"flex: 1 1 100%\\\"></span>\\r\\n    <mat-card-actions class=\\\"noprinted\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n      <button mat-raised-button color=\\\"accent\\\" [routerLink]=\\\"itm.Route\\\">Abrir Catalogo</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, HostBinding } from '@angular/core';\r\nimport { CatalogosService, CatalogoMenuItem } from '../catalogos.service';\r\n\r\n@Component({\r\n  selector: 'cat-catalogos.cc',\r\n  templateUrl: './catalogos.component.html',\r\n  styleUrls: ['./catalogos.component.scss']\r\n})\r\nexport class CatalogosComponent implements OnInit {\r\n  Items: CatalogoMenuItem[];\r\n  constructor(public catalogService: CatalogosService) { }\r\n\r\n  ngOnInit() {\r\n    this.RefreshCounters();\r\n  }\r\n\r\n  async RefreshCounters() {\r\n    this.Items = await this.catalogService.getStatus();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\r\nimport { ICliente, CatalogosService } from '../../catalogos.service';\r\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { DialogService } from '../../dialog.service';\r\nimport { DialogButtonsFlags, DialogIcons, DialogResults } from '../../dialog.component';\r\nimport { UsuariosService } from '../../usuarios.service';\r\nimport { ISelectOptions } from '../../common/wrap-inputs/wrap-inputs.component';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cat-add-cliente',\r\n  template: `\r\n    <!-- spinner -->\r\n    <div *ngIf=\"isLoading\" fxLayoutAlign=\"center center\" fxFlex=\"100%\">\r\n      <mat-spinner  color=\"accent\" diameter=\"80\"></mat-spinner>\r\n    </div>\r\n    <form  *ngIf=\"!isLoading\" fxFlex=\"100%\" style=\"position:relative;\" fxLayout=\"column\" [formGroup]=\"ClienteForm\" (ngSubmit)=\"onSubmit()\" >\r\n      <h2 mat-dialog-title>{{IsNew ? 'Agregar' : 'Editar'}} Cliente</h2>\r\n      <mat-divider class=\"dialog-divider\"></mat-divider>\r\n      <!-- Contenido del dialogo -->\r\n      <div mat-dialog-content fxLayout=\"column\" class=\"mat-typography\" style=\"min-height: 300px;\">\r\n        <!-- Form -->\r\n        <div *ngIf=\"!isLoading\"  fxLayout=\"column\" fxFlex=\"100%\">\r\n          <div fxLayout=\"column\">\r\n            <wrap-inputs [controls]=\"[{name:'ClaveCliente', text:'Clave', smflex:'100%'}]\" [fGroup]=\"ClienteForm\"></wrap-inputs>\r\n            <wrap-inputs [controls]=\"[{name:'NombreCliente', text:'Nombre', smflex:'100%'}]\" [fGroup]=\"ClienteForm\"></wrap-inputs>\r\n            <wrap-inputs [controls]=\"[{name:'NombreContacto', text:'Nombre del Contacto', smflex:'100%'}]\" [fGroup]=\"ClienteForm\"></wrap-inputs>\r\n            <wrap-inputs [controls]=\"[{name:'Telefono', text:'Telefono'},{name:'Email', text: 'Email'}]\" [fGroup]=\"ClienteForm\"></wrap-inputs>\r\n            <wrap-inputs [controls]=\"[{name: 'Domicilio', text:'Dirección', smflex:'100%'}]\" [fGroup]=\"ClienteForm\"></wrap-inputs>\r\n            <wrap-inputs [controls]=\"[{name: 'Ciudad', text: 'Ciudad'},{name:'Estado', text:'Estado'}]\" [fGroup]=\"ClienteForm\"></wrap-inputs>\r\n            <wrap-inputs *ngIf=\"isAdmin\" [controls]=\"[{\r\n              name:'AgenteId',\r\n              text:'Agente',\r\n              smflex:'100%',\r\n              type:'select',\r\n              selectOptions:agentes\r\n            }]\" [fGroup]=\"ClienteForm\">\r\n            </wrap-inputs>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div mat-dialog-actions fxLayout=\"row\" fxFlex=\"80px\" fxLayoutAlign=\"center center\">\r\n        <button type=\"submit\" mat-raised-button color=\"warn\">{{IsNew ? 'Guardar' : 'Actualizar'}}</button>\r\n      </div>\r\n      <!-- CloseButton -->\r\n      <button class=\"closeButton\" mat-dialog-close tabIndex=\"3\" color=\"warn\" mat-icon-button>\r\n          <mat-icon>close</mat-icon>\r\n      </button>\r\n    </form>\r\n  `,\r\n  styles: [],\r\n})\r\nexport class AddClienteComponent implements OnInit, OnDestroy {\r\n  Cliente: ICliente;\r\n  IdCliente_: number;\r\n  IsNew: boolean;\r\n  isLoading: boolean;\r\n  ClienteForm: FormGroup;\r\n  agentes: Array<ISelectOptions>;\r\n  getAgentes$: Subscription;\r\n  isAsmin$: Subscription;\r\n  isAdmin: boolean;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddClienteComponent, DialogResults>,\r\n    @Inject(MAT_DIALOG_DATA) public data: number,\r\n    private catalogosService: CatalogosService,\r\n    private dialogService: DialogService,\r\n    private fb: FormBuilder,\r\n    private usuariosService: UsuariosService\r\n  ) {\r\n    this.IdCliente_ = data;\r\n    this.IsNew = data ? false : true;\r\n    this.isLoading = !this.IsNew;\r\n\r\n    this.isAsmin$ = this.usuariosService.isAdmin().subscribe(val => {\r\n      this.isAdmin = val;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.getAgentes$.unsubscribe();\r\n    this.isAsmin$.unsubscribe();\r\n  }\r\n  ngOnInit() {\r\n    this.createForm();\r\n\r\n    this.getAgentes$ = this.usuariosService.GetUsers().subscribe(\r\n      users => {\r\n        this.agentes = new Array<ISelectOptions>();\r\n        users.forEach(v => {\r\n          this.agentes.push({ display: v.Nombre, value: v.Id });\r\n        });\r\n        if (this.ClienteForm) {\r\n          this.isLoading = false;\r\n        }\r\n      },\r\n      err => {\r\n        this.agentes = new Array<ISelectOptions>({\r\n          display: 'Ninguno',\r\n          value: 0,\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  async onSubmit() {\r\n    if (this.ClienteForm.valid) {\r\n      this.isLoading = true;\r\n      const c = () => (this.isLoading = false);\r\n\r\n      if (this.IsNew) {\r\n        this.catalogosService.postCliente(this.ClienteForm.value).subscribe(\r\n          success =>\r\n            this.dialogService\r\n              .showDialog('Correcto...', success, {\r\n                Icon: DialogIcons.Success,\r\n              })\r\n              .then(() => this.dialogRef.close(DialogResults.Ok)),\r\n          error =>\r\n            this.dialogService\r\n              .showDialog('Error!!', this.dialogService.getModelError(error), {\r\n                buttons: DialogButtonsFlags.Ok,\r\n                Icon: DialogIcons.Error,\r\n              })\r\n              .then(c),\r\n          c\r\n        );\r\n      } else {\r\n        this.catalogosService.putCliente(this.ClienteForm.value).subscribe(\r\n          success =>\r\n            this.dialogService\r\n              .showDialog('Correcto...', success, {\r\n                Icon: DialogIcons.Success,\r\n              })\r\n              .then(() => this.dialogRef.close(DialogResults.Ok)),\r\n          error =>\r\n            this.dialogService\r\n              .showDialog('Error!!', this.dialogService.getModelError(error), {\r\n                buttons: DialogButtonsFlags.Ok,\r\n                Icon: DialogIcons.Error,\r\n              })\r\n              .then(c),\r\n          c\r\n        );\r\n      }\r\n    } else {\r\n      this.dialogService.showDialog(\r\n        'Error!!',\r\n        'Por Favor, complete correctamente los campos del formulario',\r\n        { buttons: DialogButtonsFlags.Ok, Icon: DialogIcons.Error }\r\n      );\r\n    }\r\n  }\r\n\r\n  async createForm() {\r\n    const MyId: number = +sessionStorage.getItem('userId');\r\n    this.Cliente = this.IdCliente_\r\n      ? await this.catalogosService.getCliente(this.IdCliente_)\r\n      : {\r\n          ClaveCliente: '',\r\n          NombreCliente: '',\r\n          NombreContacto: '',\r\n          Telefono: '',\r\n          Email: '',\r\n          Domicilio: '',\r\n          Ciudad: '',\r\n          Estado: '',\r\n          AgenteId: MyId,\r\n          NombreEjecutivo: '',\r\n        };\r\n\r\n    this.ClienteForm = this.fb.group({\r\n      ClaveCliente: [\r\n        this.Cliente.ClaveCliente,\r\n        [Validators.required, Validators.pattern('[0-9A-Za-z-]{6,}')],\r\n      ],\r\n      NombreCliente: [this.Cliente.NombreCliente, Validators.required],\r\n      NombreContacto: [this.Cliente.NombreContacto, Validators.required],\r\n      Telefono: [this.Cliente.Telefono, Validators.pattern('[0-9+]{0,3}[0-9]{3,3}[0-9]{7,7}')],\r\n      Email: [this.Cliente.Email, Validators.email],\r\n      Domicilio: [this.Cliente.Domicilio],\r\n      Ciudad: [this.Cliente.Ciudad],\r\n      Estado: [this.Cliente.Estado],\r\n      AgenteId: [this.Cliente.AgenteId],\r\n      Id: [this.Cliente.Id],\r\n    });\r\n\r\n    if (this.agentes) {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"outlet-content\\\">\\r\\n  <my-card CardColor=\\\"primary\\\" [Titulo]=\\\"'Clientes'\\\" [Descripcion]=\\\"'Se muestran los clientes disponibles en la base de datos'\\\"\\r\\n    Icono=\\\"users\\\" [ShowPrint]=\\\"true\\\" [HasFontawesomeIcon]=\\\"true\\\" [ShowAdd]=\\\"true\\\" (ClickAdd)=\\\"add()\\\">\\r\\n\\r\\n    <div my-card-body fxLayout=\\\"row\\\" style=\\\"padding: 10px;\\\">\\r\\n      <div class=\\\"noprinted\\\">\\r\\n        <span fxFlex=\\\"30px\\\"></span>\\r\\n        <mat-form-field>\\r\\n          <input name=\\\"search\\\" type=\\\"text\\\" matInput placeholder=\\\"Buscar\\\" [formControl]=\\\"searchControl\\\">\\r\\n          <mat-icon matSuffix>search</mat-icon>\\r\\n        </mat-form-field>\\r\\n        <mat-checkbox style=\\\"margin-left: 20px;\\\" [(ngModel)]=\\\"searchAll\\\" (change)=\\\"getClientesPage()\\\">Todos</mat-checkbox>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div my-card-content class=\\\"autoOverflow\\\">\\r\\n\\r\\n      <mat-table [dataSource]=\\\"clientes\\\" style=\\\"min-width: 800px;\\\" matSort (matSortChange)=\\\"emitSort($event)\\\">\\r\\n        <ng-container matColumnDef=\\\"ClaveCliente\\\">\\r\\n          <mat-header-cell *matHeaderCellDef fxFlex=\\\"100px\\\" mat-sort-header> Clave </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let row\\\" fxFlex=\\\"100px\\\"> {{row.ClaveCliente}} </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"NombreCliente\\\">\\r\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Nombre </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.NombreCliente}} </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"AgenteId\\\">\\r\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Agente </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let row\\\"><span [ngClass]=\\\"{'orange-700-fg' : row.AgenteId !== usuariosService.getUserId(), 'green-700-fg': row.AgenteId === usuariosService.getUserId()}\\\">{{row.NombreEjecutivo}}</span>\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"NombreContacto\\\">\\r\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Nombre del Contacto </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let row\\\"> {{row.NombreContacto}} </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"ActionsContact\\\">\\r\\n          <mat-header-cell class=\\\"noprinted\\\" *matHeaderCellDef fxFlex=\\\"140px\\\"> Contacto </mat-header-cell>\\r\\n          <mat-cell class=\\\"noprinted\\\" *matCellDef=\\\"let row\\\" fxFlex=\\\"140px\\\">\\r\\n            <a mat-icon-button color=\\\"warn\\\" [href]=\\\"'tel:'+row.Telefono\\\">\\r\\n              <mat-icon>phone</mat-icon>\\r\\n            </a>\\r\\n            <a mat-icon-button color=\\\"accent\\\" [href]=\\\"'mailto:'+row.Email\\\">\\r\\n              <mat-icon>mail</mat-icon>\\r\\n            </a>\\r\\n            <a mat-icon-button class=\\\"pink-fg\\\" target=\\\"_blank\\\" [href]=\\\"getURLLocation(row)\\\">\\r\\n              <mat-icon>location_on</mat-icon>\\r\\n            </a>\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"ActionEdit\\\">\\r\\n          <mat-header-cell class=\\\"noprinted\\\" *matHeaderCellDef fxFlex=\\\"100px\\\"> Acciones </mat-header-cell>\\r\\n          <mat-cell class=\\\"noprinted\\\" *matCellDef=\\\"let row\\\" fxFlex=\\\"100px\\\">\\r\\n            <ng-container *ngIf=\\\"!isAdmin && row.AgenteId !== usuariosService.getUserId()\\\">\\r\\n              <div fxLayout=\\\"row\\\" fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                <mat-icon color=\\\"warn\\\">block</mat-icon>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n            <ng-container *ngIf=\\\"isAdmin || row.AgenteId === usuariosService.getUserId()\\\">\\r\\n              <button class=\\\"blue-700-fg\\\" mat-icon-button (click)=\\\"edit(row.Id)\\\">\\r\\n                <mat-icon>edit</mat-icon>\\r\\n              </button>\\r\\n              <button class=\\\"red-700-fg\\\" mat-icon-button (click)=\\\"delete(row.Id)\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n              </button>\\r\\n            </ng-container>\\r\\n\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <mat-header-row *matHeaderRowDef=\\\"columsToView()\\\"></mat-header-row>\\r\\n        <mat-row *matRowDef=\\\"let row; columns: columsToView();\\\"></mat-row>\\r\\n      </mat-table>\\r\\n      <mat-progress-bar color=\\\"accent\\\" *ngIf=\\\"loading\\\" mode=\\\"query\\\"></mat-progress-bar>\\r\\n    </div>\\r\\n    <div my-card-footer>\\r\\n      <mat-paginator [length]=\\\"clientesPage.TotalCount\\\" [pageIndex]=\\\"pagConfig.pageNumber - 1\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[10,25,50,75,100]\\\"\\r\\n        (page)=\\\"emitPaginator($event)\\\">\\r\\n      </mat-paginator>\\r\\n    </div>\\r\\n  </my-card>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  ICatalogResponse,\r\n  ICliente,\r\n  IPageConfig,\r\n  CatalogosService,\r\n  OrderTypes,\r\n} from '../../catalogos.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialog, PageEvent, Sort } from '@angular/material';\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { AddClienteComponent } from './add-cliente.component';\r\nimport { HttpParams } from '../../../../node_modules/@angular/common/http';\r\nimport { DialogService } from '../../dialog.service';\r\nimport { DialogButtonsFlags, DialogIcons, DialogResults } from '../../dialog.component';\r\nimport { UsuariosService } from '../../usuarios.service';\r\nimport { Subscription, Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cat-clientes.cc',\r\n  templateUrl: './clientes.component.html',\r\n  styleUrls: ['./clientes.component.scss'],\r\n})\r\nexport class ClientesComponent implements OnInit, OnDestroy {\r\n  clientesPage: ICatalogResponse<ICliente> = {\r\n    TotalCount: 0,\r\n    TotalPages: 0,\r\n    Items: null,\r\n  };\r\n  clientes: ICliente[] = new Array<ICliente>();\r\n  pagConfig: IPageConfig;\r\n  searchControl: FormControl = new FormControl('');\r\n  searchAll: boolean = false;\r\n  loading: boolean = false;\r\n  isAdmin: boolean = true;\r\n  subIsAdmin$: Subscription;\r\n\r\n  constructor(\r\n    private catalogosService: CatalogosService,\r\n    private dialog: MatDialog,\r\n    private dialogServices: DialogService,\r\n    public usuariosService: UsuariosService\r\n  ) {\r\n    this.pagConfig = {\r\n      pageSize: 10,\r\n      pageNumber: 1,\r\n      orderType: OrderTypes.ASC,\r\n      orderBy: 'Id',\r\n      query: '',\r\n    };\r\n\r\n    this.searchControl.valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe(query => {\r\n        this.pagConfig.query = query;\r\n        this.pagConfig.pageNumber = 1;\r\n        this.getClientesPage();\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subIsAdmin$ = this.usuariosService.isAdmin().subscribe(o => {\r\n      this.isAdmin = o;\r\n      this.searchAll = o;\r\n      this.getClientesPage();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subIsAdmin$.unsubscribe();\r\n  }\r\n\r\n  columsToView(): string[] {\r\n    if (this.isAdmin || this.searchAll) {\r\n      return [\r\n        'ClaveCliente',\r\n        'NombreCliente',\r\n        'AgenteId',\r\n        'NombreContacto',\r\n        'ActionsContact',\r\n        'ActionEdit',\r\n      ];\r\n    } else {\r\n      return ['ClaveCliente', 'NombreCliente', 'NombreContacto', 'ActionsContact', 'ActionEdit'];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Solicita la informacion al servicio.\r\n   */\r\n  async getClientesPage() {\r\n    this.loading = true;\r\n    this.catalogosService.getClientes(this.pagConfig, this.searchAll).then(o => {\r\n      this.clientesPage = o;\r\n      this.clientes = o.Items;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Funcion de escucha para el evento de cambios en el paginador\r\n   * @param pageEvent Propiedades del evento del paginador\r\n   */\r\n  async emitPaginator(pageEvent: PageEvent) {\r\n    this.pagConfig.pageSize = pageEvent.pageSize;\r\n    this.pagConfig.pageNumber = pageEvent.pageIndex + 1;\r\n    this.getClientesPage();\r\n  }\r\n\r\n  /**\r\n   *Funcion de escucha para el eventento de cambio de orden\r\n   * @param sort Propiedades del evento de ordenamiento\r\n   */\r\n  async emitSort(sort: Sort) {\r\n    this.pagConfig.orderBy = sort.active;\r\n    this.pagConfig.orderType = sort.direction === 'asc' ? OrderTypes.ASC : OrderTypes.DESC;\r\n    this.pagConfig.pageNumber = 1;\r\n    this.getClientesPage();\r\n  }\r\n\r\n  /**\r\n   * Muestra el cuadro de dialogo para agregar\r\n   */\r\n  add() {\r\n    const ref = this.dialog.open<AddClienteComponent, any, DialogResults>(AddClienteComponent, {\r\n      disableClose: true,\r\n      width: '450px',\r\n    });\r\n    ref.afterClosed().subscribe(m => {\r\n      if (m === DialogResults.Ok) {\r\n        this.getClientesPage();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Muestra el cuadro de dialogo para editar\r\n   */\r\n  edit(id: number) {\r\n    const ref = this.dialog.open<AddClienteComponent, number, DialogResults>(AddClienteComponent, {\r\n      disableClose: true,\r\n      data: id,\r\n      width: '450px',\r\n    });\r\n    ref.afterClosed().subscribe(m => {\r\n      if (m === DialogResults.Ok) {\r\n        this.getClientesPage();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Elimina un cliente la Base de Datos.\r\n   * @param id Id del cliente que se eliminara\r\n   */\r\n  delete(id: number) {\r\n    this.dialogServices\r\n      .showDialog('Eliminar!!', 'Realmente desea Eliminar al cliente?', {\r\n        buttons: DialogButtonsFlags.Yes | DialogButtonsFlags.No,\r\n        Icon: DialogIcons.Question,\r\n      })\r\n      .then(r => {\r\n        if (r === DialogResults.Yes) {\r\n          this.catalogosService\r\n            .delCliente(id)\r\n            .toPromise()\r\n            .then(v =>\r\n              this.dialogServices\r\n                .showDialog('Correcto!!', v, { Icon: DialogIcons.Success })\r\n                .then(() => this.getClientesPage())\r\n            )\r\n            .catch(e =>\r\n              this.dialogServices.showDialog('Error!!', e, {\r\n                Icon: DialogIcons.Error,\r\n              })\r\n            );\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Devuelve la url de busqueda de la direccion del cliente en google maps\r\n   * @param v Cliente del que se obtendra la informacion\r\n   */\r\n  getURLLocation(v: ICliente): string {\r\n    return `https://www.google.com/maps/search/?${new HttpParams()\r\n      .set('api', '1')\r\n      .set('query', `${v.Domicilio}, ${v.Ciudad}, ${v.Estado}`)\r\n      .toString()}`;\r\n  }\r\n}\r\n","import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { DialogResults, DialogIcons } from '../../dialog.component';\nimport {\n  CatalogosService,\n  IFamiliasMateriales,\n  ROUTE_FAMILIA_MATERIALES,\n} from '../../catalogos.service';\nimport { DialogService } from '../../dialog.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UsuariosService } from '../../usuarios.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-add-edit-familia-materiales',\n  template: `\n    <!-- spinner -->\n    <div *ngIf=\"isLoading\" fxLayoutAlign=\"center center\" fxFlex=\"100%\">\n      <mat-spinner  color=\"accent\" diameter=\"80\"></mat-spinner>\n    </div>\n    <form  *ngIf=\"!isLoading\" fxFlex=\"100%\" style=\"position:relative;\" fxLayout=\"column\"\n    [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" >\n      <h2 mat-dialog-title>{{isNew ? 'Agregar' : 'Editar'}} Cliente</h2>\n      <mat-divider class=\"dialog-divider\"></mat-divider>\n\n      <!-- Contenido del dialogo -->\n      <div mat-dialog-content fxLayout=\"column\" class=\"mat-typography\">\n\n        <!-- Form -->\n        <div *ngIf=\"!isLoading\"  fxLayout=\"column\" fxFlex=\"100%\">\n          <div fxLayout=\"column\">\n            <wrap-inputs [controls]=\"[{name:'NombreFamilia', text:'Nombre', smflex:'100%'}]\" [fGroup]=\"form\"></wrap-inputs>\n          </div>\n        </div>\n      </div>\n\n      <div mat-dialog-actions fxLayout=\"row\" fxFlex=\"80px\" fxLayoutAlign=\"center center\">\n        <button type=\"submit\" mat-raised-button color=\"warn\">{{isNew ? 'Guardar' : 'Actualizar'}}</button>\n      </div>\n\n      <!-- CloseButton -->\n      <button class=\"closeButton\" mat-dialog-close tabIndex=\"3\" color=\"warn\" mat-icon-button>\n          <mat-icon>close</mat-icon>\n      </button>\n    </form>\n  `,\n  styles: [],\n})\nexport class AddEditFamiliaMaterialesComponent implements OnInit, OnDestroy {\n  entidad: IFamiliasMateriales;\n  idEntity: number;\n  isNew: boolean;\n  isLoading: boolean;\n  form: FormGroup;\n\n  onSuccess$: Subscription;\n  onError$: Subscription;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddEditFamiliaMaterialesComponent, DialogResults>,\n    @Inject(MAT_DIALOG_DATA) public data: number,\n    private catalogosService: CatalogosService,\n    private dialogService: DialogService,\n    private fb: FormBuilder,\n    private usuariosService: UsuariosService\n  ) {\n    this.idEntity = data;\n    this.isNew = data ? false : true;\n    this.isLoading = !this.isNew;\n  }\n  ngOnInit() {\n    this.onSuccess$ = this.catalogosService.onHttpComplete.pipe().subscribe(o => {\n      this.dialogService\n        .showDialog('Correcto...', o, { Icon: DialogIcons.Success })\n        .then(() => this.dialogRef.close(DialogResults.Ok));\n    });\n\n    this.onError$ = this.catalogosService.onHttpError.pipe().subscribe(e => {\n      this.dialogService\n        .showDialog('Error...', this.dialogService.getModelError(e), {\n          Icon: DialogIcons.Error,\n        })\n        .then(() => (this.isLoading = false));\n    });\n\n    this.createForm();\n  }\n  ngOnDestroy() {\n    this.onSuccess$.unsubscribe();\n    this.onError$.unsubscribe();\n  }\n\n  async createForm() {\n    this.entidad = this.idEntity\n      ? await this.catalogosService.getEntity<IFamiliasMateriales>(\n          this.idEntity,\n          ROUTE_FAMILIA_MATERIALES\n        )\n      : { NombreFamilia: '' };\n\n    this.form = this.fb.group({\n      Id: [this.entidad.Id],\n      NombreFamilia: [this.entidad.NombreFamilia, Validators.required],\n    });\n\n    this.isLoading = false;\n  }\n\n  async onSubmit() {\n    if (this.form.valid) {\n      this.isLoading = true;\n\n      if (this.isNew) {\n        this.catalogosService.postEntity(this.form.value, ROUTE_FAMILIA_MATERIALES);\n      } else {\n        this.catalogosService.putEntity(this.form.value, ROUTE_FAMILIA_MATERIALES);\n      }\n    }\n  }\n}\n","import { Component, OnInit, OnDestroy, Inject } from '@angular/core';\nimport { DialogResults, DialogIcons } from '../../dialog.component';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport {\n  CatalogosService,\n  ROUTE_MOVIMIENTOS_PRECIO_FAMILIA_MATERIALES,\n} from '../../catalogos.service';\nimport { DialogService } from '../../dialog.service';\nimport {\n  FormBuilder,\n  FormGroup,\n  Validators,\n  ValidatorFn,\n  AbstractControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cat-add-movimientos-familias-materiales',\n  template: `\n    <!-- spinner -->\n    <div *ngIf=\"isLoading\" fxLayoutAlign=\"center center\" fxFlex=\"100%\">\n      <mat-spinner  color=\"accent\" diameter=\"80\"></mat-spinner>\n    </div>\n    <!-- Formulario -->\n    <form *ngIf=\"!isLoading\" fxFlex=\"100%\" style=\"position:relative;\" fxLayout=\"column\"\n      [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n\n      <h2 mat-dialog-title>Agregar Movimiento</h2>\n      <mat-divider class=\"dialog-divider\"></mat-divider>\n\n      <div mat-dialog-content fxLayout=\"column\" class=\"mat-typography\">\n        <div fxLayout=\"column\">\n\n          <wrap-inputs [controls]=\"[{name:'FechaOperacion', type:'date', min:now, text:'Fecha de Operacion', smflex:'100%'}]\" [fGroup]=\"form\"></wrap-inputs>\n          <wrap-inputs [controls]=\"[{name:'Valor', type:'number', text:'Incremento/Decremento', smflex:'100%'}]\" [fGroup]=\"form\"></wrap-inputs>\n\n        </div>\n      </div>\n\n      <div mat-dialog-actions fxLayout=\"row\" fxFlex=\"80px\" fxLayoutAlign=\"center center\">\n        <button type=\"submit\" mat-raised-button color=\"warn\">Guardar</button>\n      </div>\n\n      <!-- CloseButton -->\n      <button class=\"closeButton\" mat-dialog-close tabIndex=\"3\" color=\"warn\" mat-icon-button>\n        <mat-icon>close</mat-icon>\n      </button>\n    </form>\n  `,\n  styles: [],\n})\nexport class AddMovimientosFamiliasMaterialesComponent implements OnInit, OnDestroy {\n  form: FormGroup;\n  isLoading: boolean = false;\n  now = new Date(Date.now());\n\n  onSuccess$: Subscription;\n  onError$: Subscription;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddMovimientosFamiliasMaterialesComponent, DialogResults>,\n    @Inject(MAT_DIALOG_DATA) public data: number,\n    private catalogosService: CatalogosService,\n    private dialogService: DialogService,\n    private fb: FormBuilder\n  ) {\n    this.onSuccess$ = this.catalogosService.onHttpComplete.pipe().subscribe(o => {\n      this.dialogService\n        .showDialog('Correcto...', o, { Icon: DialogIcons.Success })\n        .then(() => this.dialogRef.close(DialogResults.Ok));\n    });\n\n    this.onError$ = this.catalogosService.onHttpError.pipe().subscribe(e => {\n      this.dialogService\n        .showDialog('Error...', this.dialogService.getModelError(e), {\n          Icon: DialogIcons.Error,\n        })\n        .then(() => (this.isLoading = false));\n    });\n\n    this.createForm();\n  }\n\n  ngOnInit() {}\n  ngOnDestroy() {\n    this.onSuccess$.unsubscribe();\n    this.onError$.unsubscribe();\n  }\n\n  async createForm() {\n    this.form = this.fb.group({\n      Valor: ['', [Validators.required]],\n      FechaOperacion: ['', [Validators.required, Validators.min(Date.now())]],\n      FamiliaMateriales_Id: [this.data],\n    });\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.isLoading = true;\n      this.catalogosService.postEntity(\n        this.form.value,\n        ROUTE_MOVIMIENTOS_PRECIO_FAMILIA_MATERIALES\n      );\n    }\n  }\n}\n","module.exports = \"<div class=\\\"outlet-content\\\">\\n  <my-card CardColor=\\\"primary\\\" [Titulo]=\\\"'Familias de Materiales'\\\" [Descripcion]=\\\"'Se muestran las familias de materiales disponibles en la base de datos'\\\"\\n    Icono=\\\"object-group\\\" [HasFontawesomeIcon]=\\\"true\\\" [ShowMore]=\\\"isAdmin ? true : false\\\" [ShowPrint]=\\\"true\\\" [ShowAdd]=\\\"isAdmin ? true : false\\\"\\n    (ClickAdd)=\\\"AddOrEdit()\\\">\\n\\n    <div my-card-content style=\\\"overflow: auto;\\\">\\n\\n      <mat-table [dataSource]=\\\"catalogPage.Items\\\" matSort (matSortChange)=\\\"catalogosService.emitSort($event, this.pagConfig);\\\">\\n\\n        <!-- Crea las columnas con datos desde el servidor -->\\n        <ng-container *ngFor=\\\"let column of columsToView()\\\">\\n\\n          <ng-container *ngIf=\\\"column.db && !column.sortable\\\" matColumnDef=\\\"{{column.column}}\\\">\\n            <mat-header-cell *matHeaderCellDef [fxFlex]=\\\"column.flex\\\"> {{column.text}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" [fxFlex]=\\\"column.flex\\\"> {{element[column.column]}}</mat-cell>\\n          </ng-container>\\n\\n          <ng-container *ngIf=\\\"column.db && column.sortable\\\" matColumnDef=\\\"{{column.column}}\\\">\\n            <mat-header-cell mat-sort-header *matHeaderCellDef [fxFlex]=\\\"column.flex\\\"> {{column.text}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" [fxFlex]=\\\"column.flex\\\"> {{element[column.column]}}</mat-cell>\\n          </ng-container>\\n\\n        </ng-container>\\n\\n        <!-- Control de acciones -->\\n        <ng-container matColumnDef=\\\"ActionEdit\\\">\\n          <mat-header-cell class=\\\"noprinted\\\" *matHeaderCellDef fxFlex=\\\"100px\\\"> Acciones </mat-header-cell>\\n          <mat-cell class=\\\"noprinted\\\" *matCellDef=\\\"let row\\\" fxFlex=\\\"100px\\\">\\n\\n            <ng-container *ngIf=\\\"!isAdmin\\\">\\n              <div fxLayout=\\\"row\\\" fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"center center\\\">\\n                <mat-icon color=\\\"warn\\\">block</mat-icon>\\n              </div>\\n            </ng-container>\\n\\n            <ng-container *ngIf=\\\"isAdmin\\\">\\n              <button class=\\\"orange-fg\\\" mat-icon-button (click)=\\\"AddOrEdit(row.Id)\\\">\\n                <mat-icon>edit</mat-icon>\\n              </button>\\n              <button class=\\\"green-800-fg\\\" mat-icon-button (click)=\\\"viewMovesToPrice(row.Id)\\\">\\n                <mat-icon>monetization_on</mat-icon>\\n              </button>\\n            </ng-container>\\n\\n          </mat-cell>\\n        </ng-container>\\n\\n        <!-- Definicion de filas y columnas -->\\n        <mat-header-row *matHeaderRowDef=\\\"columns()\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: columns();\\\"></mat-row>\\n      </mat-table>\\n      <mat-progress-bar color=\\\"accent\\\" *ngIf=\\\"isLoading\\\" mode=\\\"query\\\"></mat-progress-bar>\\n    </div>\\n\\n    <div my-card-footer>\\n      <mat-paginator [length]=\\\"catalogPage.TotalCount\\\" [pageIndex]=\\\"pagConfig.pageNumber - 1\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[10,25,50,75,100]\\\"\\n        (page)=\\\"catalogosService.emitPaginator($event, pagConfig)\\\">\\n      </mat-paginator>\\n    </div>\\n  </my-card>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  CatalogosService,\n  ICatalogResponse,\n  IPageConfig,\n  OrderTypes,\n  Column,\n  ROUTE_FAMILIA_MATERIALES,\n  IFamiliasMateriales,\n} from '../../catalogos.service';\nimport { UsuariosService } from '../../usuarios.service';\nimport { MatDialog } from '@angular/material';\nimport { AddEditFamiliaMaterialesComponent } from './add-edit-familia-materiales.component';\nimport { DialogResults, DialogButtonsFlags, DialogIcons } from '../../dialog.component';\nimport { DialogService } from '../../dialog.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { MovimientosFamiliasMaterialesComponent } from './movimientos-familias-materiales.component';\n\n@Component({\n  selector: 'cat-familias-materiales.cc',\n  templateUrl: './familias-materiales.component.html',\n  styleUrls: ['./familias-materiales.component.scss'],\n})\nexport class FamiliasMaterialesComponent implements OnInit, OnDestroy {\n  /**\n   * Contenido del Catalogo\n   */\n  catalogPage: ICatalogResponse<IFamiliasMateriales> = {\n    TotalCount: 0,\n    TotalPages: 0,\n    Items: null,\n  };\n\n  /**\n   * Configuracion del Paginador\n   */\n  pagConfig: IPageConfig = {\n    pageSize: 10,\n    pageNumber: 1,\n    orderType: OrderTypes.ASC,\n    orderBy: 'Id',\n    query: '',\n  };\n\n  isLoading: boolean = false;\n  isAdmin: boolean = false;\n  needRefresh$: Subscription;\n  subIsAdmin$: Subscription;\n\n  /**\n   * Constructor del componente\n   * @param catalogosService\n   * @param usuariosService\n   */\n  constructor(\n    public catalogosService: CatalogosService,\n    private usuariosService: UsuariosService,\n    private dialog: MatDialog,\n    private dialogService: DialogService\n  ) {\n    this.needRefresh$ = this.catalogosService.needRefresh.subscribe(p => {\n      this.fillCatalog();\n    });\n\n    this.subIsAdmin$ = this.usuariosService.isAdmin().subscribe(o => {\n      this.isAdmin = o;\n      this.fillCatalog();\n    });\n  }\n\n  ngOnInit() {}\n  ngOnDestroy() {\n    this.subIsAdmin$.unsubscribe();\n    this.needRefresh$.unsubscribe();\n  }\n\n  /**\n   * Llena el catalogo\n   */\n  async fillCatalog() {\n    this.isLoading = true;\n    this.catalogPage = await this.catalogosService.getCollection<IFamiliasMateriales>(\n      this.pagConfig,\n      ROUTE_FAMILIA_MATERIALES\n    );\n    this.isLoading = false;\n  }\n\n  /**\n   * Define la coleccion de las columnas\n   */\n  columsToView(): Column[] {\n    return [\n      // new Column('Id', 'Id', { flex: '100px' }),\n      new Column('NombreFamilia', 'Nombre de la Familia'),\n      new Column('ActionEdit', 'Acciones', { sortable: false, db: false }),\n    ];\n  }\n\n  /**\n   * Regresa el nombre de las columnas a mostrar\n   */\n  columns() {\n    return this.columsToView().map(p => p.column);\n  }\n\n  AddOrEdit(Id: number = null) {\n    this.dialog\n      .open<AddEditFamiliaMaterialesComponent, number, DialogResults>(\n        AddEditFamiliaMaterialesComponent,\n        {\n          disableClose: true,\n          data: Id,\n          width: '450px',\n        }\n      )\n      .afterClosed()\n      .toPromise()\n      .then(m => {\n        if (m === DialogResults.Ok) {\n          this.fillCatalog();\n        }\n      });\n  }\n\n  viewMovesToPrice(id: number) {\n    this.dialog.open<MovimientosFamiliasMaterialesComponent, number, DialogResults>(\n      MovimientosFamiliasMaterialesComponent,\n      {\n        data: id,\n        disableClose: true,\n        width: '100%',\n        height: '100%',\n        maxWidth: '100vw',\n        maxHeight: '100vh',\n      }\n    );\n  }\n\n  delete(id: number) {\n    this.dialogService\n      .showDialog('Eliminar!!', 'Realmente desea Eliminar al cliente?', {\n        buttons: DialogButtonsFlags.Yes | DialogButtonsFlags.No,\n        Icon: DialogIcons.Question,\n      })\n      .then(r => {\n        if (r === DialogResults.Yes) {\n          this.catalogosService.delEntity(id, ROUTE_FAMILIA_MATERIALES);\n        }\n      });\n  }\n}\n","module.exports = \"<div fxFlex=\\\"100%\\\" class=\\\"full-screen-dialog-container\\\" fxLayout=\\\"column\\\">\\n  <my-card ColorClass=\\\"indigo\\\" [Titulo]=\\\"NombreFamilia + ' - Movimientos en los precios.'\\\" [Descripcion]=\\\"'Se muestra el historial de los movimientos en los precios del ' + NombreFamilia\\\"\\n    Icono=\\\"show_chart\\\" [ShowPrint]=\\\"true\\\" [ShowAdd]=\\\"true\\\" (ClickAdd)=\\\"add()\\\">\\n\\n\\n    <div my-card-content fxLayout=\\\"column\\\">\\n      <div class=\\\"noprinted chart-container\\\" *ngIf=\\\"chart_\\\">\\n        <canvas id=\\\"movs{{data}}\\\"></canvas>\\n      </div>\\n      <img class=\\\"onlyprint\\\" *ngIf=\\\"chart_ && !isLoadingResults\\\" src=\\\"{{imageOfChart(chart_)}}\\\" />\\n      <mat-divider class=\\\"noprinted\\\" [inset]=\\\"true\\\"></mat-divider>\\n\\n\\n      <div fxLayout=\\\"column\\\">\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" *ngIf=\\\"isLoadingResults || isRateLimitReached\\\">\\n          <mat-spinner *ngIf=\\\"isLoadingResults\\\" [strokeWidth]=\\\"3\\\"></mat-spinner>\\n          <div class=\\\"red\\\" *ngIf=\\\"isRateLimitReached\\\">\\n            La Api se encuentra ocupada, se reestablecera en unos minuto.\\n          </div>\\n        </div>\\n\\n        <mat-table fxLayout=\\\"column\\\" [dataSource]=\\\"dataSource\\\">\\n          <ng-container matColumnDef=\\\"FechaRegistro\\\">\\n            <mat-header-cell fxFlex *matHeaderCellDef>Fecha de Registro</mat-header-cell>\\n            <mat-cell fxFlex *matCellDef=\\\"let row\\\">{{row.FechaRegistro | date}}</mat-cell>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"FechaOperacion\\\">\\n            <mat-header-cell fxFlex *matHeaderCellDef>Fecha de Operacion</mat-header-cell>\\n            <mat-cell fxFlex *matCellDef=\\\"let row\\\">{{row.FechaOperacion | date}}</mat-cell>\\n          </ng-container>\\n          <ng-container matColumnDef=\\\"Valor\\\">\\n            <mat-header-cell fxFlex=\\\"70px\\\" *matHeaderCellDef>Valor</mat-header-cell>\\n            <mat-cell fxFlex=\\\"70px\\\" *matCellDef=\\\"let row\\\">{{row.Valor | currency:'MXN':'symbol-narrow':'1.2-4'}}</mat-cell>\\n          </ng-container>\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let row; columns: displayedColumns\\\"></mat-row>\\n        </mat-table>\\n      </div>\\n    </div>\\n  </my-card>\\n  <!-- CloseButton -->\\n  <button class=\\\"closeButton mat-elevation-z15\\\" mat-dialog-close tabIndex=\\\"3\\\" color=\\\"warn\\\" mat-mini-fab>\\n    <mat-icon>close</mat-icon>\\n  </button>\\n</div>\\n\"","import { Component, OnInit, Inject, ViewChild, HostListener, Sanitizer } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatPaginator, MatSort, MatDialog } from '@angular/material';\nimport { DialogResults } from '../../dialog.component';\nimport {\n  CatalogosService,\n  ROUTE_MOVIMIENTOS_PRECIO_FAMILIA_MATERIALES,\n  prefixApi,\n  ROUTE_MOVIMIENTOS_PRECIO_FAMILIA_MATERIALES_CHARTS,\n  ROUTE_FAMILIA_MATERIALES,\n  IFamiliasMateriales,\n} from '../../catalogos.service';\nimport { Observable, observable, of, merge } from 'rxjs';\nimport { startWith, switchMap, map, catchError, delay } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Chart } from 'chart.js';\n\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { formatDate } from '@angular/common';\nimport { AddMovimientosFamiliasMaterialesComponent } from './add-movimientos-familias-materiales.component';\n\n@Component({\n  selector: 'app-movimientos-familias-materiales',\n  templateUrl: './movimientos-familias-materiales.component.html',\n  styles: [],\n})\nexport class MovimientosFamiliasMaterialesComponent implements OnInit {\n  displayedColumns: string[] = ['FechaOperacion', 'FechaRegistro', 'Valor'];\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n  dataSource: any[] = [];\n  NombreFamilia: string;\n\n  chart_: any = {};\n  // chartData: ISeries[];\n  // curve: any = shape.curveStepAfter;\n  // xMaxScale = new Date();\n  // xMinScale: Date;\n\n  constructor(\n    public dialogRef: MatDialogRef<MovimientosFamiliasMaterialesComponent, DialogResults>,\n    @Inject(MAT_DIALOG_DATA) public data: number,\n    private catalogosService: CatalogosService,\n    private http: HttpClient,\n    private dialog: MatDialog\n  ) {\n    merge()\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          return this.catalogosService.getCollectionsOfEntity(\n            data,\n            ROUTE_MOVIMIENTOS_PRECIO_FAMILIA_MATERIALES\n          );\n        }),\n        map(dt => {\n          this.isLoadingResults = false;\n          this.isRateLimitReached = false;\n          return dt;\n        }),\n        catchError(() => {\n          this.isLoadingResults = false;\n          this.isRateLimitReached = true;\n          return of([]);\n        })\n      )\n      .subscribe(dat => (this.dataSource = dat));\n\n    this.catalogosService\n      .getEntity(this.data, ROUTE_FAMILIA_MATERIALES)\n      .then((fam: IFamiliasMateriales) => {\n        this.NombreFamilia = fam.NombreFamilia;\n      });\n  }\n\n  ngOnInit() {\n    this.http\n      .get(`${prefixApi}${ROUTE_MOVIMIENTOS_PRECIO_FAMILIA_MATERIALES_CHARTS}/${this.data}`)\n      .subscribe((res: ISeries[]) => {\n        const labels = res[0].series.map(v => formatDate(v.name, 'mediumDate', 'es-MX'));\n        const values = res[0].series.map(v => v.value);\n\n        const ctx = document.getElementById(`movs${this.data}`) as HTMLCanvasElement;\n\n        const _chart = new Chart(ctx, {\n          type: 'line',\n          data: {\n            labels: labels,\n            datasets: [\n              {\n                label: 'Movimientos',\n                data: values,\n                fill: false,\n                borderColor: '#3cba9f',\n                lineTension: 0,\n              },\n            ],\n          },\n          options: {\n            legend: { display: true },\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              xAxes: [{ display: true }],\n              yAxes: [{ display: true, ticks: { beginAtZero: true } }],\n            },\n          },\n        });\n\n        this.chart_ = _chart;\n\n        const mediaQueryList = window.matchMedia('print');\n        mediaQueryList.addListener(function(mql) {\n          if (mql.matches) {\n            _chart.resize();\n            delay(1000);\n            console.log('webkit equivalent of onbeforeprint');\n          }\n        });\n      });\n  }\n\n  imageOfChart(chart: any) {\n    if (chart.toBase64Image !== undefined) {\n      return chart.toBase64Image();\n    }\n    return '';\n  }\n\n  add() {\n    this.dialog\n      .open<AddMovimientosFamiliasMaterialesComponent, number, DialogResults>(\n        AddMovimientosFamiliasMaterialesComponent,\n        {\n          disableClose: true,\n          data: this.data,\n          width: '450px',\n        }\n      )\n      .afterClosed()\n      .toPromise()\n      .then(m => {\n        if (m === DialogResults.Ok) {\n          this.dialogRef.close(DialogResults.Ok);\n        }\n      });\n  }\n  // private convertDates(target, ...properties) {\n  //   for (const prop of properties) {\n  //     target[prop] = new Date(target[prop]);\n  //   }\n  //   return target;\n  // }\n}\n\nexport interface ISeries {\n  name: string;\n  series: ISeriesData[];\n}\nexport interface ISeriesData {\n  name: Date;\n  value: number;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { IConfigTintaMaquina } from '../../../catalogos.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { trigger, transition, useAnimation } from '@angular/animations';\nimport { shake } from 'ng-animate';\n\n@Component({\n  selector: 'cat-add-config-tinta',\n  template: `\n  <form fxFlex=\"100%\" (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\"  style=\"position:relative;\" fxLayout=\"column\">\n    <h2 mat-dialog-title>Agregar Configuración de Tintas</h2>\n\n    <mat-divider class=\"dialog-divider\"></mat-divider>\n\n    <!-- Dialog Content -->\n    <div  mat-dialog-content class=\"mat-typography\" fxLayout=\"column\">\n\n      <mat-form-field appearance=\"standard\" [@shake]=\"shake[0]\" (@shake.done)=\"reset(0)\" fxFlex=\"100%\">\n        <mat-label>Cantidad</mat-label>\n        <input matInput type=\"number\" step=\"1\" formControlName=\"Cantidad\">\n        <mat-hint>Define la cantidad de tintas para la configuración.</mat-hint>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"standard\" [@shake]=\"shake[1]\" (@shake.done)=\"reset(1)\" fxFlex=\"100%\">\n        <mat-label>Minimo de Metros Lineales</mat-label>\n        <input matInput type=\"number\" formControlName=\"MinimoMetros\">\n        <mat-hint>Define la cantidad minima de metros lineales.</mat-hint>\n      </mat-form-field>\n\n    </div>\n\n    <mat-divider class=\"dialog-divider\"></mat-divider>\n\n    <!-- Dialog actions -->\n    <div mat-dialog-actions fxLayout=\"row\" fxFlex=\"80px\" fxLayoutAlign=\"center center\">\n      <button  mat-raised-button color=\"primary\">Agregar Configuración</button>\n    </div>\n\n    <!-- CloseButton -->\n    <button class=\"closeButton\" type=\"button\" [mat-dialog-close]=\"null\" tabIndex=\"3\" color=\"warn\" mat-icon-button>\n      <mat-icon>close</mat-icon>\n    </button>\n  </form>\n  `,\n  styles: [],\n  animations: [trigger('shake', [transition('* => error', useAnimation(shake))])],\n})\nexport class AddConfigTintaComponent implements OnInit {\n  CantidadCForm: FormControl = new FormControl('', [\n    Validators.required,\n    Validators.min(1),\n    Validators.max(12),\n  ]);\n\n  MinimoMetrosCForm: FormControl = new FormControl('', [Validators.required, Validators.min(1)]);\n\n  form: FormGroup = new FormGroup({\n    Cantidad: this.CantidadCForm,\n    MinimoMetros: this.MinimoMetrosCForm,\n  });\n\n  shake: string[] = ['', ''];\n\n  constructor(private dialogRef: MatDialogRef<AddConfigTintaComponent, IConfigTintaMaquina>) {}\n\n  ngOnInit() {}\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.dialogRef.close(this.form.value);\n    } else {\n      this.shake[0] = this.CantidadCForm.valid ? '' : 'error';\n      this.shake[1] = this.MinimoMetrosCForm.valid ? '' : 'error';\n    }\n  }\n\n  reset(idx: number) {\n    this.shake[idx] = '';\n  }\n}\n","module.exports = \"<!-- spinner -->\\n<div *ngIf=\\\"isLoading\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"100%\\\">\\n  <mat-spinner color=\\\"accent\\\" diameter=\\\"80\\\"></mat-spinner>\\n</div>\\n\\n<form *ngIf=\\\"!isLoading\\\" fxFlex=\\\"100%\\\" style=\\\"position:relative;\\\" fxLayout=\\\"column\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <h2 mat-dialog-title>{{isNew ? 'Agregar' : 'Editar'}} Impresora</h2>\\n  <mat-divider class=\\\"dialog-divider\\\"></mat-divider>\\n\\n  <!-- Contenido del dialogo -->\\n  <div mat-dialog-content class=\\\"mat-typography\\\">\\n    <div *ngIf=\\\"!isLoading\\\" fxLayout=\\\"column\\\">\\n      <div fxLayout=\\\"column\\\">\\n        <wrap-inputs [controls]=\\\"ctls\\\" [fGroup]=\\\"form\\\" *ngFor=\\\"let ctls of ViewForm\\\"></wrap-inputs>\\n      </div>\\n    </div>\\n    <br>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <my-card [Titulo]=\\\"'Rodillos'\\\" [Descripcion]=\\\"'Se muestran los rodillos de la maquina'\\\" [ShowAdd]=\\\"true\\\" [Icono]=\\\"'adjust'\\\"\\n      (ClickAdd)=\\\"AddRodillo()\\\">\\n\\n      <mat-list my-card-content dense>\\n        <mat-list-item *ngFor=\\\"let link of entity.Rodillos\\\">\\n          <span class=\\\"mat-body-2\\\" style=\\\"width: 150px;\\n          font-size: 18px;\\n          border-radius: 18px;\\n          background-color: teal;\\n          text-align: end;\\n          padding-right: 15px;\\\" matTooltip=\\\"{{link.Cantidad}} rodillos de {{ link.Medida | number:'2.2-2'}}\\\" matBadge=\\\"{{link.Cantidad}}\\\"\\n            matBadgeColor=\\\"accent\\\">\\n            {{ link.Medida | number:'2.2-2'}}\\n          </span>\\n\\n          <span class=\\\"relleno\\\"></span>\\n          <button type=\\\"button\\\" matTooltip=\\\"Borrar Rodillo\\\" (click)=\\\"RemoveRodillo(link)\\\" class=\\\"red-fg\\\" mat-icon-button>\\n            <mat-icon>delete</mat-icon>\\n          </button>\\n          <mat-divider></mat-divider>\\n        </mat-list-item>\\n      </mat-list>\\n\\n    </my-card>\\n    <br>\\n    <my-card [Titulo]=\\\"'Configuración de Tintas'\\\" [Descripcion]=\\\"'Determina los valores minimos para el numero de tintas'\\\" [ShowAdd]=\\\"true\\\"\\n      [Icono]=\\\"'opacity'\\\" (ClickAdd)=\\\"AddConfTinta()\\\">\\n\\n      <mat-list my-card-content dense>\\n        <mat-list-item *ngFor=\\\"let link of entity.ConfiguracionTintas\\\">\\n          <span class=\\\"mat-body-2\\\" style=\\\"width: 150px;\\n            font-size: 18px;\\n            border-radius: 18px;\\n            background-color: teal;\\n            text-align: end;\\n            padding-right: 15px;\\\" matTooltip=\\\"{{link.MinimoMetros}} mts para {{link.Cantidad}} tintas\\\" matBadge=\\\"{{link.Cantidad}}\\\"\\n            matBadgeColor=\\\"accent\\\">\\n            {{link.MinimoMetros}} mts\\n          </span>\\n          <span class=\\\"relleno\\\"></span>\\n          <button type=\\\"button\\\" matTooltip=\\\"Borrar Configuración\\\" (click)=\\\"RemoveConfTinta(link)\\\" class=\\\"red-fg\\\" mat-icon-button>\\n            <mat-icon>delete</mat-icon>\\n          </button>\\n          <mat-divider></mat-divider>\\n        </mat-list-item>\\n      </mat-list>\\n\\n    </my-card>\\n    <br>\\n  </div>\\n\\n  <mat-divider class=\\\"dialog-divider\\\"></mat-divider>\\n  <div mat-dialog-actions fxLayout=\\\"row\\\" fxFlex=\\\"80px\\\" fxLayoutAlign=\\\"center center\\\">\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"warn\\\">{{isNew ? 'Guardar' : 'Actualizar'}}</button>\\n  </div>\\n\\n  <!-- CloseButton -->\\n  <button class=\\\"closeButton\\\" mat-dialog-close tabIndex=\\\"3\\\" color=\\\"warn\\\" mat-icon-button>\\n    <mat-icon>close</mat-icon>\\n  </button>\\n</form>\\n\"","import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\nimport {\n  IImpresora,\n  CatalogosService,\n  ILinea,\n  ROUTE_IMPRESORAS,\n  IRodillo,\n  IConfigTintaMaquina,\n} from '../../../catalogos.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { IInputConfig, ISelectOptions } from '../../../common/wrap-inputs/wrap-inputs.component';\nimport { DialogResults, DialogIcons } from '../../../dialog.component';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material';\nimport { DialogService } from '../../../dialog.service';\nimport { UsuariosService } from '../../../usuarios.service';\nimport { HttpClient } from '@angular/common/http';\nimport { AddRodilloComponent } from './add-rodillo.component';\nimport { AddConfigTintaComponent } from './add-config-tinta.component';\n\n\n\nconst invalidValue: string = 'El valor que intenta agregar es invalido!';\nconst success: string = 'Correcto!';\nconst error: string = 'Error!';\nconst ROUTE_LINEAS: string = 'api/Catalogos/lineas';\n\n\n\n@Component({\n  selector: 'cat-add-edit-impresora',\n  templateUrl: './add-edit-impresora.component.html',\n  styles: [],\n})\nexport class AddEditImpresoraComponent implements OnInit, OnDestroy {\n  isNew: boolean;\n  isLoading: boolean;\n  entity: IImpresora;\n  form: FormGroup;\n\n  onSuccess$: Subscription;\n  onError$: Subscription;\n\n  tintaToAdd: IConfigTintaMaquina = {};\n\n  ViewForm: IInputConfig[][];\n\n  constructor(\n    public dialogRef: MatDialogRef<AddEditImpresoraComponent, DialogResults>,\n    @Inject(MAT_DIALOG_DATA) public data: IImpresora,\n    private catalogosService: CatalogosService,\n    private dialogService: DialogService,\n    private fb: FormBuilder,\n    private usuariosService: UsuariosService,\n    private http: HttpClient,\n    private dialog: MatDialog,\n  ) {\n    this.entity = data;\n    this.isNew = this.entity ? false : true;\n    this.isLoading = true;\n\n    this.http\n      .get<ILinea[]>(ROUTE_LINEAS)\n      .toPromise()\n      .then(value => {\n        const lineas: ISelectOptions[] = value.map(i => ({\n          display: i.Nombre,\n          value: i.Id,\n        }));\n        this.ViewForm = [\n          [\n            {\n              name: 'Linea_Id',\n              text: 'Linea',\n              type: 'select',\n              selectOptions: lineas,\n            },\n          ],\n          [\n            {\n              name: 'NombreMaquina',\n              text: 'Nombre de la Impresora',\n            },\n            {\n              name: 'ModeloMaquina',\n              text: 'Modelo de la Impresora',\n            },\n          ],\n\n          [\n            { name: 'Velocidad', type: 'number' },\n            { name: 'Decks', text: 'Unidades Disponibles', type: 'number' },\n          ],\n          [\n            {\n              name: 'CostoArranque',\n              text: 'Costo de Arranque',\n              type: 'currency',\n            },\n            {\n              name: 'PorcentajeDesperdicio',\n              text: '% Desperdicio',\n              unit: '%',\n            },\n          ],\n          [\n            {\n              name: 'CostoTurno',\n              text: 'Costo por Turno',\n              type: 'currency',\n            },\n            {\n              name: 'MinutosTurno',\n              text: 'Minutos por Turno',\n              type: 'number',\n            },\n          ],\n          [\n            {\n              name: 'AnchoMinimoImpresion',\n              text: 'Ancho Minimo de Impresión',\n              type: 'number',\n              unit: 'cm',\n            },\n            {\n              name: 'AnchoMaximoImpresion',\n              text: 'Ancho Maximo de Impresión',\n              type: 'number',\n              unit: 'cm',\n            },\n          ],\n          [\n            {\n              name: 'AnchoMinimoMaterial',\n              text: 'Ancho Minimo del Material',\n              type: 'number',\n              unit: 'cm',\n            },\n            {\n              name: 'AnchoMaximoMaterial',\n              text: 'Ancho Maximo del Material',\n              type: 'number',\n              unit: 'cm',\n            },\n          ],\n        ];\n        this.isLoading = false;\n      });\n  }\n\n  ngOnInit() {\n    this.onSuccess$ = this.catalogosService.onHttpComplete.pipe().subscribe(o => {\n      this.dialogService\n        .showDialog(success, o, { Icon: DialogIcons.Success })\n        .then(() => this.dialogRef.close(DialogResults.Ok));\n    });\n\n    this.onError$ = this.catalogosService.onHttpError.pipe().subscribe(e => {\n      this.dialogService\n        .showDialog(error, this.dialogService.getModelError(e), {\n          Icon: DialogIcons.Error,\n        })\n        .then(() => (this.isLoading = false));\n    });\n\n    this.createForm();\n  }\n  ngOnDestroy(): void {\n    this.onSuccess$.unsubscribe();\n    this.onError$.unsubscribe();\n  }\n  async createForm() {\n    this.entity = this.entity ? this.entity : { Rodillos: [], ConfiguracionTintas: [] };\n\n    this.form = this.fb.group({\n      Id: [this.entity.Id],\n      NombreMaquina: [this.entity.NombreMaquina, Validators.required],\n      ModeloMaquina: [this.entity.ModeloMaquina, Validators.required],\n      CostoArranque: [this.entity.CostoArranque, [Validators.required, Validators.min(0.00001)]],\n      CostoTurno: [this.entity.CostoTurno, [Validators.required, Validators.min(0.00001)]],\n      PorcentajeDesperdicio: [this.entity.PorcentajeDesperdicio * 100, Validators.required],\n      MinutosTurno: [this.entity.MinutosTurno, Validators.required],\n      AnchoMinimoImpresion: [this.entity.AnchoMinimoImpresion, Validators.required],\n      AnchoMaximoImpresion: [this.entity.AnchoMaximoImpresion, Validators.required],\n      AnchoMinimoMaterial: [this.entity.AnchoMinimoMaterial, Validators.required],\n      AnchoMaximoMaterial: [this.entity.AnchoMaximoMaterial, Validators.required],\n      Velocidad: [this.entity.Velocidad, Validators.required],\n      Decks: [this.entity.Decks, Validators.required],\n      Linea_Id: [this.entity.Linea_Id, Validators.required],\n    });\n  }\n  onSubmit() {\n    if (this.form.valid) {\n      this.entity = Object.assign(this.entity, this.form.value);\n      this.entity.PorcentajeDesperdicio /= 100;\n      if (this.isNew) {\n        this.catalogosService.postEntity(this.entity, ROUTE_IMPRESORAS);\n      } else {\n        this.catalogosService.putEntity(this.entity, ROUTE_IMPRESORAS);\n      }\n    }\n  }\n\n  RemoveRodillo(rodillo: IRodillo) {\n    this.entity.Rodillos.splice(this.entity.Rodillos.indexOf(rodillo), 1);\n  }\n\n  AddRodillo() {\n    const dRef = this.dialog.open<AddRodilloComponent, any, IRodillo>(AddRodilloComponent, {\n      disableClose: true,\n      width: '400px',\n    });\n\n    dRef.afterClosed().subscribe(rod => {\n      if (\n        rod !== null &&\n        rod.Cantidad > 0 &&\n        rod.Medida > 0 &&\n        this.entity.Rodillos.findIndex(t => t.Medida === rod.Medida) === -1\n      ) {\n        this.entity.Rodillos.push(rod);\n      } else if (rod !== null) {\n        this.dialogService.showDialog(error, invalidValue, { Icon: DialogIcons.Error });\n      }\n    });\n  }\n\n  RemoveConfTinta(tinta: IConfigTintaMaquina) {\n    this.entity.ConfiguracionTintas.splice(this.entity.ConfiguracionTintas.indexOf(tinta), 1);\n  }\n\n  AddConfTinta() {\n    const dRef = this.dialog.open<AddConfigTintaComponent, any, IConfigTintaMaquina>(\n      AddConfigTintaComponent,\n      {\n        disableClose: true,\n        width: '400px',\n      },\n    );\n\n    dRef.afterClosed().subscribe(cf => {\n      if (\n        cf !== null &&\n        cf.Cantidad > 0 &&\n        cf.MinimoMetros > 0 &&\n        this.entity.ConfiguracionTintas.findIndex(t => t.Cantidad === cf.Cantidad) === -1\n      ) {\n        this.entity.ConfiguracionTintas.push(cf);\n      } else if (cf !== null) {\n        this.dialogService.showDialog(error, invalidValue, { Icon: DialogIcons.Error });\n      }\n    });\n  }\n}\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { IRodillo } from '../../../catalogos.service';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { shake } from 'ng-animate';\nimport { trigger, transition, useAnimation } from '@angular/animations';\n\n@Component({\n  selector: 'cat-add-rodillo',\n  template: `\n  <form fxFlex=\"100%\" (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\"  style=\"position:relative;\" fxLayout=\"column\">\n    <h2 mat-dialog-title>Agregar Rodillo</h2>\n\n    <mat-divider class=\"dialog-divider\"></mat-divider>\n\n    <!-- Dialog Content -->\n    <div  mat-dialog-content class=\"mat-typography\" fxLayout=\"column\">\n\n      <mat-form-field appearance=\"standard\" [@shake]=\"shake[0]\" (@shake.done)=\"reset(0)\" fxFlex=\"100%\">\n        <mat-label>Cantidad</mat-label>\n        <input matInput type=\"number\" step=\"1\" formControlName=\"Cantidad\">\n        <mat-hint>Define la cantidad de rodillos en existencia</mat-hint>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"standard\" [@shake]=\"shake[1]\" (@shake.done)=\"reset(1)\" fxFlex=\"100%\">\n        <mat-label>Medida</mat-label>\n        <input matInput type=\"number\" formControlName=\"Medida\">\n        <mat-hint>Define la medida de la circunferencia de los rodillos</mat-hint>\n      </mat-form-field>\n\n    </div>\n\n    <mat-divider class=\"dialog-divider\"></mat-divider>\n\n    <!-- Dialog actions -->\n    <div mat-dialog-actions fxLayout=\"row\" fxFlex=\"80px\" fxLayoutAlign=\"center center\">\n      <button  mat-raised-button color=\"primary\">Agregar Rodillo</button>\n    </div>\n\n    <!-- CloseButton -->\n    <button class=\"closeButton\" type=\"button\" [mat-dialog-close]=\"null\" tabIndex=\"3\" color=\"warn\" mat-icon-button>\n      <mat-icon>close</mat-icon>\n    </button>\n  </form>\n  `,\n  styles: [],\n  animations: [trigger('shake', [transition('* => error', useAnimation(shake))])],\n})\nexport class AddRodilloComponent implements OnInit {\n  CantidadCForm: FormControl = new FormControl('', [\n    Validators.required,\n    Validators.min(0),\n    Validators.max(100),\n  ]);\n  MedidaCForm: FormControl = new FormControl('', [Validators.required, Validators.min(0)]);\n  form: FormGroup = new FormGroup({\n    Cantidad: this.CantidadCForm,\n    Medida: this.MedidaCForm,\n  });\n\n  shake: string[] = ['', ''];\n\n  constructor(private dialogRef: MatDialogRef<AddRodilloComponent, IRodillo>) {}\n\n  ngOnInit() {}\n\n  onSubmit() {\n    if (this.form.valid) {\n      this.dialogRef.close(this.form.value);\n    } else {\n      this.shake[0] = this.CantidadCForm.valid ? '' : 'error';\n      this.shake[1] = this.MedidaCForm.valid ? '' : 'error';\n    }\n  }\n\n  reset(idx: number) {\n    this.shake[idx] = '';\n  }\n}\n","module.exports = \"<div class=\\\"outlet-content mat-typography\\\">\\n  <my-card *ngIf=\\\"!isLoading && !notFound else loader\\\" [Titulo]=\\\"'Impresora: ' + (entity.NombreMaquina ).toUpperCase()\\\"\\n    CardColor=\\\"primary\\\" [Descripcion]=\\\"'Linea: ' + entity.LineaNombre + ' Modelo: ' + entity.ModeloMaquina\\\" Icono=\\\"cogs\\\"\\n    [HasFontawesomeIcon]=\\\"true\\\" [ShowPrint]=\\\"true\\\">\\n\\n    <div my-card-content style=\\\"overflow: auto;\\\" fxLayout=\\\"column\\\">\\n      <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\">\\n        <div fxFlex style=\\\"padding:5px;\\\">\\n          <h2>Especificaciones</h2>\\n          <dl>\\n            <dt class=\\\"mat-body-2\\\">Modelo:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.ModeloMaquina}}</dd>\\n            <dt class=\\\"mat-body-2\\\">Linea:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.LineaNombre}}</dd>\\n            <dt class=\\\"mat-body-2\\\">Velocidad:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.Velocidad}} mts/min</dd>\\n            <dt class=\\\"mat-body-2\\\">Unidades Disponibles:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.Decks}}</dd>\\n            <dt class=\\\"mat-body-2\\\">Minutos por Turno:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.MinutosTurno}} minutos</dd>\\n\\n            <dt class=\\\"mat-body-2\\\">Ancho minimo de Impresión:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.AnchoMinimoImpresion}} cm</dd>\\n\\n            <dt class=\\\"mat-body-2\\\">Ancho maximo de Impresión:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.AnchoMaximoImpresion}} cm</dd>\\n\\n            <dt class=\\\"mat-body-2\\\">Ancho minimo del Material:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.AnchoMinimoMaterial}} cm</dd>\\n\\n            <dt class=\\\"mat-body-2\\\">Ancho maximo del Material:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.AnchoMaximoMaterial}} cm</dd>\\n\\n          </dl>\\n        </div>\\n        <mat-divider [vertical]=\\\"true\\\"> </mat-divider>\\n        <div fxFlex style=\\\"padding:5px;\\\">\\n          <h2>Precios y Costos</h2>\\n          <dl>\\n            <dt class=\\\"mat-body-2\\\">Costo de Arranque:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.CostoArranque | currency:'MXN'}}</dd>\\n            <dt class=\\\"mat-body-2\\\">Costo por Turno:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.CostoTurno | currency:'MXN'}}</dd>\\n          </dl>\\n          <h2>Configuración para el Cotizador</h2>\\n          <dl>\\n            <dt class=\\\"mat-body-2\\\">% de Desperdicio:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.PorcentajeDesperdicio | percent}}</dd>\\n            <dt class=\\\"mat-body-2\\\">Minutos por Turno:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.MinutosTurno}}</dd>\\n          </dl>\\n        </div>\\n      </div>\\n      <mat-divider [inset]=\\\"true\\\"> </mat-divider>\\n      <div fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\">\\n        <div fxFlex=\\\"100%\\\" style=\\\"padding:5px;\\\" fxLayout=\\\"column\\\">\\n          <h2>Rodillos Displonibles</h2>\\n          <table mat-table [dataSource]=\\\"entity.Rodillos\\\" class=\\\"mat-elevation-z1\\\" fxFlex=\\\"100%\\\">\\n            <ng-container matColumnDef=\\\"Cantidad\\\">\\n              <th mat-header-cell *matHeaderCellDef> Cantidad </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Cantidad}} </td>\\n              <td mat-footer-cell *matFooterCellDef style=\\\"text-align: right;\\\"><span class=\\\"mat-body-2\\\" style=\\\"margin-right: 5px;\\\">Total:</span></td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"Medida\\\">\\n              <th mat-header-cell *matHeaderCellDef> Medida </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.Medida | number:'1.2-2'}} </td>\\n              <td mat-footer-cell *matFooterCellDef><span class=\\\"mat-body-2\\\">{{entity.Rodillos.length}}</span></td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"['Cantidad', 'Medida']\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns:['Cantidad', 'Medida'];\\\"></tr>\\n            <tr mat-footer-row *matFooterRowDef=\\\"['Cantidad', 'Medida']\\\"></tr>\\n          </table>\\n        </div>\\n        <mat-divider [vertical]=\\\"true\\\"> </mat-divider>\\n        <div fxFlex=\\\"100%\\\" style=\\\"padding:5px;\\\" fxLayout=\\\"column\\\">\\n          <h2>Configuracion de Tintas</h2>\\n\\n          <table mat-table [dataSource]=\\\"entity.ConfiguracionTintas\\\" class=\\\"mat-elevation-z1\\\" fxFlex=\\\"100%\\\">\\n            <ng-container matColumnDef=\\\"Cantidad\\\">\\n              <th mat-header-cell *matHeaderCellDef> Numero de Tintas </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Cantidad}} </td>\\n            </ng-container>\\n            <ng-container matColumnDef=\\\"MinMetros\\\">\\n              <th mat-header-cell *matHeaderCellDef> Metros Minimos </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{ element.MinimoMetros | number:'1.2-2'}} mts.</td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"['Cantidad', 'MinMetros']\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns:['Cantidad', 'MinMetros'];\\\"></tr>\\n          </table>\\n\\n\\n\\n        </div>\\n      </div>\\n    </div>\\n\\n  </my-card>\\n\\n  <ng-template #loader>\\n    <div fxFLex=\\\"100%\\\" fxLayout=\\\"column\\\" style=\\\"min-height: 90vh\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-progress-spinner *ngIf=\\\"!notFound\\\" mode=\\\"indeterminate\\\" color=\\\"accent\\\"></mat-progress-spinner>\\n      <h2 *ngIf=\\\"!notFound\\\">Cargando ...</h2>\\n      <img *ngIf=\\\"notFound\\\" src=\\\"assets/404.png\\\">\\n      <h2 *ngIf=\\\"notFound\\\" class=\\\"red-fg\\\">No se ha encontrado el elemento</h2>\\n    </div>\\n\\n  </ng-template>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { CatalogosService, IImpresora, ROUTE_IMPRESORAS } from '../../../catalogos.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cat-detail-impresora',\n  templateUrl: './detail-impresora.component.html',\n  styleUrls: ['./detail-impresora.component.scss'],\n})\nexport class DetailImpresoraComponent implements OnInit, OnDestroy {\n  Id: number;\n  entity: IImpresora;\n  isLoading: boolean = true;\n  notFound: boolean = false;\n  routeSub$: Subscription;\n  routeSub2$: Subscription;\n\n  constructor(\n    private http: HttpClient,\n    private route: ActivatedRoute,\n    private catalogosService: CatalogosService,\n  ) {\n    this.routeSub2$ = this.route.url.subscribe(() => {\n      this.isLoading = true;\n      this.notFound = false;\n    });\n\n    this.routeSub$ = this.route.params.subscribe(params => {\n      this.Id = +params['Id'];\n      this.catalogosService\n        .getEntity<IImpresora>(this.Id, ROUTE_IMPRESORAS)\n        .then(val => {\n          this.entity = val;\n          this.isLoading = false;\n        })\n        .catch(err => {\n          this.notFound = true;\n          this.isLoading = false;\n          console.log(err);\n        });\n    });\n  }\n\n  ngOnInit() {}\n  ngOnDestroy() {\n    this.routeSub$.unsubscribe();\n    this.routeSub2$.unsubscribe();\n  }\n}\n","module.exports = \"<div class=\\\"outlet-content\\\">\\n  <my-card CardColor=\\\"primary\\\" [Titulo]=\\\"'Impresoras'\\\" [Descripcion]=\\\"'Se muestran las impresoras disponibles en la base de datos'\\\"\\n    Icono=\\\"cogs\\\" [HasFontawesomeIcon]=\\\"true\\\" [ShowPrint]=\\\"true\\\" [ShowAdd]=\\\"isAdmin ? true : false\\\"\\n    (ClickAdd)=\\\"AddOrEdit(null)\\\" (ClickAction)=\\\"fillCatalog()\\\" [ExtraButtons]=\\\"[{text:'Actualizar', icon:'refresh', description:'Actualiza los datos de la pagina actual', actionResult:'refresh'}]\\\">\\n\\n    <div my-card-content style=\\\"overflow: auto;\\\">\\n      <mat-table multiTemplateDataRows [dataSource]=\\\"catalogPage.Items\\\" style=\\\"min-width: 900px;\\\" matSort (matSortChange)=\\\"catalogosService.emitSort($event, this.pagConfig);\\\">\\n        <!-- Crea las columnas con datos desde el servidor -->\\n        <ng-container *ngFor=\\\"let column of columsToView()\\\">\\n\\n          <ng-container *ngIf=\\\"column.db\\\" matColumnDef=\\\"{{column.column}}\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header [disabled]=\\\"!column.sortable\\\" [fxFlex]=\\\"column.flex\\\"> {{column.text}}\\n              </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" [fxFlex]=\\\"column.flex\\\">\\n              <ng-container [ngSwitch]=\\\"column.type\\\">\\n                <ng-container *ngSwitchCase=\\\"'currency'\\\">\\n                  {{element[column.columnToShow] | currency:'MXN'}}\\n                </ng-container>\\n                <ng-container *ngSwitchDefault>\\n                  {{element[column.columnToShow]}}\\n                </ng-container>\\n              </ng-container>\\n            </mat-cell>\\n          </ng-container>\\n\\n        </ng-container>\\n\\n        <!-- Control de acciones -->\\n        <ng-container matColumnDef=\\\"ActionEdit\\\">\\n          <mat-header-cell class=\\\"noprinted\\\" *matHeaderCellDef fxFlex=\\\"150px\\\"> Acciones </mat-header-cell>\\n          <mat-cell class=\\\"noprinted\\\" *matCellDef=\\\"let row\\\" fxFlex=\\\"150px\\\">\\n\\n            <ng-container *ngIf=\\\"!isAdmin\\\">\\n              <div fxLayout=\\\"row\\\" fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"center center\\\">\\n                <button class=\\\"green-700-fg\\\" mat-icon-button [routerLink]=\\\"row.Id\\\">\\n                  <mat-icon>info</mat-icon>\\n                </button>\\n              </div>\\n            </ng-container>\\n\\n            <ng-container *ngIf=\\\"isAdmin\\\">\\n              <button class=\\\"cyan-fg\\\" mat-icon-button [routerLink]=\\\"row.Id\\\">\\n                <mat-icon>info</mat-icon>\\n              </button>\\n              <button class=\\\"orange-fg\\\" mat-icon-button (click)=\\\"AddOrEdit(row)\\\">\\n                <mat-icon>edit</mat-icon>\\n              </button>\\n            </ng-container>\\n\\n          </mat-cell>\\n        </ng-container>\\n\\n\\n        <!-- Definicion de filas y columnas -->\\n        <mat-header-row *matHeaderRowDef=\\\"columns()\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let material; columns: columns();\\\"></mat-row>\\n      </mat-table>\\n      <mat-progress-bar color=\\\"accent\\\" *ngIf=\\\"isLoading\\\" mode=\\\"query\\\"></mat-progress-bar>\\n    </div>\\n\\n    <div my-card-footer>\\n      <mat-paginator [length]=\\\"catalogPage.TotalCount\\\" [pageIndex]=\\\"pagConfig.pageNumber - 1\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[10,25,50,75,100]\\\"\\n        (page)=\\\"catalogosService.emitPaginator($event, pagConfig)\\\">\\n      </mat-paginator>\\n    </div>\\n\\n  </my-card>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  ICatalogResponse,\n  IPageConfig,\n  OrderTypes,\n  CatalogosService,\n  Column,\n  ROUTE_IMPRESORAS,\n  IImpresora,\n} from '../../catalogos.service';\nimport { Subscription } from 'rxjs';\nimport { UsuariosService } from '../../usuarios.service';\nimport { DialogService } from '../../dialog.service';\nimport { MatDialog } from '@angular/material';\nimport { AddEditImpresoraComponent } from './add-edit-impresora/add-edit-impresora.component';\nimport { DialogResults, DialogButtonsFlags, DialogIcons } from '../../dialog.component';\n\n@Component({\n  selector: 'cat-impresoras',\n  templateUrl: './impresoras.component.html',\n  styleUrls: ['./impresoras.component.scss'],\n})\nexport class ImpresorasComponent implements OnInit, OnDestroy {\n  /**\n   * Contenido del Catalogo\n   */\n  catalogPage: ICatalogResponse<IImpresora> = {\n    TotalCount: 0,\n    TotalPages: 0,\n    Items: null,\n  };\n\n  /**\n   * Configuracion del Paginador\n   */\n  pagConfig: IPageConfig = {\n    pageSize: 10,\n    pageNumber: 1,\n    orderType: OrderTypes.ASC,\n    orderBy: 'Id',\n    query: '',\n  };\n\n  isLoading: boolean = false;\n  isAdmin: boolean = false;\n\n  needRefresh$: Subscription;\n  subIsAdmin$: Subscription;\n\n  constructor(\n    public catalogosService: CatalogosService,\n    private usuariosService: UsuariosService,\n    private dialogService: DialogService,\n    private dialog: MatDialog,\n  ) {\n    this.needRefresh$ = this.catalogosService.needRefresh.subscribe(p => {\n      this.fillCatalog();\n    });\n\n    this.subIsAdmin$ = this.usuariosService.isAdmin().subscribe(o => {\n      this.isAdmin = o;\n      this.fillCatalog();\n    });\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.subIsAdmin$.unsubscribe();\n    this.needRefresh$.unsubscribe();\n  }\n\n  /**\n   * Llena el catalogo\n   */\n  async fillCatalog() {\n    this.isLoading = true;\n    this.catalogPage = await this.catalogosService.getCollection<IImpresora>(\n      this.pagConfig,\n      ROUTE_IMPRESORAS,\n    );\n    this.isLoading = false;\n  }\n\n  /**\n   * Define la coleccion de las columnas\n   */\n  columsToView(): Column[] {\n    return [\n      //new Column('Id', 'Id', { flex: '100px' }),\n      new Column('NombreMaquina', 'Maquina'),\n      new Column('ModeloMaquina', 'Modelo'),\n      new Column('Decks', 'Unidades', { flex: '100px' }),\n      new Column('Velocidad', 'Velocidad', { flex: '100px' }),\n      new Column('CostoArranque', 'Costo de Arranque', {\n        type: 'currency',\n        flex: '110px',\n      }),\n      new Column('CostoTurno', 'Costo por Turno', {\n        type: 'currency',\n        flex: '110px',\n      }),\n      new Column('Linea_Id', 'Linea', { columnToShow: 'LineaNombre' }),\n      // new Column('Unidad', 'Unidad'),\n      new Column('ActionEdit', 'Acciones', { sortable: false, db: false }),\n    ];\n  }\n\n  /**\n   * Regresa el nombre de las columnas a mostrar\n   */\n  columns() {\n    return this.columsToView().map(p => p.column);\n  }\n\n  /**\n   * Abre el dialogo de Edición, o el dialogo para agregar, solo lo puede hacer un administrador.\n   * @param entity Entidad que se desea editar, si el valor es null se abre el dialogo en modo agregar, de lo contrario se abre en modo editar\n   */\n  AddOrEdit(entity?: IImpresora) {\n    if (this.isAdmin) {\n      this.dialog\n        .open(AddEditImpresoraComponent, {\n          disableClose: true,\n          data: entity,\n          width: '800px',\n        })\n        .afterClosed()\n        .toPromise()\n        .then(r => {\n          this.fillCatalog();\n        });\n    }\n  }\n\n  /**\n   * Elimina el elemento indicado por la llave principal.\n   * @param id Clave Principal del elemento que se desea Eliminar\n   */\n  delete(id: number) {\n    if (this.isAdmin) {\n      this.dialogService\n        .showDialog('Eliminar!!', 'Realmente desea Eliminar la Impresora?', {\n          buttons: DialogButtonsFlags.Yes | DialogButtonsFlags.No,\n          Icon: DialogIcons.Question,\n        })\n        .then(r => {\n          if (r === DialogResults.Yes) {\n            this.catalogosService.delEntity(id, ROUTE_IMPRESORAS);\n          }\n        });\n    }\n  }\n}\n","module.exports = \"<!-- spinner -->\\n<div *ngIf=\\\"isLoading\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"100%\\\">\\n  <mat-spinner color=\\\"accent\\\" diameter=\\\"80\\\"></mat-spinner>\\n</div>\\n\\n<!-- Formulario -->\\n<form *ngIf=\\\"!isLoading\\\" fxFlex=\\\"100%\\\" style=\\\"position:relative;\\\" fxLayout=\\\"column\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <h2 mat-dialog-title>{{isNew ? 'Agregar' : 'Editar'}} Material</h2>\\n  <mat-divider class=\\\"dialog-divider\\\"></mat-divider>\\n\\n  <!-- Contenido del dialogo -->\\n  <div mat-dialog-content class=\\\"mat-typography\\\">\\n    <div *ngIf=\\\"!isLoading\\\" fxLayout=\\\"column\\\">\\n      <div fxLayout=\\\"column\\\">\\n        <wrap-inputs [controls]=\\\"ctls\\\" [fGroup]=\\\"form\\\" *ngFor=\\\"let ctls of ViewForm\\\"></wrap-inputs>\\n      </div>\\n    </div>\\n    <br />\\n    <mat-divider class=\\\"dialog-divider\\\"></mat-divider>\\n    <br />\\n\\n    <!-- Calibres del material -->\\n    <mat-card style=\\\"padding: 0px\\\" class=\\\"mat-elevation-z10\\\">\\n\\n      <mat-toolbar class=\\\"blue-grey mat-elevation-z0\\\">\\n        <mat-toolbar-row>\\n          <span>Calibres</span>\\n          <!-- <button type=\\\"button\\\" matTooltip=\\\"Agregar un Calibre\\\" class=\\\"deep-purple mat-elevation-z10\\\" mat-mini-fab><mat-icon>add</mat-icon></button> -->\\n\\n          <span class=\\\"relleno\\\"></span>\\n          <mat-form-field color=\\\"accent\\\" appearance=\\\"standard\\\" [style.fontSize.px]=\\\"14\\\">\\n            <mat-label>Agregar Calibre</mat-label>\\n            <input name=\\\"calibre\\\" #calibre type=\\\"number\\\" matInput>\\n            <button type=\\\"button\\\" (click)=\\\"AddCalibre(calibre.value)\\\" mat-icon-button matSuffix><mat-icon>add</mat-icon></button>\\n          </mat-form-field>\\n        </mat-toolbar-row>\\n      </mat-toolbar>\\n\\n      <mat-list dense>\\n        <mat-list-item *ngFor=\\\"let link of entity.Calibres\\\">\\n          {{ link.Valor }} {{UnidadesMaterial[entity.Unidad]}}\\n          <span class=\\\"relleno\\\"></span>\\n          <button type=\\\"button\\\" (click)=\\\"RemoveCalibre(link)\\\" class=\\\"red-fg\\\" mat-icon-button>\\n            <mat-icon>delete</mat-icon>\\n          </button>\\n          <mat-divider></mat-divider>\\n        </mat-list-item>\\n      </mat-list>\\n    </mat-card>\\n\\n    <br>\\n\\n  </div>\\n  <mat-divider class=\\\"dialog-divider\\\"></mat-divider>\\n  <div mat-dialog-actions fxLayout=\\\"row\\\" fxFlex=\\\"80px\\\" fxLayoutAlign=\\\"center center\\\">\\n    <button type=\\\"submit\\\" mat-raised-button color=\\\"warn\\\">{{isNew ? 'Guardar' : 'Actualizar'}}</button>\\n  </div>\\n\\n  <!-- CloseButton -->\\n  <button class=\\\"closeButton\\\" mat-dialog-close tabIndex=\\\"3\\\" color=\\\"warn\\\" mat-icon-button>\\n    <mat-icon>close</mat-icon>\\n  </button>\\n</form>\\n\"","import { Component, OnInit, OnDestroy, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { AddEditFamiliaMaterialesComponent } from '../familias-materiales/add-edit-familia-materiales.component';\nimport { DialogResults, DialogIcons } from '../../dialog.component';\nimport {\n  CatalogosService,\n  IMaterial,\n  ROUTE_MATERIALES,\n  UnidadesMaterial,\n  ICalibre,\n  IFamiliasMateriales,\n  ROUTE_FAMILIA_MATERIALES\n} from '../../catalogos.service';\nimport { DialogService } from '../../dialog.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UsuariosService } from '../../usuarios.service';\nimport { Subscription } from 'rxjs';\nimport {\n  IInputConfig,\n  ISelectOptions\n} from '../../common/wrap-inputs/wrap-inputs.component';\n\n@Component({\n  selector: 'cat-add-edit-material',\n  templateUrl: './add-edit-material.component.html',\n  styles: []\n})\nexport class AddEditMaterialComponent implements OnInit, OnDestroy {\n  isNew: boolean;\n  isLoading: boolean;\n  entity: IMaterial;\n  form: FormGroup;\n\n  calibre: number;\n\n  UnidadesMaterial = UnidadesMaterial;\n\n  onSuccess$: Subscription;\n  onError$: Subscription;\n\n  ViewForm: IInputConfig[][];\n\n  constructor(\n    public dialogRef: MatDialogRef<\n      AddEditFamiliaMaterialesComponent,\n      DialogResults\n    >,\n    @Inject(MAT_DIALOG_DATA) public data: IMaterial,\n    private catalogosService: CatalogosService,\n    private dialogService: DialogService,\n    private fb: FormBuilder,\n    private usuariosService: UsuariosService\n  ) {\n    this.entity = data;\n    this.isNew = this.entity ? false : true;\n    this.isLoading = true;\n    this.catalogosService\n      .getAllCollection<IFamiliasMateriales>(ROUTE_FAMILIA_MATERIALES)\n      .toPromise()\n      .then(value => {\n        const fams: ISelectOptions[] = value.Items.map(i => ({\n          display: i.NombreFamilia,\n          value: i.Id\n        }));\n        this.ViewForm = [\n          [\n            {\n              name: 'FamiliaMateriales_Id',\n              text: 'Familia de Materiales',\n              smflex: '100%',\n              type: 'select',\n              selectOptions: fams\n            }\n          ],\n          [{ name: 'Apariencia' }, { name: 'Caracteristicas' }],\n          [\n            {\n              name: 'Unidad',\n              text: 'Unidad de Calibre',\n              type: 'select',\n              selectOptions: [\n                { display: 'Micras', value: 0 },\n                { display: 'CI', value: 1 }\n              ]\n            },\n            {\n              name: 'FactorDensidad',\n              text: 'Factor de Densidad',\n              type: 'number'\n            }\n          ],\n          [\n            { name: 'PrecioInicial', text: 'Precio Inicial', type: 'currency' },\n            { name: 'CostoInicial', text: 'Costo Inicial', type: 'currency' }\n          ],\n          [\n            { name: 'Metalizado', type: 'checkbox' },\n            { name: 'Convenio', type: 'checkbox' }\n          ],\n          [{ name: 'FechaOperacion', text: 'Fecha de Operación', type: 'date' }]\n        ];\n        this.isLoading = false;\n      });\n  }\n\n  ngOnInit(): void {\n    this.onSuccess$ = this.catalogosService.onHttpComplete\n      .pipe()\n      .subscribe(o => {\n        this.dialogService\n          .showDialog('Correcto...', o, { Icon: DialogIcons.Success })\n          .then(() => this.dialogRef.close(DialogResults.Ok));\n      });\n\n    this.onError$ = this.catalogosService.onHttpError.pipe().subscribe(e => {\n      this.dialogService\n        .showDialog('Error...', this.dialogService.getModelError(e), {\n          Icon: DialogIcons.Error\n        })\n        .then(() => (this.isLoading = false));\n    });\n\n    this.createForm();\n  }\n  ngOnDestroy(): void {\n    this.onSuccess$.unsubscribe();\n    this.onError$.unsubscribe();\n  }\n\n  async createForm() {\n    this.entity = this.entity\n      ? this.entity\n      : {\n          Apariencia: '',\n          Caracteristicas: '',\n          Unidad: UnidadesMaterial.Micras,\n          FactorDensidad: 0,\n          PrecioInicial: 0,\n          CostoInicial: 0,\n          Metalizado: false,\n          Convenio: false,\n          FechaOperacion: new Date(),\n          Calibres: new Array<ICalibre>()\n        };\n\n    this.form = this.fb.group({\n      Id: [this.entity.Id],\n      FamiliaMateriales_Id: [\n        this.entity.FamiliaMateriales_Id,\n        Validators.required\n      ],\n      Apariencia: [this.entity.Apariencia, Validators.required],\n      Caracteristicas: [this.entity.Caracteristicas],\n      Unidad: [this.entity.Unidad],\n      FactorDensidad: [this.entity.FactorDensidad, Validators.required],\n      PrecioInicial: [this.entity.PrecioInicial, Validators.required],\n      CostoInicial: [this.entity.CostoInicial],\n      Metalizado: [this.entity.Metalizado],\n      Convenio: [this.entity.Convenio],\n      FechaOperacion: [this.entity.FechaOperacion, Validators.required]\n    });\n\n    this.form.valueChanges\n      .pipe()\n      .subscribe((g: IMaterial) => (this.entity.Unidad = g.Unidad));\n  }\n\n  async onSubmit() {\n    if (this.form.valid) {\n      this.entity = Object.assign(this.entity, this.form.value);\n      if (this.isNew) {\n        this.catalogosService.postEntity(this.entity, ROUTE_MATERIALES);\n      } else {\n        this.catalogosService.putEntity(this.entity, ROUTE_MATERIALES);\n      }\n    }\n  }\n\n  async RemoveCalibre(calibre: ICalibre) {\n    const idx = this.entity.Calibres.indexOf(calibre);\n    if (idx >= 0) {\n      this.entity.Calibres.splice(idx, 1);\n    } else {\n      console.error('no se encontro el elemento en la coleccion');\n    }\n  }\n\n  async AddCalibre(calibre: number) {\n    if (\n      calibre.toString() !== '' &&\n      calibre >= 0 &&\n      this.entity.Calibres.findIndex(\n        t => t.Valor.toString() === calibre.toString()\n      ) === -1\n    ) {\n      this.entity.Calibres.push({ MaterialId: this.entity.Id, Valor: calibre });\n    } else {\n      this.dialogService.showDialog(\n        'Error',\n        'El valor que intenta agregar ya existe o es invalido',\n        { Icon: DialogIcons.Error }\n      );\n      console.error('valor invalido');\n    }\n  }\n}\n","module.exports = \"<div class=\\\"outlet-content mat-typography\\\">\\n  <my-card *ngIf=\\\"!isLoading && !notFound else loader\\\" [Titulo]=\\\"'FAMILIA: ' + (entity.NombreFamilia ).toUpperCase()\\\" CardColor=\\\"primary\\\"\\n    [Descripcion]=\\\"entity.Id + ' - ' + (entity.NombreFamilia + ' ' + entity.Apariencia + ' ' + entity.Caracteristicas).toUpperCase()\\\"\\n    Icono=\\\"layer-group\\\" [HasFontawesomeIcon]=\\\"true\\\" [ShowPrint]=\\\"true\\\">\\n\\n    <div my-card-content style=\\\"overflow: auto;\\\" fxLayout=\\\"column\\\">\\n      <div fxLayout=\\\"row\\\">\\n        <div fxFlex style=\\\"padding:5px;\\\">\\n          <h2>Especificaciones</h2>\\n          <dl>\\n            <dt class=\\\"mat-body-2\\\">Apariencia:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.Apariencia}}</dd>\\n            <dt class=\\\"mat-body-2\\\">Caracteristicas:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.Caracteristicas}}</dd>\\n            <dt class=\\\"mat-body-2\\\">Unidad:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.Unidad}}</dd>\\n            <dt class=\\\"mat-body-2\\\">Factor de Densidad:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.FactorDensidad}}</dd>\\n            <dt class=\\\"mat-body-2\\\">Se usa en Metalizado:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.Metalizado ? 'Si' : 'No'}}</dd>\\n            <dt class=\\\"mat-body-2\\\">Fecha de Registro:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.FechaRegistro | date}}</dd>\\n            <dt class=\\\"mat-body-2\\\">Fecha de Operación:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.FechaOperacion | date}}</dd>\\n          </dl>\\n        </div>\\n        <mat-divider [vertical]=\\\"true\\\"> </mat-divider>\\n        <div fxFlex style=\\\"padding:5px;\\\">\\n          <h2>Precios y Costo</h2>\\n          <dl>\\n\\n            <dt class=\\\"mat-body-2\\\">Precio Inicial:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.PrecioInicial | currency:'MXN'}}</dd>\\n            <dt class=\\\"mat-body-2\\\">Costo Inicial:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.CostoInicial | currency:'MXN'}}</dd>\\n            <dt class=\\\"mat-body-2\\\">Precio Actual:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.PrecioActual | currency:'MXN'}}</dd>\\n            <dt class=\\\"mat-body-2\\\">Costo Inicial:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{+entity.PrecioActual - 5 | currency:'MXN'}}</dd>\\n            <dt class=\\\"mat-body-2\\\">Precio especial en Convenios:</dt>\\n            <dd class=\\\"mat-body-1\\\">{{entity.Convenio ? 'Si' : 'No'}}</dd>\\n          </dl>\\n        </div>\\n      </div>\\n      <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      <div>\\n        <div fxFlex style=\\\"padding:5px;\\\">\\n          <h2>Calibres Disponibles</h2>\\n          <mat-chip-list>\\n            <mat-chip *ngFor=\\\"let link of entity.Calibres\\\">{{ link.Valor }} </mat-chip>\\n          </mat-chip-list>\\n        </div>\\n      </div>\\n      <mat-divider [inset]=\\\"true\\\"></mat-divider>\\n      <div style=\\\"overflow:hidden\\\">\\n        <h2>Historial de cambios al Precio</h2>\\n        <div class=\\\"noprinted chart-container\\\" *ngIf=\\\"chart_\\\">\\n          <canvas id=\\\"movimientos{{Id}}\\\"></canvas>\\n        </div>\\n        <img class=\\\"onlyprint\\\" *ngIf=\\\"chart_ && !isLoadingResults\\\" src=\\\"{{imageOfChart(chart_)}}\\\" />\\n      </div>\\n\\n    </div>\\n  </my-card>\\n\\n\\n\\n  <ng-template #loader>\\n\\n    <div fxFLex=\\\"100%\\\" fxLayout=\\\"column\\\" style=\\\"min-height: 90vh\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-progress-spinner *ngIf=\\\"!notFound\\\" mode=\\\"indeterminate\\\" color=\\\"accent\\\"></mat-progress-spinner>\\n      <h2 *ngIf=\\\"!notFound\\\">Cargando ...</h2>\\n      <img *ngIf=\\\"notFound\\\" src=\\\"assets/404.png\\\">\\n      <h2 *ngIf=\\\"notFound\\\" class=\\\"red-fg\\\">No se ha encontrado el elemento</h2>\\n    </div>\\n\\n  </ng-template>\\n\\n\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport {\n  CatalogosService,\n  IMaterial,\n  ROUTE_MATERIALES,\n  prefixApi\n} from '../../../catalogos.service';\nimport { HttpClient } from '@angular/common/http';\nimport { formatDate } from '@angular/common';\nimport { Chart } from 'chart.js';\nimport { delay } from 'rxjs/operators';\n\n@Component({\n  selector: 'cat-detail-material',\n  templateUrl: './detail-material.component.html',\n  styleUrls: ['./detail-material.component.scss']\n})\nexport class DetailMaterialComponent implements OnInit, OnDestroy {\n  Id: number;\n  entity: IMaterial;\n  isLoading: boolean = true;\n  notFound: boolean = false;\n  routeSub$: Subscription;\n  routeSub2$: Subscription;\n\n  chart_: any = {};\n\n  constructor(\n    private http: HttpClient,\n    private route: ActivatedRoute,\n    private catalogosService: CatalogosService\n  ) {\n    this.routeSub2$ = this.route.url.subscribe(() => {\n      this.isLoading = true;\n      this.notFound = false;\n    });\n\n    this.routeSub$ = this.route.params.subscribe(params => {\n      this.Id = +params['Id'];\n      this.catalogosService\n        .getEntity<IMaterial>(this.Id, ROUTE_MATERIALES)\n        .then(val => {\n          this.entity = val;\n          this.isLoading = false;\n          this.fillChart(val.Id);\n        })\n        .catch(err => {\n          this.notFound = true;\n          this.isLoading = false;\n          console.log(err);\n        });\n    });\n\n    Chart.plugins.register({\n      afterDatasetsDraw: function(chart) {\n        const ctx = chart.ctx;\n\n        chart.data.datasets.forEach(function(dataset, i) {\n          const meta = chart.getDatasetMeta(i);\n          if (!meta.hidden) {\n            meta.data.forEach(function(element: any, index) {\n              // Draw the text in black, with the specified font\n\n              ctx.fillStyle = '#000';\n\n              const fontSize = 12;\n              const fontStyle = 'normal';\n              const fontFamily = 'Roboto';\n              ctx.font = Chart.helpers.fontString(\n                fontSize,\n                fontStyle,\n                fontFamily\n              );\n\n              // Just naively convert to string for now\n              const dataString = '$' + dataset.data[index].toString();\n\n              // Make sure alignment settings are correct\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n\n              const padding = 5;\n              const position = element.tooltipPosition();\n              ctx.fillText(\n                dataString,\n                position.x,\n                position.y - fontSize / 2 - padding\n              );\n            });\n          }\n        });\n      }\n    });\n  }\n\n  ngOnInit() {}\n  ngOnDestroy() {\n    this.routeSub$.unsubscribe();\n    this.routeSub2$.unsubscribe();\n  }\n\n  fillChart(id: number) {\n    this.http\n      .get(`${prefixApi}${ROUTE_MATERIALES}/chart/${id}`)\n      .subscribe((val: Array<any>) => {\n        const labels = val.map(v => formatDate(v.label, 'mediumDate', 'es-MX').split(' '));\n        const values = val.map(v => v.data);\n\n        const ctx = document.getElementById(\n          `movimientos${id}`\n        ) as HTMLCanvasElement;\n\n        const _chart = new Chart(ctx, {\n          type: 'line',\n          data: {\n            labels: labels,\n            datasets: [\n              {\n                label: 'Comportamiento del precio',\n                data: values,\n                fill: false,\n                borderColor: '#3cba9f',\n                lineTension: 0\n              }\n            ]\n          },\n          options: {\n            legend: { display: true },\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              xAxes: [{ display: true }],\n              yAxes: [{ display: true }]\n            }\n          }\n        });\n\n        this.chart_ = _chart;\n\n        const mediaQueryList = window.matchMedia('print');\n        mediaQueryList.addListener(function(mql) {\n          console.log(mql);\n          if (mql.matches) {\n            _chart.resize();\n            console.log('cambiando tamaño');\n            delay(500);\n          }\n        });\n      });\n  }\n\n  imageOfChart(chart: any) {\n    if (chart.toBase64Image !== undefined) {\n      return chart.toBase64Image();\n    }\n    return '';\n  }\n}\n","module.exports = \"<div class=\\\"outlet-content\\\">\\n  <my-card [Titulo]=\\\"'Materiales'\\\" [Descripcion]=\\\"'Se muestran los materiales disponibles en la base de datos'\\\" Icono=\\\"clone\\\"\\n    [HasFontawesomeIcon]=\\\"true\\\" [ShowMore]=\\\"isAdmin ? true : false\\\" [ShowPrint]=\\\"true\\\" [ShowAdd]=\\\"isAdmin ? true : false\\\" (ClickAdd)=\\\"AddOrEdit(null)\\\"\\n    (ClickAction)=\\\"fillCatalog()\\\" [ExtraButtons]=\\\"[{text:'Actualizar', icon:'refresh', description:'Actualiza los datos de la pagina actual', actionResult:'refresh'}]\\\">\\n\\n    <div my-card-content style=\\\"overflow: auto;\\\">\\n      <mat-table multiTemplateDataRows [dataSource]=\\\"catalogPage.Items\\\" style=\\\"min-width: 900px;\\\" matSort (matSortChange)=\\\"catalogosService.emitSort($event, this.pagConfig);\\\">\\n        <!-- Crea las columnas con datos desde el servidor -->\\n        <ng-container *ngFor=\\\"let column of columsToView()\\\">\\n\\n          <ng-container *ngIf=\\\"column.db && !column.sortable\\\" matColumnDef=\\\"{{column.column}}\\\">\\n            <mat-header-cell *matHeaderCellDef [fxFlex]=\\\"column.flex\\\"> {{column.text}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" [fxFlex]=\\\"column.flex\\\">\\n              <ng-container [ngSwitch]=\\\"column.type\\\">\\n                <ng-container *ngSwitchCase=\\\"'currency'\\\">\\n                  {{element[column.columnToShow] | currency:'MXN'}}\\n                </ng-container>\\n                <ng-container *ngSwitchCase=\\\"'date'\\\">\\n                  {{element[column.columnToShow] | date}}\\n                </ng-container>\\n                <ng-container *ngSwitchDefault>\\n                  {{element[column.columnToShow]}}\\n                </ng-container>\\n              </ng-container>\\n            </mat-cell>\\n          </ng-container>\\n\\n          <ng-container *ngIf=\\\"column.db && column.sortable\\\" matColumnDef=\\\"{{column.column}}\\\">\\n            <mat-header-cell mat-sort-header *matHeaderCellDef [fxFlex]=\\\"column.flex\\\"> {{column.text}} </mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let element\\\" [fxFlex]=\\\"column.flex\\\">\\n\\n              <ng-container [ngSwitch]=\\\"column.type\\\">\\n                <ng-container *ngSwitchCase=\\\"'currency'\\\">\\n                  {{element[column.columnToShow] | currency:'MXN'}}\\n                </ng-container>\\n                <ng-container *ngSwitchCase=\\\"'date'\\\">\\n                  {{element[column.columnToShow] | date}}\\n                </ng-container>\\n                <ng-container *ngSwitchDefault>\\n                  {{element[column.columnToShow]}}\\n                </ng-container>\\n              </ng-container>\\n\\n            </mat-cell>\\n\\n          </ng-container>\\n\\n        </ng-container>\\n\\n        <!-- Control de acciones -->\\n        <ng-container matColumnDef=\\\"ActionEdit\\\">\\n          <mat-header-cell class=\\\"noprinted\\\" *matHeaderCellDef fxFlex=\\\"150px\\\"> Acciones </mat-header-cell>\\n          <mat-cell class=\\\"noprinted\\\" *matCellDef=\\\"let row\\\" fxFlex=\\\"150px\\\">\\n\\n            <ng-container *ngIf=\\\"!isAdmin\\\">\\n              <div fxLayout=\\\"row\\\" fxFlex=\\\"100%\\\" fxLayoutAlign=\\\"center center\\\">\\n                <button class=\\\"green-700-fg\\\" mat-icon-button [routerLink]=\\\"row.Id\\\">\\n                  <mat-icon>info</mat-icon>\\n                </button>\\n              </div>\\n            </ng-container>\\n\\n            <ng-container *ngIf=\\\"isAdmin\\\">\\n              <button class=\\\"cyan-fg\\\" mat-icon-button [routerLink]=\\\"row.Id\\\">\\n                <mat-icon>info</mat-icon>\\n              </button>\\n              <button class=\\\"orange-fg\\\" mat-icon-button (click)=\\\"AddOrEdit(row)\\\">\\n                <mat-icon>edit</mat-icon>\\n              </button>\\n              <button class=\\\"red-fg\\\" mat-icon-button (click)=\\\"delete(row.Id)\\\">\\n                <mat-icon>delete</mat-icon>\\n              </button>\\n            </ng-container>\\n\\n          </mat-cell>\\n        </ng-container>\\n\\n\\n        <!-- Definicion de filas y columnas -->\\n        <mat-header-row *matHeaderRowDef=\\\"columns()\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let material; columns: columns();\\\"></mat-row>\\n      </mat-table>\\n      <mat-progress-bar color=\\\"accent\\\" *ngIf=\\\"isLoading\\\" mode=\\\"query\\\"></mat-progress-bar>\\n    </div>\\n\\n\\n    <div my-card-footer>\\n      <mat-paginator [length]=\\\"catalogPage.TotalCount\\\" [pageIndex]=\\\"pagConfig.pageNumber - 1\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[10,25,50,75,100]\\\"\\n        (page)=\\\"catalogosService.emitPaginator($event, pagConfig)\\\">\\n      </mat-paginator>\\n    </div>\\n  </my-card>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger\n} from '@angular/animations';\nimport {\n  CatalogosService,\n  ICatalogResponse,\n  IPageConfig,\n  OrderTypes,\n  ROUTE_MATERIALES,\n  Column,\n  IMaterial,\n  IFamiliasMateriales\n} from '../../catalogos.service';\nimport { UsuariosService } from '../../usuarios.service';\nimport { DialogService } from '../../dialog.service';\nimport { Subscription } from 'rxjs';\nimport { MatDialog } from '@angular/material';\nimport { AddEditMaterialComponent } from './add-edit-material.component';\nimport {\n  DialogResults,\n  DialogButtonsFlags,\n  DialogIcons\n} from '../../dialog.component';\n\n@Component({\n  selector: 'cat-materiales',\n  templateUrl: './materiales.component.html',\n  styles: []\n})\nexport class MaterialesComponent implements OnInit, OnDestroy {\n  /**\n   * Contenido del Catalogo\n   */\n  catalogPage: ICatalogResponse<IMaterial> = {\n    TotalCount: 0,\n    TotalPages: 0,\n    Items: null\n  };\n\n  /**\n   * Configuracion del Paginador\n   */\n  pagConfig: IPageConfig = {\n    pageSize: 10,\n    pageNumber: 1,\n    orderType: OrderTypes.ASC,\n    orderBy: 'Id',\n    query: ''\n  };\n\n  isLoading: boolean = false;\n  isAdmin: boolean = false;\n\n  needRefresh$: Subscription;\n  subIsAdmin$: Subscription;\n\n  constructor(\n    public catalogosService: CatalogosService,\n    private usuariosService: UsuariosService,\n    private dialogService: DialogService,\n    private dialog: MatDialog\n  ) {\n    this.needRefresh$ = this.catalogosService.needRefresh.subscribe(p => {\n      this.fillCatalog();\n    });\n\n    this.subIsAdmin$ = this.usuariosService.isAdmin().subscribe(o => {\n      this.isAdmin = o;\n      this.fillCatalog();\n    });\n  }\n\n  ngOnInit(): void {}\n\n  ngOnDestroy(): void {\n    this.subIsAdmin$.unsubscribe();\n    this.needRefresh$.unsubscribe();\n  }\n\n  /**\n   * Llena el catalogo\n   */\n  async fillCatalog() {\n    this.isLoading = true;\n    this.catalogPage = await this.catalogosService.getCollection<IMaterial>(\n      this.pagConfig,\n      ROUTE_MATERIALES\n    );\n    this.isLoading = false;\n  }\n\n  /**\n   * Define la coleccion de las columnas\n   */\n  columsToView(): Column[] {\n    return [\n      // new Column('Id', 'Id', { flex: '100px' }),\n      new Column('FamiliaMateriales_Id', 'Familia', {\n        columnToShow: 'NombreFamilia'\n      }),\n      new Column('Apariencia', 'Apariencia'),\n      new Column('Caracteristicas', 'Caracteristicas'),\n      new Column('PrecioActual', 'Precio Actual', { type: 'currency' }),\n      new Column('FechaRegistro', 'Fecha de Registro', { type: 'date' }),\n      new Column('FechaOperacion', 'Fecha de Operacion', { type: 'date' }),\n      // new Column('Unidad', 'Unidad'),\n      new Column('ActionEdit', 'Acciones', { sortable: false, db: false })\n    ];\n  }\n\n  /**\n   * Regresa el nombre de las columnas a mostrar\n   */\n  columns() {\n    return this.columsToView().map(p => p.column);\n  }\n\n  AddOrEdit(entity?: IMaterial) {\n    this.dialog\n      .open<AddEditMaterialComponent, IMaterial, DialogResults>(\n        AddEditMaterialComponent,\n        {\n          disableClose: true,\n          data: entity,\n          width: '800px'\n        }\n      )\n      .afterClosed()\n      .toPromise()\n      .then(r => {\n        if (r === DialogResults.Ok) {\n          this.fillCatalog();\n        }\n      });\n  }\n  delete(id: number) {\n    this.dialogService\n      .showDialog('Eliminar!!', 'Realmente desea Eliminar el material?', {\n        buttons: DialogButtonsFlags.Yes | DialogButtonsFlags.No,\n        Icon: DialogIcons.Question\n      })\n      .then(r => {\n        if (r === DialogResults.Yes) {\n          this.catalogosService.delEntity(id, ROUTE_MATERIALES);\n        }\n      });\n  }\n}\n","module.exports = \"<mat-nav-list>\\n  <a mat-list-item *ngIf=\\\"hasAddButton\\\" type=\\\"button\\\" (click)=\\\"close('add')\\\">\\n    <mat-icon mat-list-icon>add</mat-icon>\\n    <span mat-line>Agregar</span>\\n    <span class=\\\"mat-caption\\\" mat-line>Agrega un nuevo elemento a la base de datos</span>\\n  </a>\\n\\n  <a mat-list-item *ngIf=\\\"hasPrintButton\\\" type=\\\"button\\\" (click)=\\\"close('print')\\\">\\n    <mat-icon mat-list-icon>print</mat-icon>\\n    <h3 mat-line>Imprimir</h3>\\n    <p class=\\\"mat-caption\\\" mat-line>Imprime la pagina actual</p>\\n  </a>\\n\\n  <ng-container *ngFor=\\\"let button of extraButtons\\\">\\n    <a mat-list-item *ngIf=\\\"hasPrintButton\\\" type=\\\"button\\\" (click)=\\\"close(button.actionResult)\\\">\\n      <mat-icon *ngIf=\\\"button.icon\\\" mat-list-icon>{{button.icon}}</mat-icon>\\n      <h3 mat-line>{{button.text}}</h3>\\n      <p class=\\\"mat-caption\\\" mat-line>{{button.description}}</p>\\n    </a>\\n  </ng-container>\\n</mat-nav-list>\\n\"","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material';\n\nexport interface MyBottomSheetButton {\n  icon?: string;\n  text: string;\n  description: string;\n  actionResult: string;\n}\n\n@Component({\n  selector: 'app-bottom-actions-my-card',\n  templateUrl: './bottom-actions-my-card.component.html',\n  styles: [],\n})\nexport class BottomActionsMyCardComponent implements OnInit {\n  hasAddButton: boolean = false;\n  hasPrintButton: boolean = false;\n  extraButtons: MyBottomSheetButton[];\n\n  constructor(\n    private bottomSheetRef: MatBottomSheetRef<BottomActionsMyCardComponent>,\n    @Inject(MAT_BOTTOM_SHEET_DATA) public data: any\n  ) {\n    const defaults = {\n      hasAddButton: false,\n      hasPrintButton: false,\n      extraButtons: new Array< MyBottomSheetButton>()\n    };\n    const options = Object.assign(defaults, data);\n\n    this.hasAddButton = options.hasAddButton;\n    this.hasPrintButton = options.hasPrintButton;\n    this.extraButtons = options.extraButtons;\n  }\n\n  close(action: string) {\n    this.bottomSheetRef.dismiss(action);\n  }\n\n  ngOnInit() {}\n}\n","module.exports = \"<div style=\\\"position:relative\\\">\\n\\n\\n  <mat-card class=\\\"mat-elevation-z5 flatprint mat-card-outside-icon\\\">\\n\\n    <!-- <mat-card-header>\\n      <div *ngIf=\\\"Icono\\\" mat-card-avatar fxFlex=\\\"60px\\\" fxLayoutAlign=\\\"center center\\\">\\n        <ng-container *ngIf=\\\"HasFontawesomeIcon\\\">\\n          <fa-icon [icon]=\\\"['fas', Icono]\\\" size=\\\"3x\\\"></fa-icon>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"!HasFontawesomeIcon\\\">\\n          <mat-icon class=\\\"icon-large\\\">{{Icono}}</mat-icon>\\n        </ng-container>\\n      </div>\\n      <mat-card-title>{{Titulo}}</mat-card-title>\\n      <mat-card-subtitle>{{Descripcion}}</mat-card-subtitle>\\n\\n      <div class=\\\"mat-card-action-button-1\\\" fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10px\\\">\\n        <button *ngIf=\\\"ShowAdd\\\" mat-mini-fab class=\\\"bg noprinted\\\" [ngClass]=\\\"addBtnClass\\\" (click)=\\\"clickAdd()\\\">\\n          <mat-icon>add</mat-icon>\\n        </button>\\n        <button *ngIf=\\\"ShowPrint\\\" mat-mini-fab class=\\\"bg noprinted\\\" [ngClass]=\\\"addBtnClass\\\" (click)=\\\"Print()\\\">\\n          <mat-icon>print</mat-icon>\\n        </button>\\n        <button *ngIf=\\\"ShowMore\\\" mat-mini-fab class=\\\"bg noprinted\\\" [ngClass]=\\\"addBtnClass\\\" (click)=\\\"openBottomSheet()\\\">\\n          <mat-icon>more_horiz</mat-icon>\\n        </button>\\n      </div>\\n      <span class=\\\"relleno\\\"></span>\\n      <ng-content select=\\\"[my-card-header]\\\"></ng-content>\\n    </mat-card-header> -->\\n    <div *ngIf=\\\"Icono\\\" class=\\\"mat-card-icon flatprint mat-elevation-z10\\\" [ngClass]=\\\"getColor()\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n      <ng-container *ngIf=\\\"HasFontawesomeIcon\\\">\\n        <fa-icon [icon]=\\\"['fas', Icono]\\\" [fixedWidth]=\\\"true\\\" size=\\\"3x\\\"></fa-icon>\\n      </ng-container>\\n      <ng-container *ngIf=\\\"!HasFontawesomeIcon\\\">\\n        <mat-icon class=\\\"icon-large\\\">{{Icono}}</mat-icon>\\n      </ng-container>\\n    </div>\\n\\n    <mat-card-header class=\\\"my-card-header\\\">\\n      <mat-card-title style=\\\"font-size: 20px;\\\">{{Titulo}}</mat-card-title>\\n      <mat-card-subtitle>{{Descripcion}}</mat-card-subtitle>\\n      <span class=\\\"relleno\\\"></span>\\n      <ng-content select=\\\"[my-card-header]\\\"></ng-content>\\n      <span class=\\\"relleno\\\"></span>\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutGap=\\\"10px\\\">\\n        <button *ngIf=\\\"ShowAdd\\\" type=\\\"button\\\" mat-mini-fab class=\\\"lime noprinted\\\" (click)=\\\"clickAdd()\\\">\\n          <mat-icon>add</mat-icon>\\n        </button>\\n        <button *ngIf=\\\"ShowPrint\\\" type=\\\"button\\\" mat-mini-fab class=\\\"cyan noprinted\\\" (click)=\\\"Print()\\\">\\n          <mat-icon>print</mat-icon>\\n        </button>\\n        <button *ngIf=\\\"ShowMore\\\" type=\\\"button\\\" mat-mini-fab class=\\\"noprinted\\\" [ngClass]=\\\"addBtnClass\\\" (click)=\\\"openBottomSheet()\\\">\\n          <mat-icon>more_horiz</mat-icon>\\n        </button>\\n      </div>\\n    </mat-card-header>\\n\\n\\n    <ng-content select=\\\"[my-card-body]\\\"></ng-content>\\n    <mat-card-content>\\n      <ng-content select=\\\"[my-card-content]\\\"></ng-content>\\n    </mat-card-content>\\n    <mat-card-footer #myCardFooter [ngClass]=\\\"{'hideElement':!showFooter}\\\">\\n      <ng-content select=\\\"[my-card-footer]\\\"></ng-content>\\n    </mat-card-footer>\\n  </mat-card>\\n</div>\\n\"","module.exports = \".hideElement {\\n  display: none; }\\n\\n:host .mat-icon.icon-large {\\n  width: 54px;\\n  height: 54px;\\n  font-size: 54px; }\\n\\n.my-card-header {\\n  margin-left: 80px !important; }\\n\"","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  AfterViewInit,\n  ChangeDetectorRef,\n  Renderer2,\n  ElementRef\n} from '@angular/core';\nimport { ObservableMedia } from '@angular/flex-layout';\nimport { MatBottomSheet } from '@angular/material';\nimport {\n  BottomActionsMyCardComponent,\n  MyBottomSheetButton\n} from './bottom-actions-my-card.component';\n\nexport enum ClassIcons {\n  Mi,\n  Fa\n}\nexport interface IMyCardIcon {\n  iconName: string;\n  iconType?: ClassIcons;\n}\n\n@Component({\n  selector: 'my-card',\n  templateUrl: './my-card.component.html',\n  styleUrls: ['./my-card.component.scss']\n})\nexport class MyCardComponent implements OnInit, AfterViewInit {\n  @Input()\n  Titulo: string = 'Card';\n  @Input()\n  Descripcion: string = '';\n  @Input()\n  Icono: string;\n  @Input()\n  HasFontawesomeIcon: boolean = false;\n  @Input()\n  CardColor: string = 'primary';\n  @Input()\n  ColorClass: string = null;\n  @Input()\n  ShowAdd: boolean = false;\n  @Input()\n  ShowPrint: boolean = false;\n  @Input()\n  ShowMore: boolean = false;\n  @Input()\n  ExtraButtons: MyBottomSheetButton[];\n  @Input()\n  addBtnClass: string = 'grey-200';\n  @Output()\n  ClickAdd: EventEmitter<any> = new EventEmitter();\n  @Output()\n  ClickAction: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('myCardFooter')\n  myCardFooter;\n\n  showFooter: boolean = false;\n\n  getColor() {\n    if (this.ColorClass) {\n      return this.ColorClass;\n    } else {\n      return 'bg-' + this.CardColor;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.showFooter =\n      this.myCardFooter.nativeElement &&\n      this.myCardFooter.nativeElement.children.length > 0;\n    this.cdRef.detectChanges();\n  }\n\n  clickAdd() {\n    this.ClickAdd.emit();\n  }\n\n  Print() {\n    const doc = window.open();\n    const logo = document.getElementsByClassName('logo');\n    doc.window.document.write(`\n    <html>\n      <head>\n      ${document.head.innerHTML}\n      <head>\n      <body class=\"lt mat-typography\">\n        ${this.elRef.nativeElement.innerHTML}\n      </body>\n      <footer>\n          ${logo[0].outerHTML}\n      </footer>\n    </html>\n    `);\n    for (const itm of Array.from(\n      doc.window.document.getElementsByClassName('autoOverflow')\n    )) {\n      this.render.removeClass(itm, 'autoOverflow');\n    }\n\n    setTimeout(() => {\n      doc.window.print();\n      doc.window.close();\n    }, 100);\n  }\n\n  openBottomSheet() {\n    this.bottomShet\n      .open(BottomActionsMyCardComponent, {\n        data: {\n          hasAddButton: this.ShowAdd,\n          hasPrintButton: this.ShowPrint,\n          extraButtons: this.ExtraButtons\n        }\n      })\n      .afterDismissed()\n      .toPromise()\n      .then(res => {\n        switch (res) {\n          case 'add':\n            this.clickAdd();\n            break;\n          case 'print':\n            this.Print();\n            break;\n          default:\n            this.ClickAction.emit(res);\n            break;\n        }\n      });\n  }\n\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private media: ObservableMedia,\n    private bottomShet: MatBottomSheet,\n    private render: Renderer2,\n    private elRef: ElementRef\n  ) {\n    window.onbeforeprint = e => {};\n  }\n\n  ngOnInit() {}\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  ViewChildren,\n  QueryList,\n  AfterViewInit,\n  ContentChildren,\n  AfterContentInit,\n} from '@angular/core';\nimport {\n  FormControl,\n  FormGroup,\n  Validators,\n  ValidatorFn,\n  FormGroupDirective,\n} from '../../../../node_modules/@angular/forms';\nimport { ObservableMedia } from '@angular/flex-layout';\nimport { DeviceDetectorService } from 'ngx-device-detector';\n@Component({\n  selector: 'wrap-inputs',\n  template: `\n  <div fxLayout=\"row wrap\" class=\"end-wrap-5\" #wrapInput [formGroup]=\"fGroup\" fxLayoutAlign=\"space-between start\"  fxFlexFill fxLayoutGap=\"5px\">\n\n      <ng-container *ngFor=\"let ctl of controls\" [ngSwitch]=\"ctl.type\">\n\n        <!-- INPUT AS SELECT -->\n        <mat-form-field appearance=\"standard\" fxFlex=\"{{(ctl.flex ? ctl.flex : '100%')}}\" fxFlex.gt-sm=\"{{(ctl.smflex ? ctl.smflex : '48%')}}\" *ngSwitchCase=\"'select'\">\n          <mat-label>{{ctl.text ? ctl.text : ctl.name}}</mat-label>\n          <mat-select [name]=\"ctl.name\" formControlName=\"{{ctl.name}}\">\n            <mat-option *ngFor=\"let item of ctl.selectOptions\" [value]=\"item.value\">\n              {{item.display}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <!-- INPUT AS DATEPICKER -->\n\n        <mat-form-field appearance=\"standard\" class=\"datepicker\"   fxFlex=\"{{(ctl.flex ? ctl.flex : '100%')}}\" fxFlex.gt-sm=\"{{(ctl.smflex ? ctl.smflex : '48%')}}\" *ngSwitchCase=\"'date'\" >\n          <mat-label>{{ctl.text ? ctl.text : ctl.name}}</mat-label>\n          <input [name]=\"ctl.name\" [autocomplete]=\"ctl.autocomplete\" formControlName=\"{{ctl.name}}\" readonly=\"readonly\" matInput\n                [min]=\"ctl.min\" [max]=\"ctl.max\" [matDatepicker]=\"picker\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n          <mat-datepicker [touchUi]=\"deviceService.isMobile()\" #picker></mat-datepicker>\n          <mat-hint align=\"end\">Seleccione aquí la fecha ^</mat-hint>\n          <mat-error *ngIf=\"fGroup.controls[ctl.name].invalid\">\n            {{getErrorMessage(ctl.name, ctl.text)}}\n          </mat-error>\n        </mat-form-field>\n\n        <!-- INPUT AS CURRENCY -->\n        <mat-form-field appearance=\"standard\" fxFlex=\"{{(ctl.flex ? ctl.flex : '100%')}}\" fxFlex.gt-sm=\"{{(ctl.smflex ? ctl.smflex : '48%')}}\" *ngSwitchCase=\"'currency'\">\n          <mat-label>{{ctl.text ? ctl.text : ctl.name}}</mat-label>\n          <input [name]=\"ctl.name\" [autocomplete]=\"ctl.autocomplete\" type=\"number\" matInput formControlName=\"{{ctl.name}}\">\n          <span matPrefix>$&nbsp;</span>\n          <mat-error *ngIf=\"fGroup.controls[ctl.name].invalid\">\n          {{getErrorMessage(ctl.name, ctl.text)}}\n          </mat-error>\n        </mat-form-field>\n\n        <!-- INPUT AS CHECKBOX -->\n        <div *ngSwitchCase=\"'checkbox'\" fxLayoutAlign=\"start center\" class=\"checkbox-container\" fxFlex=\"{{(ctl.flex ? ctl.flex : '100%')}}\" fxFlex.gt-sm=\"{{(ctl.smflex ? ctl.smflex : '48%')}}\">\n          <mat-checkbox formControlName=\"{{ctl.name}}\">\n            {{ctl.text ? ctl.text : ctl.name}}\n          </mat-checkbox>\n        </div>\n\n        <!-- INPUT AS DEFAULT -->\n        <mat-form-field appearance=\"standard\" fxFlex=\"{{(ctl.flex ? ctl.flex : '100%')}}\" fxFlex.gt-sm=\"{{(ctl.smflex ? ctl.smflex : '48%')}}\" *ngSwitchDefault>\n          <mat-label>{{ctl.text ? ctl.text : ctl.name}}</mat-label>\n          <input [name]=\"ctl.name\" [autocomplete]=\"ctl.autocomplete\" [type]=\"ctl.type ? ctl.type : 'textbox'\" matInput formControlName=\"{{ctl.name}}\">\n          <span matSuffix *ngIf=\"ctl.unit\">{{ctl.unit}}</span>\n          <mat-error *ngIf=\"fGroup.controls[ctl.name].invalid\">\n          {{getErrorMessage(ctl.name, ctl.text)}}\n          </mat-error>\n        </mat-form-field>\n\n      </ng-container>\n  </div>\n  `,\n  styles: ['.checkbox-container{min-height: 60px;}'],\n})\nexport class WrapInputsComponent implements OnInit {\n  @Input()\n  controls: Array<IInputConfig>;\n  @Input()\n  fGroup: FormGroup;\n\n  getErrorMessage(controlName: string, text: string) {\n    const ctl = this.fGroup.controls[controlName];\n    if (ctl.hasError('required')) {\n      return `El campo \"${text ? text : controlName}\" es requerido`;\n    } else if (ctl.hasError('email')) {\n      return 'El formato de Email no es valido';\n    } else if (ctl.hasError('min')) {\n      return 'El valor minimo es ' + ctl.getError('min').min;\n    } else if (ctl.hasError('max')) {\n      return 'El valor minimo es ' + ctl.getError('max').max;\n    } else if (ctl.hasError('minlength')) {\n      return 'El largo minimo es de ' + ctl.getError('minlength').requiredLength;\n    } else if (ctl.hasError('maxlength')) {\n      return 'El maximo es de ' + ctl.getError('maxlength').requiredLength;\n    } else if (ctl.hasError('pattern')) {\n      return `Valor invalido para ${text ? text : controlName} `;\n    }\n  }\n\n  constructor(public media: ObservableMedia, public deviceService: DeviceDetectorService) {}\n\n  ngOnInit() {}\n}\n\n/**\n * name, text?, flex?, smflex?, type?, slectOptions?, min?, max?, autocomplete?\n */\nexport interface IInputConfig {\n  name: string;\n  text?: string;\n  flex?: string;\n  smflex?: string;\n\n  /**\n   * [select: 'debe contener tambien selecOptions', date, currency, checkbox, default]\n   */\n  type?: string;\n\n  /**\n   * {display: texto a Mostrar, value: valor del option}\n   */\n  selectOptions?: Array<ISelectOptions>;\n  min?: any;\n  max?: any;\n  autocomplete?: string;\n  unit?: string;\n}\nexport interface ISelectOptions {\n  display: string;\n  value: any;\n}\n\n@Component({\n  selector: 'wrap-input-container,[wrap-input-container]',\n  template: `<ng-content></ng-content>`,\n  styles: [],\n})\nexport class WrapInputsContainerComponent implements AfterContentInit {\n  @Input()\n  fGroup: FormGroup;\n  @ContentChildren(WrapInputsComponent)\n  wraps: QueryList<WrapInputsComponent>;\n\n  constructor() {}\n\n  ngAfterContentInit() {\n    for (const wrap of this.wraps.toArray()) {\n      wrap.fGroup = this.fGroup;\n    }\n  }\n}\n","import { BREAKPOINT } from '@angular/flex-layout';\r\n\r\nconst PRINT_BREAKPOINTS = [\r\n  {\r\n    alias: 'print',\r\n    suffix: 'Print',\r\n    mediaQuery: 'print',\r\n    overlapping: false,\r\n  },\r\n];\r\n\r\nexport const CustomBreakPointsProvider = {\r\n  provide: BREAKPOINT,\r\n  useValue: PRINT_BREAKPOINTS,\r\n  multi: true,\r\n};\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '../../node_modules/@angular/material';\n\nexport enum DialogIcons {\n  None,\n  Success,\n  Error,\n  Info,\n  Question\n}\n\nexport enum DialogButtonsFlags {\n  none = 0,\n  Ok = 1 << 0,\n  Cancel = 1 << 1,\n  Yes = 1 << 2,\n  No = 1 << 3\n}\n\nexport interface DialogData {\n  Message: string;\n  Title: string;\n  Icon: DialogIcons;\n  buttons: DialogButtonsFlags;\n  hasCloseButton: boolean;\n}\n\nexport enum DialogResults {\n  Ok,\n  Cancel,\n  Yes,\n  No\n}\n\n\n@Component({\n  selector: 'app-dialog',\n  template: `\n  <div style=\"position: relative\" fxLayout=\"row\" fxLayoutGap=\"15px\" class=\"mat-typography\">\n  <!-- CloseButton -->\n  <button class=\"closeButton\" *ngIf=\"data.hasCloseButton\"  tabIndex=\"3\" color=\"warn\" mat-icon-button (click)=\"CancelResult()\">\n    <mat-icon>close</mat-icon>\n  </button>\n  <!-- DialogIcon -->\n  <div fxFlex=\"80px\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n    <fa-icon [fixedWidth]=\"true\" [style.color]=\"ColorIcon\" [icon]=\"DialogIcon\" size=\"4x\"></fa-icon>\n  </div>\n  <!-- DialogContent -->\n  <div fxFlex=\"100%\">\n\n    <h2 mat-dialog-title>{{data.Title}}</h2>\n    <div mat-dialog-content [innerHTML]=\"data.Message\">\n    </div>\n\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n      <button *ngIf=\"HasFlag(data.buttons, DialogButtons.No)\" tabIndex=\"0\" (click)=\"NoResult()\" color=\"warn\" mat-stroked-button>No</button>\n      <button *ngIf=\"HasFlag(data.buttons, DialogButtons.Yes)\"  tabIndex=\"1\" (click)=\"YesResult()\" color=\"primary\" mat-stroked-button>Si</button>\n      <button *ngIf=\"HasFlag(data.buttons, DialogButtons.Cancel)\"  tabIndex=\"0\" (click)=\"CancelResult()\" color=\"warn\" mat-stroked-button>Cancelar</button>\n      <button *ngIf=\"HasFlag(data.buttons, DialogButtons.Ok)\"  tabIndex=\"1\" (click)=\"OkResult()\" color=\"primary\" mat-stroked-button>Ok</button>\n    </div>\n\n  </div>\n\n</div>\n  `,\n  styles: []\n})\nexport class DialogComponent implements OnInit {\n  DialogButtons = DialogButtonsFlags;\n\n  constructor(public dialogRef: MatDialogRef<DialogComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n    this.data.buttons = data.buttons === null || data.buttons === 0 ? DialogButtonsFlags.Ok : data.buttons;\n  }\n\n  ngOnInit() {\n  }\n\n  HasFlag(value: DialogButtonsFlags, compare: DialogButtonsFlags) {\n    if (value & compare) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  get DialogIcon() {\n    switch (this.data.Icon) {\n      case DialogIcons.Error:\n        return ['fas', 'times-circle'];\n      case DialogIcons.Info:\n        return ['fas', 'info-circle'];\n      case DialogIcons.Question:\n        return ['fas', 'question-circle'];\n      case DialogIcons.Success:\n        return ['fas', 'check-circle'];\n      default:\n        return ['fas', 'info-circle'];\n    }\n  }\n\n  get ColorIcon() {\n    switch (this.data.Icon) {\n      case DialogIcons.Error:\n        return '#f44336';\n      case DialogIcons.Info:\n        return '#03a9f4';\n      case DialogIcons.Question:\n        return '#304ffe';\n      case DialogIcons.Success:\n        return '#4caf50';\n      default:\n        return '#03a9f4';\n    }\n  }\n\n  OkResult() {\n    this.dialogRef.close(DialogResults.Ok);\n  }\n  CancelResult() {\n    this.dialogRef.close(DialogResults.Cancel);\n  }\n  YesResult() {\n    this.dialogRef.close(DialogResults.Yes);\n  }\n  NoResult() {\n    this.dialogRef.close(DialogResults.No);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '../../node_modules/@angular/material';\r\nimport { DialogComponent, DialogButtonsFlags, DialogIcons, DialogResults } from './dialog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DialogService {\r\n\r\n  constructor(private dialog: MatDialog) { }\r\n  /**\r\n * Controlador de los dialogos.\r\n * @param Title Titulo del dialogo\r\n * @param Message Mensaje que se mostrara en el dialogo\r\n * @param options buttons: Botones del cuadro de dialogo, Icon: Icono que se mostrara\r\n */\r\n  showDialog(\r\n    Title: string,\r\n    Message: string,\r\n    options?: { buttons?: DialogButtonsFlags, Icon?: DialogIcons, hasCloseButton?: boolean }): Promise<DialogResults> {\r\n\r\n    const defaults_ = {\r\n      buttons: DialogButtonsFlags.Ok,\r\n      Icon: DialogIcons.Info,\r\n      hasCloseButton: false\r\n    };\r\n    const options_ = Object.assign(defaults_, options);\r\n    const dialogRef = this.dialog.open(DialogComponent, {\r\n      disableClose: true,\r\n      data: {\r\n        Message: Message,\r\n        Title: Title,\r\n        buttons: options_.buttons,\r\n        Icon: options_.Icon\r\n      }\r\n    });\r\n\r\n    return new Promise<DialogResults>((resolve, rejected) => {\r\n      dialogRef.afterClosed().subscribe((res: DialogResults) => resolve(res));\r\n    });\r\n\r\n  }\r\n\r\n  getModelError(error: any): string {\r\n    let errormsg = '<dl>';\r\n    const errors: object = error.error.ModelState;\r\n    const errorMsg: string = error.error.Message;\r\n\r\n    if (errors) {\r\n\r\n      for (const i in errors) {\r\n        if (errors.hasOwnProperty(i)) {\r\n          if (Array.isArray(errors[i])) {\r\n            errormsg += `<dt>${i.replace('model.', '')}:</dt>`;\r\n            errors[i].forEach(v => {\r\n              errormsg += `<dd>${v}</dd>`;\r\n            });\r\n          }\r\n        }\r\n      }\r\n    } else if (errorMsg) {\r\n      errormsg += `<dt>${errorMsg}</dt>`;\r\n    } else {\r\n      errormsg += `<dt>Operación no valida</dt>`;\r\n    }\r\n    errormsg += '</dl>';\r\n    return errormsg;\r\n  }\r\n}\r\n","module.exports = \"<mat-card class=\\\"mat-card-theme mat-primary\\\">\\n  <mat-card-header>\\n    <mat-card-title>Bienvenido</mat-card-title>\\n    <mat-card-subtitle>Excel Nobleza</mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\\n      magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\n      consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\\n      Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button>Correcto</button>\\n  </mat-card-actions>\\n</mat-card>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-initial-page',\n  templateUrl: './initial-page.component.html',\n  styleUrls: ['./initial-page.component.scss']\n})\nexport class InitialPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"outlet-content\\\">\\r\\n  <div fxLayout=\\\"column\\\" fxFlex=\\\"100%\\\" fxFlexFill fxLayoutAlign=\\\"center center\\\">\\r\\n\\r\\n    <mat-spinner *ngIf=\\\"loading\\\" [mode]=\\\"'indeterminate'\\\"></mat-spinner>\\r\\n    <mat-card *ngIf=\\\"!loading\\\" fxLayout=\\\"column\\\" class=\\\"mat-elevation-z20 card\\\">\\r\\n\\r\\n      <img mat-card-image fxFlex=\\\"100%\\\" src=\\\"assets/logocol.svg\\\">\\r\\n\\r\\n      <mat-card-header>\\r\\n        <mat-card-title>Bienvenido</mat-card-title>\\r\\n        <mat-card-subtitle>Para continuar, por favor ingrese sus credenciales</mat-card-subtitle>\\r\\n      </mat-card-header>\\r\\n\\r\\n\\r\\n      <mat-divider [inset]=\\\"true\\\">\\r\\n      </mat-divider>\\r\\n      <mat-card-content fxLayout=\\\"column\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput [(ngModel)]=\\\"userLogin.username\\\" placeholder=\\\"Correo Electronico\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field>\\r\\n          <input type=\\\"password\\\" [(ngModel)]=\\\"userLogin.password\\\" matInput placeholder=\\\"Contraseña\\\">\\r\\n        </mat-form-field>\\r\\n      </mat-card-content>\\r\\n\\r\\n      <mat-card-actions fxLayoutAlign=\\\"space-around center\\\">\\r\\n        <button color=\\\"primary\\\" (click)=\\\"login()\\\" mat-raised-button>\\r\\n          <mat-icon>person</mat-icon>\\r\\n          Entrar\\r\\n        </button>\\r\\n      </mat-card-actions>\\r\\n\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \":host {\\n  height: calc(98vh - 10px); }\\n  :host.myClass {\\n    flex: 1 1 100%; }\\n  .card {\\n  max-width: 300px; }\\n  .outlet-content {\\n  height: 100% !important; }\\n\"","import { DialogIcons } from './../dialog.component';\r\nimport { DialogService } from './../dialog.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { UserLogin, UsuariosService } from '../usuarios.service';\r\nimport { Router, ActivatedRoute } from '../../../node_modules/@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  loading: boolean = false;\r\n  toRoute: string;\r\n  userLogin: UserLogin = { username: '', password: '', grant_type: 'password' };\r\n  sub: any;\r\n\r\n  constructor(\r\n    private usuariosService: UsuariosService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private dialogService: DialogService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.sub = this.route.queryParams.subscribe(v => {\r\n      this.toRoute = v.toRoute;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.sub.unsubscribe();\r\n  }\r\n\r\n  login() {\r\n    this.loading = true;\r\n    const promiseLogin = this.usuariosService.login(\r\n      this.userLogin,\r\n      this.toRoute,\r\n      () => {\r\n        this.loading = false;\r\n      },\r\n      e => {\r\n        this.dialogService.showDialog('Error...', e.error.error_description, {\r\n          Icon: DialogIcons.Error\r\n        });\r\n        this.loading = false;\r\n      }\r\n    );\r\n  }\r\n}\r\n","﻿import { MatPaginatorIntl } from '@angular/material';\r\n\r\nexport class MatPaginatorIntlCro extends MatPaginatorIntl {\r\n  itemsPerPageLabel = 'Tamaño:';\r\n  nextPageLabel = 'Siguiente';\r\n  previousPageLabel = 'Anterior';\r\n\r\n  getRangeLabel = function (page, pageSize, length) {\r\n    if (length === 0 || pageSize === 0) {\r\n      return '0-' + length;\r\n    }\r\n    length = Math.max(length, 0);\r\n    const startIndex = page * pageSize;\r\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\r\n    const endIndex = startIndex < length ?\r\n      Math.min(startIndex + pageSize, length) :\r\n      startIndex + pageSize;\r\n    return startIndex + 1 + '-' + endIndex + ':' + length;\r\n  };\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport {\n  faUserPlus,\n  faCoffee,\n  faTimes,\n  faInfoCircle,\n  faUsers,\n  faCheck,\n  faTimesCircle,\n  faQuestionCircle,\n  faCheckCircle,\n  faEdit,\n  faPlusCircle,\n  faHome,\n  faCogs,\n  faCubes,\n  faTint,\n  faUser,\n  faClone,\n  faBox,\n  faBook,\n  faObjectGroup,\n  faDotCircle,\n  faSignOutAlt,\n  faLayerGroup,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\n\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nlibrary.add(\n  faUserPlus,\n  faCoffee,\n  faTimes,\n  faTimesCircle,\n  faInfoCircle,\n  faQuestionCircle,\n  faCheckCircle,\n  faUsers,\n  faCheck,\n  faEdit,\n  faPlusCircle,\n  faHome,\n  faCogs,\n  faCubes,\n  faTint,\n  faUser,\n  faClone,\n  faObjectGroup,\n  faDotCircle,\n  faBox,\n  faBook,\n  faSignOutAlt,\n  faLayerGroup\n);\n\n@NgModule({\n  imports: [\n    FontAwesomeModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    RouterModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    BrowserAnimationsModule,\n    CommonModule,\n  ],\n  exports: [\n    FontAwesomeModule,\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    FlexLayoutModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [],\n})\nexport class MaterialModule {}\n","﻿import { Injectable, NgZone } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpResponse,\r\n  HttpErrorResponse,\r\n  HttpResponseBase\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, filter, map } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private router: Router, private ngZone: NgZone) { }\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const started = Date.now();\r\n\r\n    request = request.clone({\r\n      setHeaders: {\r\n        Authorization: 'Bearer ' + sessionStorage.getItem('accessToken')\r\n      }\r\n    });\r\n\r\n    return next.handle(request).pipe(tap(event => {\r\n      // if (event instanceof HttpResponse) {\r\n      //   const elapsed = Date.now() - started;\r\n      //   console.log(`La respuesta desde ${request.urlWithParams} tomó ${elapsed} ms.`);\r\n      // }\r\n    }));\r\n  }\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, BehaviorSubject } from '../../node_modules/rxjs';\r\n\r\nexport enum Actions {\r\n  Add,\r\n  Remove,\r\n}\r\n\r\n/**\r\n * Clase  que contiene los datos de inicio de sesión\r\n */\r\nexport class UserLogin {\r\n  grant_type: 'password';\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport interface UserInfo {\r\n  Email: string;\r\n  Password: string;\r\n  ConfirmPassword: string;\r\n  Nombre: string;\r\n  ApellidoPaterno: string;\r\n  ApellidoMaterno: string;\r\n  Clave: number;\r\n}\r\n\r\nexport interface BasicInfoUser {\r\n  Nombre: string;\r\n  Email: string;\r\n  EmailConfirmaed: boolean;\r\n  Id: string;\r\n  Roles: string[];\r\n}\r\n\r\nexport interface User {\r\n  Nombre: string;\r\n  ApellidoPaterno: string;\r\n  ApellidoMaterno: string;\r\n  Estatus: any;\r\n  Email: string;\r\n}\r\n\r\nexport interface AddRemoveUserRoleModel {\r\n  Role: string;\r\n  Action: Actions;\r\n  UserId: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UsuariosService {\r\n  private data1 = new BehaviorSubject<boolean>(false);\r\n  private User = new BehaviorSubject<BasicInfoUser>({\r\n    Nombre: 'Desconocido',\r\n    Email: '--',\r\n    EmailConfirmaed: false,\r\n    Roles: [],\r\n    Id: '0',\r\n  });\r\n\r\n  public UserRoles: string[] = [];\r\n  // public isAdmin_: Observable<boolean>;\r\n\r\n  constructor(private http: HttpClient, private router: Router, private ngZone: NgZone) {\r\n    this.refreshisAdmin();\r\n  }\r\n\r\n  private refreshisAdmin() {\r\n    if (this.hasToken()) {\r\n      this.getUserRoles()\r\n        .toPromise()\r\n        .then(r => {\r\n          this.UserRoles = r;\r\n          let ret: boolean = false;\r\n          for (const v of ['Administrador', 'Sistemas', 'Develop']) {\r\n            if (this.UserRoles != null && this.UserRoles.includes(v.replace('', ''))) {\r\n              ret = true;\r\n            }\r\n          }\r\n          this.data1.next(ret);\r\n        });\r\n\r\n      this.GetUsers()\r\n        .toPromise()\r\n        .then(u =>\r\n          this.User.next(u.filter(p => p.Id.toString() === this.getUserId().toString())[0]),\r\n        );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registra un usuario nuevo en la App\r\n   */\r\n  public registrar(userInfo: UserInfo) {\r\n    return this.http.post('/api/Account/Register', userInfo);\r\n  }\r\n\r\n  /**\r\n   * Regresa la lista de usuarios disponibles\r\n   */\r\n  public GetUsers() {\r\n    return this.http.get<BasicInfoUser[]>('/api/Account/users');\r\n  }\r\n\r\n  /**\r\n   * Genera el Token de credenciales\r\n   * @param userLogin Credenciales de incio de sesión\r\n   */\r\n  public login(\r\n    userLogin: UserLogin,\r\n    toRoute: string = '',\r\n    successCallback: Function = () => {},\r\n    errorCallback: (error: HttpErrorResponse) => void,\r\n  ) {\r\n    this.http\r\n      .post(\r\n        '/TOKEN',\r\n        'username=' +\r\n          userLogin.username +\r\n          '&password=' +\r\n          userLogin.password +\r\n          '&grant_type=password',\r\n        { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } },\r\n      )\r\n      .subscribe(\r\n        (resp: any) => {\r\n          sessionStorage.setItem('userName', resp.userName);\r\n          sessionStorage.setItem('userId', resp.userId);\r\n          sessionStorage.setItem('userRoles', resp.userRoles);\r\n          sessionStorage.setItem('accessToken', resp.access_token);\r\n          sessionStorage.setItem('refreshToken', resp.refresh_token);\r\n          this.refreshisAdmin();\r\n          this.goToRoute(toRoute);\r\n          successCallback();\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          console.log(error);\r\n          errorCallback(error);\r\n        },\r\n      );\r\n  }\r\n\r\n  public getRolesAvailables(): Observable<string[]> {\r\n    return this.http.get<string[]>('/api/Account/Roles');\r\n  }\r\n  public getUserInfo() {\r\n    return this.User.asObservable();\r\n  }\r\n\r\n  public getUserRoles() {\r\n    return this.http.get<string[]>('/api/Account/UserRoles');\r\n  }\r\n\r\n  public isAdmin() {\r\n    return this.data1.asObservable();\r\n  }\r\n\r\n  public ManageRoles(data: AddRemoveUserRoleModel) {\r\n    return this.http.post('/api/Account/ManageRoles', data).toPromise();\r\n  }\r\n\r\n  /**\r\n   * Cierra la sesión actual\r\n   */\r\n  public signOut() {\r\n    sessionStorage.removeItem('accessToken');\r\n    sessionStorage.removeItem('refreshToken');\r\n    sessionStorage.removeItem('userName');\r\n    sessionStorage.removeItem('userId');\r\n    sessionStorage.removeItem('myRoles');\r\n    sessionStorage.removeItem('userRoles');\r\n  }\r\n\r\n  public getUserId(): number {\r\n    return +sessionStorage.getItem('userId');\r\n  }\r\n\r\n  /**\r\n   * Indica si existe el Token de autenticación en el almacenanmiento de sesión.\r\n   */\r\n  public hasToken(): boolean {\r\n    return sessionStorage.getItem('accessToken') ? true : false;\r\n  }\r\n\r\n  /**\r\n   * Direcciona la ruta actual a la ruta en el parametro\r\n   * @param route Ruta de destino\r\n   */\r\n  public goToRoute(route: string = '') {\r\n    this.ngZone.run(() => {\r\n      this.router.navigate([route]);\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, AbstractControl } from '../../../node_modules/@angular/forms';\r\nimport { MatDialogRef } from '../../../node_modules/@angular/material';\r\nimport { UsuariosService } from '../usuarios.service';\r\nimport { DialogIcons } from '../dialog.component';\r\nimport { DialogService } from '../dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-agregar-usuario',\r\n  template: `\r\n  <div style=\"position:relative;\" fxLayout=\"column\">\r\n  <mat-dialog-content>\r\n      <form [formGroup]=\"userForm\" fxLayout=\"column\" fxLayoutAlign=\"center center\" (ngSubmit)=\"onSubmit()\" fxFlexFill>\r\n          <div fxLayout=\"column\">\r\n              <mat-form-field>\r\n                  <input formControlName=\"Nombre\" matInput placeholder=\"Nombre\">\r\n                  <mat-error *ngIf=\"userForm.controls.Nombre.hasError('required')\">\r\n                      El Nombre del usuario es requerido.\r\n                  </mat-error>\r\n              </mat-form-field>\r\n\r\n              <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"5px\">\r\n                  <mat-form-field fxFlex=\"100%\" fxFlex.gt-sm=\"48%\">\r\n                      <input formControlName=\"ApellidoPaterno\" matInput placeholder=\"Apellido Paterno\">\r\n                      <mat-error *ngIf=\"userForm.controls.ApellidoPaterno.hasError('required')\">\r\n                          El Apellido Paterno es requerido.\r\n                      </mat-error>\r\n                  </mat-form-field>\r\n                  <mat-form-field fxFlex=\"100%\" fxFlex.gt-sm=\"48%\">\r\n                      <input formControlName=\"ApellidoMaterno\" matInput placeholder=\"Apellido Materno\">\r\n                      <mat-error *ngIf=\"userForm.controls.ApellidoMaterno.hasError('required')\">\r\n                          El Apellido Materno es requerido.\r\n                      </mat-error>\r\n                  </mat-form-field>\r\n              </div>\r\n\r\n              <mat-form-field>\r\n                  <input type=\"number\" formControlName=\"Clave\" matInput placeholder=\"Clave de Trabajador\">\r\n                  <mat-error *ngIf=\"userForm.controls.Clave.hasError('required')\">\r\n                    La clave es requerida.\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"userForm.controls.Clave.hasError('pattern')\">\r\n                    El valor debe ser numerico y contener al menos 4 digitos.\r\n                  </mat-error>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field>\r\n                  <input type=\"email\" formControlName=\"Email\" matInput placeholder=\"Correo Electronico\">\r\n                  <mat-error *ngIf=\"userForm.controls.Email.hasError('email')\">\r\n                      El Email no es valido.\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"userForm.controls.Email.hasError('required')\">\r\n                      El Email es requerido.\r\n                  </mat-error>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field>\r\n                  <input type=\"password\" formControlName=\"Password\" matInput placeholder=\"Contraseña\">\r\n                  <mat-error *ngIf=\"userForm.controls.Password.hasError('required')\">\r\n                      La contraseña es requerida.\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"userForm.controls.Password.hasError('pattern')\">\r\n                      La contraseña debe contener al menos un digito y una letra Mayuscula y debe ser de mas de 8 caracteres de largo.\r\n                  </mat-error>\r\n              </mat-form-field>\r\n\r\n              <mat-form-field>\r\n                  <input type=\"password\" formControlName=\"ConfirmPassword\" matInput placeholder=\"Confirme Contraseña\">\r\n                  <mat-error *ngIf=\"userForm.controls.ConfirmPassword.hasError('required')\">\r\n                      El confirmacion de la contraseña es requerida.\r\n                  </mat-error>\r\n                  <mat-error *ngIf=\"userForm.controls.ConfirmPassword.hasError('MatchPassword')\">\r\n                      Las contraseñas no coinciden\r\n                  </mat-error>\r\n              </mat-form-field>\r\n              <button type=\"submit\" mat-raised-button color=\"primary\">Registrar</button>\r\n          </div>\r\n      </form>\r\n  </mat-dialog-content>\r\n  <!-- CloseButton -->\r\n  <button class=\"closeButton\" mat-dialog-close tabIndex=\"3\" color=\"warn\" mat-icon-button>\r\n      <mat-icon>close</mat-icon>\r\n  </button>\r\n</div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class AgregarUsuarioComponent implements OnInit {\r\n\r\n  userForm: FormGroup;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AgregarUsuarioComponent>,\r\n    private fb: FormBuilder,\r\n    private dialogService: DialogService,\r\n    private usuariosService: UsuariosService) {\r\n    this.createForm();\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  /**\r\n   * Crea el formulario para agregar un usuario\r\n   */\r\n  createForm() {\r\n    this.userForm = this.fb.group({\r\n      Nombre: ['', Validators.required],\r\n      ApellidoPaterno: ['', Validators.required],\r\n      ApellidoMaterno: ['', Validators.required],\r\n      Email: ['', [Validators.email, Validators.required]],\r\n      Password: ['', [Validators.required, Validators.pattern('^(?=.*\\\\d)[A-Za-z\\\\d#$@!%&*?]{8,}$')]],\r\n      ConfirmPassword: ['', Validators.required],\r\n      Clave: ['', [Validators.required, Validators.pattern('^[0-9]{4,}$')]]\r\n    }, {\r\n        validator: PasswordValidation.MatchPassword\r\n      });\r\n  }\r\n\r\n  /**\r\n * Envia a la API los datos de registro del usuario\r\n */\r\n  onSubmit() {\r\n    if (this.userForm.valid) {\r\n      this.usuariosService.registrar(this.userForm.value)\r\n        .subscribe(success => { this.dialogService.showDialog('Correcto...', 'Se agrego correctamente el usuario, <br />Por favor, confirme el registro mediante el correo electronico que hemos enviado.', { Icon: DialogIcons.Success }); },\r\n          error => {\r\n            this.dialogService.showDialog('Error en los Datos', this.dialogService.getModelError(error), { Icon: DialogIcons.Error });\r\n          }\r\n        );\r\n\r\n    } else {\r\n      this.dialogService.showDialog('Error en los Datos', 'Por favor, complete los campos adecuadamente', { Icon: DialogIcons.Error });\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Clase para comprobar que los password sean correctos\r\n */\r\nexport class PasswordValidation {\r\n  static MatchPassword(AC: AbstractControl) {\r\n    const password = AC.get('Password').value; // to get value in input tag\r\n    const confirmPassword = AC.get('ConfirmPassword').value; // to get value in input tag\r\n    if (password !== confirmPassword) {\r\n      AC.get('ConfirmPassword').setErrors({ MatchPassword: true });\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { BasicInfoUser, UsuariosService, Actions } from '../usuarios.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { DialogService } from '../dialog.service';\r\nimport { DialogIcons, DialogButtonsFlags, DialogResults } from '../dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-manage-roles',\r\n  template: `\r\n  <div fxLayout=\"column\" class=\"mat-typography\">\r\n  <h3>Usuario: {{User.Nombre}}</h3>\r\n  <h3>Email: {{User.Email}}</h3>\r\n  <mat-divider></mat-divider>\r\n  <div mat-dialog-content fxFlex=\"100%\">\r\n      <p>Roles del usuario:</p>\r\n      <mat-chip-list #chipList class=\"mat-chip-list-stacked\" aria-orientation=\"vertical\">\r\n\r\n          <ng-container *ngFor=\"let itm of User.Roles\">\r\n\r\n              <mat-chip color=\"accent\" selected (removed)=\"removeRol(itm)\" [removable]=\"true\">\r\n                  {{itm}}\r\n                  <span style=\"flex: 1 1 100%\"></span>\r\n                  <mat-icon matChipRemove>cancel</mat-icon>\r\n              </mat-chip>\r\n          </ng-container>\r\n      </mat-chip-list>\r\n      <br />\r\n      <div fxLayout=\"row\">\r\n          <p>El rol \"Usuario\" no puede ser removido.</p>\r\n      </div>\r\n  </div>\r\n  <mat-divider></mat-divider>\r\n  <div matDialogActions fxLayout=\"column\">\r\n      <div fxLayout=\"row\" style=\"font-size: 18px;\" fxLayoutGap=\"5px\">\r\n\r\n          <mat-form-field fxFlex>\r\n             <mat-select #rolInput placeholder=\"Rol\"  name=\"rol\">\r\n               <mat-option *ngFor=\"let item of Roles\" [value]=\"item\">\r\n                 {{item}}\r\n               </mat-option>\r\n             </mat-select>\r\n          </mat-form-field>\r\n\r\n          <div fxLayoutAlign=\"center center\" >\r\n              <button [disabled]=\"!rolInput.value\" mat-mini-fab  (click)=\"addRole(rolInput.value)\" color=\"primary\">\r\n                  <mat-icon>add</mat-icon>\r\n              </button>\r\n          </div>\r\n      </div>\r\n      <button mat-stroked-button mat-dialog-close color=\"warn\">Cerrar</button>\r\n  </div>\r\n</div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class ManageRolesComponent implements OnInit {\r\n  User: BasicInfoUser;\r\n  Roles: string[];\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ManageRolesComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: BasicInfoUser,\r\n    private usuariosService: UsuariosService,\r\n    private dialogService: DialogService\r\n  ) {\r\n    this.User = this.data;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.usuariosService.getRolesAvailables().subscribe(u => this.Roles = u);\r\n  }\r\n\r\n  addRole(role: string) {\r\n    if (!this.User.Roles.includes(role)) {\r\n      this.usuariosService.ManageRoles({ UserId: this.User.Id, Action: Actions.Add, Role: role })\r\n        .then(\r\n          val => {\r\n            console.log(val);\r\n            this.User.Roles.push(role);\r\n          },\r\n          err => this.dialogService.showDialog('Error', err.error.Message, { Icon: DialogIcons.Error }));\r\n    }\r\n  }\r\n\r\n  removeRol(role: string) {\r\n    if (role !== 'Usuario') {\r\n      this.dialogService.showDialog(\r\n        'Confirmar',\r\n        'Deasea remover el rol ' + role,\r\n        { Icon: DialogIcons.Question, buttons: DialogButtonsFlags.Yes | DialogButtonsFlags.No })\r\n        .then((resp) => {\r\n          if (resp === DialogResults.Yes) {\r\n            this.usuariosService.ManageRoles({ UserId: this.User.Id, Action: Actions.Remove, Role: role })\r\n              .then(\r\n                val => {\r\n                  console.log(val);\r\n                  const idx = this.User.Roles.indexOf(role);\r\n                  if (idx > -1) {\r\n                    this.User.Roles.splice(idx, 1);\r\n                  }\r\n                },\r\n                err => this.dialogService.showDialog('Error', err.error.Message, { Icon: DialogIcons.Error }));\r\n          }\r\n        });\r\n\r\n    } else {\r\n      this.dialogService.showDialog('Error', 'El rol Usuario no se puede eliminar', { Icon: DialogIcons.Error });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<div style=\\\"position:relative\\\">\\n    <mat-card class=\\\"mat-card-theme mat-primary\\\">\\n      <mat-card-header>\\n        <div mat-card-avatar>\\n          <fa-icon [icon]=\\\"['fas', 'users']\\\" size=\\\"2x\\\"></fa-icon>\\n        </div>\\n        <mat-card-title>Usuarios</mat-card-title>\\n        <mat-card-subtitle>Se muestra la lista de todos los usuarios registrados en la aplicacion</mat-card-subtitle>\\n        <span class=\\\"relleno\\\"></span>\\n        <button mat-mini-fab class=\\\"mat-card-action-button-1\\\" color=\\\"accent\\\" (click)=\\\"addUser()\\\">\\n          <mat-icon>person_add</mat-icon>\\n        </button>\\n      </mat-card-header>\\n      <mat-card-content style=\\\"overflow: auto;\\\">\\n\\n        <mat-table #table [dataSource]=\\\"Usuarios\\\" style=\\\"min-width: 800px;\\\">\\n          <ng-container cdkColumnDef=\\\"Nombre\\\">\\n            <mat-header-cell *cdkHeaderCellDef> Nombre </mat-header-cell>\\n            <mat-cell *cdkCellDef=\\\"let row\\\"> {{row.Nombre}} </mat-cell>\\n          </ng-container>\\n\\n          <ng-container cdkColumnDef=\\\"Email\\\">\\n            <mat-header-cell *cdkHeaderCellDef> Correo </mat-header-cell>\\n            <mat-cell *cdkCellDef=\\\"let row\\\"> {{row.Email}} </mat-cell>\\n          </ng-container>\\n\\n          <ng-container cdkColumnDef=\\\"EmailConfirmed\\\">\\n            <mat-header-cell *cdkHeaderCellDef fxFlex=\\\"120px\\\"> Email Confirmado </mat-header-cell>\\n            <mat-cell *cdkCellDef=\\\"let row\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"120px\\\">\\n              <fa-icon [style.color]=\\\"row.EmailConfirmed ? '#4caf50': '#f44336'\\\" [icon]=\\\"['fas', row.EmailConfirmed ? 'check': 'times' ]\\\"></fa-icon>\\n              <!-- <mat-checkbox disabled=\\\"true\\\" [checked]=\\\"row.EmailConfirmed\\\"></mat-checkbox> -->\\n            </mat-cell>\\n          </ng-container>\\n          <ng-container cdkColumnDef=\\\"Roles\\\">\\n            <mat-header-cell *cdkHeaderCellDef fxFlex=\\\"250px\\\" fxLayoutAlign=\\\"center center\\\"> Roles </mat-header-cell>\\n            <mat-cell *cdkCellDef=\\\"let row\\\" fxFlex=\\\"250px\\\" fxLayoutAlign=\\\"center center\\\">\\n              <ul style=\\\"list-style: none;\\\" fxFlex=\\\"200px\\\">\\n                <li *ngFor=\\\"let itm of row.Roles\\\">{{itm}}</li>\\n              </ul>\\n              <button mat-icon-button color=\\\"primary\\\" (click)=\\\"editRoles(row)\\\">\\n                <fa-icon [icon]=\\\"['fas','edit']\\\"></fa-icon>\\n              </button>\\n            </mat-cell>\\n          </ng-container>\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n          <mat-row *matRowDef=\\\"let row; columns:displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n\"","module.exports = \"\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { BasicInfoUser, UsuariosService, UserInfo } from '../usuarios.service';\r\nimport { MatDialog } from '@angular/material';\r\nimport { AgregarUsuarioComponent } from './agregar-usuario.component';\r\nimport { ManageRolesComponent } from './manage-roles.component';\r\nimport { Subscriber, Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'adm-usuarios.cc',\r\n  templateUrl: './usuarios.component.html',\r\n  styleUrls: ['./usuarios.component.scss'],\r\n})\r\nexport class UsuariosComponent implements OnInit, OnDestroy {\r\n  Usuarios: BasicInfoUser[];\r\n  displayedColumns: string[] = ['Nombre', 'Email', 'EmailConfirmed', 'Roles'];\r\n\r\n  constructor(private usuarioService: UsuariosService, private dialog: MatDialog) {\r\n    if (this.usuarioService.isAdmin()) {\r\n      this.refreshUsers();\r\n    } else {\r\n      this.usuarioService.goToRoute();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  ngOnDestroy() {}\r\n\r\n  private async refreshUsers() {\r\n    this.Usuarios = await this.usuarioService.GetUsers().toPromise();\r\n  }\r\n  addUser() {\r\n    const ref = this.dialog.open(AgregarUsuarioComponent, { disableClose: true });\r\n    ref.afterClosed().subscribe(() => {\r\n      this.refreshUsers();\r\n    });\r\n  }\r\n  editRoles(user: UserInfo) {\r\n    const ref = this.dialog.open(ManageRolesComponent, { disableClose: true, data: user });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}